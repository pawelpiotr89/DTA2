package dta2;

import static dta2.Abaddon.direAbaddon;
import static dta2.Abaddon.icon36;
import static dta2.Abaddon.nazwaAbaddon;
import static dta2.Abaddon.radiantAbaddon;
import static dta2.Alchemist.direAlchemist;
import static dta2.Alchemist.icon10;
import static dta2.Alchemist.nazwaAlchemist;
import static dta2.Alchemist.radiantAlchemist;
import static dta2.AncientApparition.direAncientApparition;
import static dta2.AncientApparition.icon106;
import static dta2.AncientApparition.nazwaAncientApparition;
import static dta2.AncientApparition.radiantAncientApparition;
import static dta2.AntiMage.direAntiMage;
import static dta2.AntiMage.icon37;
import static dta2.AntiMage.nazwaAntiMage;
import static dta2.AntiMage.radiantAntiMage;
import static dta2.ArcWarden.direArcWarden;
import static dta2.ArcWarden.icon112;
import static dta2.ArcWarden.nazwaArcWarden;
import static dta2.ArcWarden.radiantArcWarden;
import static dta2.Axe.direAxe;
import static dta2.Axe.icon22;
import static dta2.Axe.nazwaAxe;
import static dta2.Axe.radiantAxe;
import static dta2.Bane.direBane;
import static dta2.Bane.icon92;
import static dta2.Bane.nazwaBane;
import static dta2.Bane.radiantBane;
import static dta2.Batrider.direBatrider;
import static dta2.Batrider.icon105;
import static dta2.Batrider.nazwaBatrider;
import static dta2.Batrider.radiantBatrider;
import static dta2.Beastmaster.direBeastmaster;
import static dta2.Beastmaster.icon6;
import static dta2.Beastmaster.nazwaBeastmaster;
import static dta2.Beastmaster.radiantBeastmaster;
import static dta2.Bloodseeker.direBloodseeker;
import static dta2.Bloodseeker.icon55;
import static dta2.Bloodseeker.nazwaBloodseeker;
import static dta2.Bloodseeker.radiantBloodseeker;
import static dta2.BountyHunter.direBountyHunter;
import static dta2.BountyHunter.icon48;
import static dta2.BountyHunter.nazwaBountyHunter;
import static dta2.BountyHunter.radiantBountyHunter;
import static dta2.Brewmaster.direBrewmaster;
import static dta2.Brewmaster.icon11;
import static dta2.Brewmaster.nazwaBrewmaster;
import static dta2.Brewmaster.radiantBrewmaster;
import static dta2.Bristleback.direBristleback;
import static dta2.Bristleback.icon16;
import static dta2.Bristleback.nazwaBristleback;
import static dta2.Bristleback.radiantBristleback;
import static dta2.Broodmother.direBroodmother;
import static dta2.Broodmother.icon63;
import static dta2.Broodmother.nazwaBroodmother;
import static dta2.Broodmother.radiantBroodmother;
import static dta2.CentaurWarrunner.direCentaurWarrunner;
import static dta2.CentaurWarrunner.icon14;
import static dta2.CentaurWarrunner.nazwaCentaurWarrunner;
import static dta2.CentaurWarrunner.radiantCentaurWarrunner;
import static dta2.ChaosKnight.direChaosKnight;
import static dta2.ChaosKnight.icon33;
import static dta2.ChaosKnight.nazwaChaosKnight;
import static dta2.ChaosKnight.radiantChaosKnight;
import static dta2.Chen.direChen;
import static dta2.Chen.icon83;
import static dta2.Chen.nazwaChen;
import static dta2.Chen.radiantChen;
import static dta2.Clinkz.direClinkz;
import static dta2.Clinkz.icon62;
import static dta2.Clinkz.nazwaClinkz;
import static dta2.Clinkz.radiantClinkz;
import static dta2.Clockwerk.direClockwerk;
import static dta2.Clockwerk.icon8;
import static dta2.Clockwerk.nazwaClockwerk;
import static dta2.Clockwerk.radiantClockwerk;
import static dta2.CrystalMaiden.direCrystalMaiden;
import static dta2.CrystalMaiden.icon71;
import static dta2.CrystalMaiden.nazwaCrystalMaiden;
import static dta2.CrystalMaiden.radiantCrystalMaiden;
import static dta2.DarkSeer.direDarkSeer;
import static dta2.DarkSeer.icon104;
import static dta2.DarkSeer.nazwaDarkSeer;
import static dta2.DarkSeer.radiantDarkSeer;
import static dta2.Dazzle.direDazzle;
import static dta2.Dazzle.icon102;
import static dta2.Dazzle.nazwaDazzle;
import static dta2.Dazzle.radiantDazzle;
import static dta2.DeathProphet.direDeathProphet;
import static dta2.DeathProphet.icon100;
import static dta2.DeathProphet.nazwaDeathProphet;
import static dta2.DeathProphet.radiantDeathProphet;
import static dta2.DirePostac1.direPostacA;
import static dta2.DirePostac1.direNazwa1;
import static dta2.DirePostac2.direPostacB;
import static dta2.DirePostac2.direNazwa2;
import static dta2.DirePostac3.direPostacC;
import static dta2.DirePostac3.direNazwa3;
import static dta2.DirePostac4.direPostacD;
import static dta2.DirePostac4.direNazwa4;
import static dta2.DirePostac5.direPostacE;
import static dta2.DirePostac5.direNazwa5;
import static dta2.Disruptor.direDisruptor;
import static dta2.Disruptor.icon87;
import static dta2.Disruptor.nazwaDisruptor;
import static dta2.Disruptor.radiantDisruptor;
import static dta2.Doom.direDoom;
import static dta2.Doom.icon30;
import static dta2.Doom.nazwaDoom;
import static dta2.Doom.radiantDoom;
import static dta2.DragonKnight.direDk;
import static dta2.DragonKnight.icon7;
import static dta2.DragonKnight.nazwaDk;
import static dta2.DragonKnight.radiantDk;
import static dta2.DrowRanger.direDrowRanger;
import static dta2.DrowRanger.icon38;
import static dta2.DrowRanger.nazwaDrowRanger;
import static dta2.DrowRanger.radiantDrowRanger;
import static dta2.EarthShaker.direEs;
import static dta2.EarthShaker.icon1;
import static dta2.EarthShaker.radiantEs;
import static dta2.EarthShaker.nazwaEs;
import static dta2.EarthSpirit.direEarthSpirit;
import static dta2.EarthSpirit.icon20;
import static dta2.EarthSpirit.nazwaEarthSpirit;
import static dta2.EarthSpirit.radiantEarthSpirit;
import static dta2.ElderTitan.direElderTitan;
import static dta2.ElderTitan.icon18;
import static dta2.ElderTitan.nazwaElderTitan;
import static dta2.ElderTitan.radiantElderTitan;
import static dta2.EmberSpirit.direEmberSpirit;
import static dta2.EmberSpirit.icon54;
import static dta2.EmberSpirit.nazwaEmberSpirit;
import static dta2.EmberSpirit.radiantEmberSpirit;
import static dta2.Enchantress.direEnchantress;
import static dta2.Enchantress.icon80;
import static dta2.Enchantress.nazwaEnchantress;
import static dta2.Enchantress.radiantEnchantress;
import static dta2.Enigma.direEnigma;
import static dta2.Enigma.icon96;
import static dta2.Enigma.nazwaEnigma;
import static dta2.Enigma.radiantEnigma;
import static dta2.Gyrocopter.direGyrocopter;
import static dta2.Gyrocopter.icon50;
import static dta2.Gyrocopter.nazwaGyrocopter;
import static dta2.Gyrocopter.radiantGyrocopter;
import static dta2.Huskar.direHuskar;
import static dta2.Huskar.icon9;
import static dta2.Huskar.nazwaHuskar;
import static dta2.Huskar.radiantHuskar;
import static dta2.Invoker.direInvoker;
import static dta2.Invoker.icon107;
import static dta2.Invoker.nazwaInvoker;
import static dta2.Invoker.radiantInvoker;
import static dta2.Io.direIo;
import static dta2.Io.icon13;
import static dta2.Io.nazwaIo;
import static dta2.Io.radiantIo;
import static dta2.Jakiro.direJakiro;
import static dta2.Jakiro.icon81;
import static dta2.Jakiro.nazwaJakiro;
import static dta2.Jakiro.radiantJakiro;
import static dta2.Juggernaut.direJuggernaut;
import static dta2.Juggernaut.icon39;
import static dta2.Juggernaut.nazwaJuggernaut;
import static dta2.Juggernaut.radiantJuggernaut;
import static dta2.KeeperOfTheLight.direKeeperOfTheLight;
import static dta2.KeeperOfTheLight.icon88;
import static dta2.KeeperOfTheLight.nazwaKeeperOfTheLight;
import static dta2.KeeperOfTheLight.radiantKeeperOfTheLight;
import static dta2.Kunkka.direKunkka;
import static dta2.Kunkka.icon5;
import static dta2.Kunkka.nazwaKunkka;
import static dta2.Kunkka.radiantKunkka;
import static dta2.LegionCommander.direLegionCommander;
import static dta2.LegionCommander.icon19;
import static dta2.LegionCommander.nazwaLegionCommander;
import static dta2.LegionCommander.radiantLegionCommander;
import static dta2.Leshrac.direLeshrac;
import static dta2.Leshrac.icon103;
import static dta2.Leshrac.nazwaLeshrac;
import static dta2.Leshrac.radiantLeshrac;
import static dta2.Lich.direLich;
import static dta2.Lich.icon93;
import static dta2.Lich.nazwaLich;
import static dta2.Lich.radiantLich;
import static dta2.LifeStealer.direLifeStealer;
import static dta2.LifeStealer.icon28;
import static dta2.LifeStealer.nazwaLifeStealer;
import static dta2.LifeStealer.radiantLifeStealer;
import static dta2.Lina.direLina;
import static dta2.Lina.icon76;
import static dta2.Lina.nazwaLina;
import static dta2.Lina.radiantLina;
import static dta2.Lion.direLion;
import static dta2.Lion.icon94;
import static dta2.Lion.nazwaLion;
import static dta2.Lion.radiantLion;
import static dta2.LoneDruid.direLoneDruid;
import static dta2.LoneDruid.icon51;
import static dta2.LoneDruid.nazwaLoneDruid;
import static dta2.LoneDruid.radiantLoneDruid;
import static dta2.Luna.direLuna;
import static dta2.Luna.icon47;
import static dta2.Luna.nazwaLuna;
import static dta2.Luna.radiantLuna;
import static dta2.Lycan.direLycan;
import static dta2.Lycan.icon32;
import static dta2.Lycan.nazwaLycan;
import static dta2.Lycan.radiantLycan;
import static dta2.Magnus.direMagnus;
import static dta2.Magnus.icon35;
import static dta2.Magnus.nazwaMagnus;
import static dta2.Magnus.radiantMagnus;
import static dta2.Medusa.direMedusa;
import static dta2.Medusa.icon69;
import static dta2.Medusa.nazwaMedusa;
import static dta2.Medusa.radiantMedusa;
import static dta2.Meepo.direMeepo;
import static dta2.Meepo.icon66;
import static dta2.Meepo.nazwaMeepo;
import static dta2.Meepo.radiantMeepo;
import static dta2.Mirana.direMirana;
import static dta2.Mirana.icon40;
import static dta2.Mirana.nazwaMirana;
import static dta2.Mirana.radiantMirana;
import static dta2.Morphling.direMorphling;
import static dta2.Morphling.icon41;
import static dta2.Morphling.nazwaMorphling;
import static dta2.Morphling.radiantMorphling;
import static dta2.NagaSiren.direNagaSiren;
import static dta2.NagaSiren.icon52;
import static dta2.NagaSiren.nazwaNagaSiren;
import static dta2.NagaSiren.radiantNagaSiren;
import static dta2.NaturesProphet.direNaturesProphet;
import static dta2.NaturesProphet.icon79;
import static dta2.NaturesProphet.nazwaNaturesProphet;
import static dta2.NaturesProphet.radiantNaturesProphet;
import static dta2.Necrophos.direNecrophos;
import static dta2.Necrophos.icon97;
import static dta2.Necrophos.nazwaNecrophos;
import static dta2.Necrophos.radiantNecrophos;
import static dta2.NightStalker.direNightStalker;
import static dta2.NightStalker.icon29;
import static dta2.NightStalker.nazwaNightStalker;
import static dta2.NightStalker.radiantNightStalker;
import static dta2.NyxAssassin.direNyxAssassin;
import static dta2.NyxAssassin.icon67;
import static dta2.NyxAssassin.nazwaNyxAssassin;
import static dta2.NyxAssassin.radiantNyxAssassin;
import static dta2.OgreMagi.direOgreMagi;
import static dta2.OgreMagi.icon85;
import static dta2.OgreMagi.nazwaOgreMagi;
import static dta2.OgreMagi.radiantOgreMagi;
import static dta2.Omni.direOmniknight;
import static dta2.Omni.icon3;
import static dta2.Omni.nazwaOmniknight;
import static dta2.Omni.radiantOmniknight;
import static dta2.Oracle.direOracle;
import static dta2.Oracle.icon90;
import static dta2.Oracle.nazwaOracle;
import static dta2.Oracle.radiantOracle;
import static dta2.OutworldDevourer.direOutworldDevourer;
import static dta2.OutworldDevourer.icon108;
import static dta2.OutworldDevourer.nazwaOutworldDevourer;
import static dta2.OutworldDevourer.radiantOutworldDevourer;
import static dta2.PhantomAssassin.direPhantomAssassin;
import static dta2.PhantomAssassin.icon60;
import static dta2.PhantomAssassin.nazwaPhantomAssassin;
import static dta2.PhantomAssassin.radiantPhantomAssassin;
import static dta2.PhantomLancer.direPhantomLancer;
import static dta2.PhantomLancer.icon42;
import static dta2.PhantomLancer.nazwaPhantomLancer;
import static dta2.PhantomLancer.radiantPhantomLancer;
import static dta2.Phoenix.direPhoenix;
import static dta2.Phoenix.icon21;
import static dta2.Phoenix.nazwaPhoenix;
import static dta2.Phoenix.radiantPhoenix;
import static dta2.Puck.direPuck;
import static dta2.Puck.icon72;
import static dta2.Puck.nazwaPuck;
import static dta2.Puck.radiantPuck;
import static dta2.Pudge.direPudge;
import static dta2.Pudge.icon23;
import static dta2.Pudge.nazwaPudge;
import static dta2.Pudge.radiantPudge;
import static dta2.Pugna.direPugna;
import static dta2.Pugna.icon101;
import static dta2.Pugna.nazwaPugna;
import static dta2.Pugna.radiantPugna;
import static dta2.QueenOfPain.direQueenOfPain;
import static dta2.QueenOfPain.icon99;
import static dta2.QueenOfPain.nazwaQueenOfPain;
import static dta2.QueenOfPain.radiantQueenOfPain;
import static dta2.RadiantPostac1.radiantPostacA;
import static dta2.RadiantPostac1.radiantNazwa1;
import static dta2.RadiantPostac2.radiantNazwa2;
import static dta2.RadiantPostac2.radiantPostacB;
import static dta2.RadiantPostac3.radiantNazwa3;
import static dta2.RadiantPostac3.radiantPostacC;
import static dta2.RadiantPostac4.radiantNazwa4;
import static dta2.RadiantPostac4.radiantPostacD;
import static dta2.RadiantPostac5.radiantNazwa5;
import static dta2.RadiantPostac5.radiantPostacE;
import static dta2.Razor.direRazor;
import static dta2.Razor.icon57;
import static dta2.Razor.nazwaRazor;
import static dta2.Razor.radiantRazor;
import static dta2.Riki.direRiki;
import static dta2.Riki.icon44;
import static dta2.Riki.nazwaRiki;
import static dta2.Riki.radiantRiki;
import static dta2.Rubick.direRubick;
import static dta2.Rubick.icon86;
import static dta2.Rubick.nazwaRubick;
import static dta2.Rubick.radiantRubick;
import static dta2.SandKing.direSandKing;
import static dta2.SandKing.icon24;
import static dta2.SandKing.nazwaSandKing;
import static dta2.SandKing.radiantSandKing;
import static dta2.ShadowDemon.direShadowDemon;
import static dta2.ShadowDemon.icon109;
import static dta2.ShadowDemon.nazwaShadowDemon;
import static dta2.ShadowDemon.radiantShadowDemon;
import static dta2.ShadowFiend.direShadowFiend;
import static dta2.ShadowFiend.icon56;
import static dta2.ShadowFiend.nazwaShadowFiend;
import static dta2.ShadowFiend.radiantShadowFiend;
import static dta2.ShadowShaman.direShadowShaman;
import static dta2.ShadowShaman.icon77;
import static dta2.ShadowShaman.nazwaShadowShaman;
import static dta2.ShadowShaman.radiantShadowShaman;
import static dta2.Silencer.direSilencer;
import static dta2.Silencer.icon84;
import static dta2.Silencer.nazwaSilencer;
import static dta2.Silencer.radiantSilencer;
import static dta2.SkywrathMage.direSkywrathMage;
import static dta2.SkywrathMage.icon89;
import static dta2.SkywrathMage.nazwaSkywrathMage;
import static dta2.SkywrathMage.radiantSkywrathMage;
import static dta2.Slardar.direSlardar;
import static dta2.Slardar.icon25;
import static dta2.Slardar.nazwaSlardar;
import static dta2.Slardar.radiantSlardar;
import static dta2.Slark.direSlark;
import static dta2.Slark.icon68;
import static dta2.Slark.nazwaSlark;
import static dta2.Slark.radiantSlark;
import static dta2.Sniper.direSniper;
import static dta2.Sniper.icon45;
import static dta2.Sniper.nazwaSniper;
import static dta2.Sniper.radiantSniper;
import static dta2.Spectre.direSpectre;
import static dta2.Spectre.icon65;
import static dta2.Spectre.nazwaSpectre;
import static dta2.Spectre.radiantSpectre;
import static dta2.SpiritBreaker.direSpiritBreaker;
import static dta2.SpiritBreaker.icon31;
import static dta2.SpiritBreaker.nazwaSpiritBreaker;
import static dta2.SpiritBreaker.radiantSpiritBreaker;
import static dta2.StormSpirit.direStormSpirit;
import static dta2.StormSpirit.icon73;
import static dta2.StormSpirit.nazwaStormSpirit;
import static dta2.StormSpirit.radiantStormSpirit;
import static dta2.Sven.direSven;
import static dta2.Sven.icon2;
import static dta2.Sven.nazwaSven;
import static dta2.Sven.radiantSven;
import static dta2.Techies.direTechies;
import static dta2.Techies.icon91;
import static dta2.Techies.nazwaTechies;
import static dta2.Techies.radiantTechies;
import static dta2.TemplarAssassin.direTemplarAssassin;
import static dta2.TemplarAssassin.icon46;
import static dta2.TemplarAssassin.nazwaTemplarAssassin;
import static dta2.TemplarAssassin.radiantTemplarAssassin;
import static dta2.Terrorblade.direTerrorblade;
import static dta2.Terrorblade.icon70;
import static dta2.Terrorblade.nazwaTerrorblade;
import static dta2.Terrorblade.radiantTerrorblade;
import static dta2.Tidehunter.direTidehunter;
import static dta2.Tidehunter.icon26;
import static dta2.Tidehunter.nazwaTidehunter;
import static dta2.Tidehunter.radiantTidehunter;
import static dta2.Timbersaw.direTimbersaw;
import static dta2.Timbersaw.icon15;
import static dta2.Timbersaw.nazwaTimbersaw;
import static dta2.Timbersaw.radiantTimbersaw;
import static dta2.Tinker.direTinker;
import static dta2.Tinker.icon78;
import static dta2.Tinker.nazwaTinker;
import static dta2.Tinker.radiantTinker;
import static dta2.Tiny.direTiny;
import static dta2.Tiny.nazwaTiny;
import static dta2.Tiny.radiantTiny;
import static dta2.Tiny.icon4;
import static dta2.TreantProtector.direTreantProtector;
import static dta2.TreantProtector.icon12;
import static dta2.TreantProtector.nazwaTreantProtector;
import static dta2.TreantProtector.radiantTreantProtector;
import static dta2.TrollWarlord.direTrollWarlord;
import static dta2.TrollWarlord.icon53;
import static dta2.TrollWarlord.nazwaTrollWarlord;
import static dta2.TrollWarlord.radiantTrollWarlord;
import static dta2.Tusk.direTusk;
import static dta2.Tusk.icon17;
import static dta2.Tusk.nazwaTusk;
import static dta2.Tusk.radiantTusk;
import static dta2.Undying.direUndying;
import static dta2.Undying.icon34;
import static dta2.Undying.nazwaUndying;
import static dta2.Undying.radiantUndying;
import static dta2.Ursa.direUrsa;
import static dta2.Ursa.icon49;
import static dta2.Ursa.nazwaUrsa;
import static dta2.Ursa.radiantUrsa;
import static dta2.VengefulSpirit.direVengefulSpirit;
import static dta2.VengefulSpirit.icon43;
import static dta2.VengefulSpirit.nazwaVengefulSpirit;
import static dta2.VengefulSpirit.radiantVengefulSpirit;
import static dta2.Venomancer.direVenomancer;
import static dta2.Venomancer.icon58;
import static dta2.Venomancer.nazwaVenomancer;
import static dta2.Venomancer.radiantVenomancer;
import static dta2.Viper.direViper;
import static dta2.Viper.icon61;
import static dta2.Viper.nazwaViper;
import static dta2.Viper.radiantViper;
import static dta2.Visage.direVisage;
import static dta2.Visage.icon110;
import static dta2.Visage.nazwaVisage;
import static dta2.Visage.radiantVisage;
import static dta2.VoidB.direVoid;
import static dta2.VoidB.icon59;
import static dta2.VoidB.nazwaVoid;
import static dta2.VoidB.radiantVoid;
import static dta2.Warlock.direWarlock;
import static dta2.Warlock.icon98;
import static dta2.Warlock.nazwaWarlock;
import static dta2.Warlock.radiantWarlock;
import static dta2.Weaver.direWeaver;
import static dta2.Weaver.icon64;
import static dta2.Weaver.nazwaWeaver;
import static dta2.Weaver.radiantWeaver;
import static dta2.WinRatioPrzycisk.przyciskAdd;
import static dta2.Windranger.direWindranger;
import static dta2.Windranger.icon74;
import static dta2.Windranger.nazwaWindranger;
import static dta2.Windranger.radiantWindranger;
import static dta2.WinterWyvern.direWinterWyvern;
import static dta2.WinterWyvern.icon111;
import static dta2.WinterWyvern.nazwaWinterWyvern;
import static dta2.WinterWyvern.radiantWinterWyvern;
import static dta2.WitchDoctor.direWitchDoctor;
import static dta2.WitchDoctor.icon95;
import static dta2.WitchDoctor.nazwaWitchDoctor;
import static dta2.WitchDoctor.radiantWitchDoctor;
import static dta2.WraithKing.direWraithKing;
import static dta2.WraithKing.icon27;
import static dta2.WraithKing.nazwaWraithKing;
import static dta2.WraithKing.radiantWraithKing;
import static dta2.Zeus.direZeus;
import static dta2.Zeus.icon75;
import static dta2.Zeus.nazwaZeus;
import static dta2.Zeus.radiantZeus;
import java.awt.*;
import java.awt.event.MouseAdapter;
import javax.swing.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

import java.util.Scanner;
/**
 *
 * @author Roxven
 */

//
//
//Tworzenie panelu glownego i dodawanie komponentow
//
//
//

public class PanelGlowny extends JPanel{
    
    boolean radiantW = false;
    boolean direW = false;
            
    int iloscBohaterow = 111;
    
    double rH1 = 0;
    double rH2 = 0;
    double rH3 = 0;
    double rH4 = 0;
    double rH5 = 0;
        
    double dH1 = 0;
    double dH2 = 0;
    double dH3 = 0;
    double dH4 = 0;
    double dH5 = 0;
    
    double dodaj = 0;
    double odejmij = 0;
    
    double rWC = 0;
    double rWC1 = 0;
    double rWC2 = 0;
    double rWC3 = 0;
          
    double dWC = 0;
    double dWC1 = 0;
    double dWC2 = 0;
    double dWC3 = 0;
    
    double roznica = 0;
    double roznicaA = 0;
    double roznica1 = 0;
    double podzielnik = 0;
    double podzielnik1 = 0;
    double podzielnikOstateczny = 0;
    double podzielnikOstateczny1 = 0;
    double podzielnikOstateczny2 = 0;
    double podzielnikOstateczny3 = 0;
   
    
    double radiantWynik = 0;
    double radiantWynik1 = 0;
    double radiantWynik2 = 0;
    double radiantWynikOst = 0;
    double direWynik = 0;
    double direWynik1 = 0;
    double direWynik2 = 0;
    double direWynikOst = 0;
    
    private final int t = 1;
    
    String radiantWCS = "";
    String direWCS = "";
    
    String wartoscHeroR = "";
    String nazwaHeroR = "";
    String wartoscHeroD = "";
    String nazwaHeroD = "";
    
    String odjecieRadiantPick = "";
    String odjecieRadiantPickS = "";
    String odjecieRadiantAvoid = "";
    String odjecieRadiantAvoidS = "";
    String odjecieDirePick = "";
    String odjecieDirePickS = "";
    String odjecieDireAvoid = "";
    String odjecieDireAvoidS = "";
    
    URL imgRU1 = PanelGlowny.class.getResource("radiantusuniecie.png");
    URL imgDU1 = PanelGlowny.class.getResource("direusuniecie.png");
    
    ImageIcon iconRU = new ImageIcon(imgRU1);
    ImageIcon iconDU = new ImageIcon(imgDU1);
    
    GridBagConstraints c = new GridBagConstraints();
    
    ArrayList<Double> addWinRates = new ArrayList<>();
    ArrayList<Double> heroWinRateListRadiant = new ArrayList<>();
    ArrayList<Double> heroWinRateListRadiantCopy = new ArrayList<>();
    ArrayList<Double> heroWinRateListRadiantRound = new ArrayList<>();
    ArrayList<Double> heroWinRateListDire = new ArrayList<>();
    ArrayList<Double> heroWinRateListDireCopy = new ArrayList<>();
    ArrayList<Double> heroWinRateListDireRound = new ArrayList<>();
    ArrayList<String> sortowanieWinRateListRadiantNazwy = new ArrayList<>();
    ArrayList<String> sortowanieWinRateListDireNazwy = new ArrayList<>();
    ArrayList<String> sortowanieWinRateListRadiantNazwyHerosow = new ArrayList<>();
    ArrayList<String> sortowanieWinRateListDireNazwyHerosow = new ArrayList<>();
    ArrayList<String> sortowanieWinRateListRadiantWartosciNazwy = new ArrayList<>();
    ArrayList<String> sortowanieWinRateListDireWartosciNazwy = new ArrayList<>();
    ArrayList<String> bestToPickRadiant = new ArrayList<>();
    ArrayList<String> bestToAvoidRadiant = new ArrayList<>();
    ArrayList<String> bestToPickDire = new ArrayList<>();
    ArrayList<String> bestToAvoidDire = new ArrayList<>();
     
    ArrayList<Double> abaddonAnti = new ArrayList<>();
    ArrayList<Double> abaddonKoop = new ArrayList<>();
    ArrayList<Double> alchemistAnti = new ArrayList<>();
    ArrayList<Double> alchemistKoop = new ArrayList<>();
    ArrayList<Double> ancientApparitionAnti = new ArrayList<>();
    ArrayList<Double> ancientApparitionKoop = new ArrayList<>();
    ArrayList<Double> antiMageAnti = new ArrayList<>();
    ArrayList<Double> antiMageKoop = new ArrayList<>();
    ArrayList<Double> arcWardenAnti = new ArrayList<>();
    ArrayList<Double> arcWardenKoop = new ArrayList<>();
    ArrayList<Double> axeAnti = new ArrayList<>();
    ArrayList<Double> axeKoop = new ArrayList<>();
    ArrayList<Double> baneAnti = new ArrayList<>();
    ArrayList<Double> baneKoop = new ArrayList<>();
    ArrayList<Double> batriderAnti = new ArrayList<>();
    ArrayList<Double> batriderKoop = new ArrayList<>();
    ArrayList<Double> beastmasterAnti = new ArrayList<>();
    ArrayList<Double> beastmasterKoop = new ArrayList<>();
    ArrayList<Double> bloodseekerAnti = new ArrayList<>();
    ArrayList<Double> bloodseekerKoop = new ArrayList<>();
    ArrayList<Double> bountyHunterAnti = new ArrayList<>();
    ArrayList<Double> bountyHunterKoop = new ArrayList<>();
    ArrayList<Double> brewmasterAnti = new ArrayList<>();
    ArrayList<Double> brewmasterKoop = new ArrayList<>();
    ArrayList<Double> bristlebackAnti = new ArrayList<>();
    ArrayList<Double> bristlebackKoop = new ArrayList<>();
    ArrayList<Double> broodmotherAnti = new ArrayList<>();
    ArrayList<Double> broodmotherKoop = new ArrayList<>();
    ArrayList<Double> centaurWarrunnerAnti = new ArrayList<>();
    ArrayList<Double> centaurWarrunnerKoop = new ArrayList<>();
    ArrayList<Double> chaosKnightAnti = new ArrayList<>();
    ArrayList<Double> chaosKnightKoop = new ArrayList<>();
    ArrayList<Double> chenAnti = new ArrayList<>();
    ArrayList<Double> chenKoop = new ArrayList<>();
    ArrayList<Double> clinkzAnti = new ArrayList<>();
    ArrayList<Double> clinkzKoop = new ArrayList<>();
    ArrayList<Double> clockwerkAnti = new ArrayList<>();
    ArrayList<Double> clockwerkKoop = new ArrayList<>();
    ArrayList<Double> crystalMaidenAnti = new ArrayList<>();
    ArrayList<Double> crystalMaidenKoop = new ArrayList<>();
    ArrayList<Double> darkSeerAnti = new ArrayList<>();
    ArrayList<Double> darkSeerKoop = new ArrayList<>();
    ArrayList<Double> dazzleAnti = new ArrayList<>();
    ArrayList<Double> dazzleKoop = new ArrayList<>();
    ArrayList<Double> deathProphetAnti = new ArrayList<>();
    ArrayList<Double> deathProphetKoop = new ArrayList<>();
    ArrayList<Double> disruptorAnti = new ArrayList<>();
    ArrayList<Double> disruptorKoop = new ArrayList<>();
    ArrayList<Double> doomAnti = new ArrayList<>();
    ArrayList<Double> doomKoop = new ArrayList<>();
    ArrayList<Double> dKAnti = new ArrayList<>();
    ArrayList<Double> dKKoop = new ArrayList<>();
    ArrayList<Double> drowRangerAnti = new ArrayList<>();
    ArrayList<Double> drowRangerKoop = new ArrayList<>();
    ArrayList<Double> earthSpiritAnti = new ArrayList<>();
    ArrayList<Double> earthSpiritKoop = new ArrayList<>();
    ArrayList<Double> eSAnti = new ArrayList<>();
    ArrayList<Double> eSKoop = new ArrayList<>();
    ArrayList<Double> elderTitanAnti = new ArrayList<>();
    ArrayList<Double> elderTitanKoop = new ArrayList<>();
    ArrayList<Double> emberSpiritAnti = new ArrayList<>();
    ArrayList<Double> emberSpiritKoop = new ArrayList<>();
    ArrayList<Double> enchantressAnti = new ArrayList<>();
    ArrayList<Double> enchantressKoop = new ArrayList<>();
    ArrayList<Double> enigmaAnti = new ArrayList<>();
    ArrayList<Double> enigmaKoop = new ArrayList<>();
    ArrayList<Double> gyrocopterAnti = new ArrayList<>();
    ArrayList<Double> gyrocopterKoop = new ArrayList<>();
    ArrayList<Double> huskarAnti = new ArrayList<>();
    ArrayList<Double> huskarKoop = new ArrayList<>();
    ArrayList<Double> invokerAnti = new ArrayList<>();
    ArrayList<Double> invokerKoop = new ArrayList<>();
    ArrayList<Double> ioAnti = new ArrayList<>();
    ArrayList<Double> ioKoop = new ArrayList<>();
    ArrayList<Double> jakiroAnti = new ArrayList<>();
    ArrayList<Double> jakiroKoop = new ArrayList<>();
    ArrayList<Double> juggernautAnti = new ArrayList<>();
    ArrayList<Double> juggernautKoop = new ArrayList<>();
    ArrayList<Double> keeperOfTheLightAnti = new ArrayList<>();
    ArrayList<Double> keeperOfTheLightKoop = new ArrayList<>();
    ArrayList<Double> kunkkaAnti = new ArrayList<>();
    ArrayList<Double> kunkkaKoop = new ArrayList<>();
    ArrayList<Double> legionCommanderAnti = new ArrayList<>();
    ArrayList<Double> legionCommanderKoop = new ArrayList<>();
    ArrayList<Double> leshracAnti = new ArrayList<>();
    ArrayList<Double> leshracKoop = new ArrayList<>();
    ArrayList<Double> lichAnti = new ArrayList<>();
    ArrayList<Double> lichKoop = new ArrayList<>();
    ArrayList<Double> lifeStealerAnti = new ArrayList<>();
    ArrayList<Double> lifeStealerKoop = new ArrayList<>();
    ArrayList<Double> linaAnti = new ArrayList<>();
    ArrayList<Double> linaKoop = new ArrayList<>();
    ArrayList<Double> lionAnti = new ArrayList<>();
    ArrayList<Double> lionKoop = new ArrayList<>();
    ArrayList<Double> loneDruidAnti = new ArrayList<>();
    ArrayList<Double> loneDruidKoop = new ArrayList<>();
    ArrayList<Double> lunaAnti = new ArrayList<>();
    ArrayList<Double> lunaKoop = new ArrayList<>();
    ArrayList<Double> lycanAnti = new ArrayList<>();
    ArrayList<Double> lycanKoop = new ArrayList<>();
    ArrayList<Double> magnusAnti = new ArrayList<>();
    ArrayList<Double> magnusKoop = new ArrayList<>();
    ArrayList<Double> medusaAnti = new ArrayList<>();
    ArrayList<Double> medusaKoop = new ArrayList<>();
    ArrayList<Double> meepoAnti = new ArrayList<>();
    ArrayList<Double> meepoKoop = new ArrayList<>();
    ArrayList<Double> miranaAnti = new ArrayList<>();
    ArrayList<Double> miranaKoop = new ArrayList<>();
    ArrayList<Double> morphlingAnti = new ArrayList<>();
    ArrayList<Double> morphlingKoop = new ArrayList<>();
    ArrayList<Double> nagaSirenAnti = new ArrayList<>();
    ArrayList<Double> nagaSirenKoop = new ArrayList<>();
    ArrayList<Double> naturesProphetAnti = new ArrayList<>();
    ArrayList<Double> naturesProphetKoop = new ArrayList<>();
    ArrayList<Double> necrophosAnti = new ArrayList<>();
    ArrayList<Double> necrophosKoop = new ArrayList<>();
    ArrayList<Double> nightStalkerAnti = new ArrayList<>();
    ArrayList<Double> nightStalkerKoop = new ArrayList<>();
    ArrayList<Double> nyxAssassinAnti = new ArrayList<>();
    ArrayList<Double> nyxAssassinKoop = new ArrayList<>();
    ArrayList<Double> ogreMagiAnti = new ArrayList<>();
    ArrayList<Double> ogreMagiKoop = new ArrayList<>();
    ArrayList<Double> omniKnightAnti = new ArrayList<>();
    ArrayList<Double> omniKnightKoop = new ArrayList<>();
    ArrayList<Double> oracleAnti = new ArrayList<>();
    ArrayList<Double> oracleKoop = new ArrayList<>();
    ArrayList<Double> outworldDevourerAnti = new ArrayList<>();
    ArrayList<Double> outworldDevourerKoop = new ArrayList<>();
    ArrayList<Double> phantomAssassinAnti = new ArrayList<>();
    ArrayList<Double> phantomAssassinKoop = new ArrayList<>();
    ArrayList<Double> phantomLancerAnti = new ArrayList<>();
    ArrayList<Double> phantomLancerKoop = new ArrayList<>();
    ArrayList<Double> phoenixAnti = new ArrayList<>();
    ArrayList<Double> phoenixKoop = new ArrayList<>();
    ArrayList<Double> puckAnti = new ArrayList<>();
    ArrayList<Double> puckKoop = new ArrayList<>();
    ArrayList<Double> pudgeAnti = new ArrayList<>();
    ArrayList<Double> pudgeKoop = new ArrayList<>();
    ArrayList<Double> pugnaAnti = new ArrayList<>();
    ArrayList<Double> pugnaKoop = new ArrayList<>();
    ArrayList<Double> queenOfPainAnti = new ArrayList<>();
    ArrayList<Double> queenOfPainKoop = new ArrayList<>();
    ArrayList<Double> razorAnti = new ArrayList<>();
    ArrayList<Double> razorKoop = new ArrayList<>();
    ArrayList<Double> rikiAnti = new ArrayList<>();
    ArrayList<Double> rikiKoop = new ArrayList<>();
    ArrayList<Double> rubickAnti = new ArrayList<>();
    ArrayList<Double> rubickKoop = new ArrayList<>();
    ArrayList<Double> sandKingAnti = new ArrayList<>();
    ArrayList<Double> sandKingKoop = new ArrayList<>();
    ArrayList<Double> shadowDemonAnti = new ArrayList<>();
    ArrayList<Double> shadowDemonKoop = new ArrayList<>();
    ArrayList<Double> shadowFiendAnti = new ArrayList<>();
    ArrayList<Double> shadowFiendKoop = new ArrayList<>();
    ArrayList<Double> shadowShamanAnti = new ArrayList<>();
    ArrayList<Double> shadowShamanKoop = new ArrayList<>();
    ArrayList<Double> silencerAnti = new ArrayList<>();
    ArrayList<Double> silencerKoop = new ArrayList<>();
    ArrayList<Double> skywrathMageAnti = new ArrayList<>();
    ArrayList<Double> skywrathMageKoop = new ArrayList<>();
    ArrayList<Double> slardarAnti = new ArrayList<>();
    ArrayList<Double> slardarKoop = new ArrayList<>();
    ArrayList<Double> slarkAnti = new ArrayList<>();
    ArrayList<Double> slarkKoop = new ArrayList<>();
    ArrayList<Double> sniperAnti = new ArrayList<>();
    ArrayList<Double> sniperKoop = new ArrayList<>();
    ArrayList<Double> spectreAnti = new ArrayList<>();
    ArrayList<Double> spectreKoop = new ArrayList<>();
    ArrayList<Double> spiritBreakerAnti = new ArrayList<>();
    ArrayList<Double> spiritBreakerKoop = new ArrayList<>();
    ArrayList<Double> stormSpiritAnti = new ArrayList<>();
    ArrayList<Double> stormSpiritKoop = new ArrayList<>();
    ArrayList<Double> svenAnti = new ArrayList<>();
    ArrayList<Double> svenKoop = new ArrayList<>();
    ArrayList<Double> techiesAnti = new ArrayList<>();
    ArrayList<Double> techiesKoop = new ArrayList<>();
    ArrayList<Double> templarAssassinAnti = new ArrayList<>();
    ArrayList<Double> templarAssassinKoop = new ArrayList<>();
    ArrayList<Double> terrorbladeAnti = new ArrayList<>();
    ArrayList<Double> terrorbladeKoop = new ArrayList<>();
    ArrayList<Double> tidehunterAnti = new ArrayList<>();
    ArrayList<Double> tidehunterKoop = new ArrayList<>();
    ArrayList<Double> timbersawAnti = new ArrayList<>();
    ArrayList<Double> timbersawKoop = new ArrayList<>();
    ArrayList<Double> tinkerAnti = new ArrayList<>();
    ArrayList<Double> tinkerKoop = new ArrayList<>();
    ArrayList<Double> tinyAnti = new ArrayList<>();
    ArrayList<Double> tinyKoop = new ArrayList<>();
    ArrayList<Double> treantProtectorAnti = new ArrayList<>();
    ArrayList<Double> treantProtectorKoop = new ArrayList<>();
    ArrayList<Double> trollWarlordAnti = new ArrayList<>();
    ArrayList<Double> trollWarlordKoop = new ArrayList<>();
    ArrayList<Double> tuskAnti = new ArrayList<>();
    ArrayList<Double> tuskKoop = new ArrayList<>();
    ArrayList<Double> undyingAnti = new ArrayList<>();
    ArrayList<Double> undyingKoop = new ArrayList<>();
    ArrayList<Double> ursaAnti = new ArrayList<>();
    ArrayList<Double> ursaKoop = new ArrayList<>();
    ArrayList<Double> vengefulSpiritAnti = new ArrayList<>();
    ArrayList<Double> vengefulSpiritKoop = new ArrayList<>();
    ArrayList<Double> venomancerAnti = new ArrayList<>();
    ArrayList<Double> venomancerKoop = new ArrayList<>();
    ArrayList<Double> viperAnti = new ArrayList<>();
    ArrayList<Double> viperKoop = new ArrayList<>();
    ArrayList<Double> visageAnti = new ArrayList<>();
    ArrayList<Double> visageKoop = new ArrayList<>();
    ArrayList<Double> voidAnti = new ArrayList<>();
    ArrayList<Double> voidKoop = new ArrayList<>();
    ArrayList<Double> warlockAnti = new ArrayList<>();
    ArrayList<Double> warlockKoop = new ArrayList<>();
    ArrayList<Double> weaverAnti = new ArrayList<>();
    ArrayList<Double> weaverKoop = new ArrayList<>();
    ArrayList<Double> windrangerAnti = new ArrayList<>();
    ArrayList<Double> windrangerKoop = new ArrayList<>();
    ArrayList<Double> winterWyvernAnti = new ArrayList<>();
    ArrayList<Double> winterWyvernKoop = new ArrayList<>();
    ArrayList<Double> witchDoctorAnti = new ArrayList<>();
    ArrayList<Double> witchDoctorKoop = new ArrayList<>();
    ArrayList<Double> wraithKingAnti = new ArrayList<>();
    ArrayList<Double> wraithKingKoop = new ArrayList<>();
    ArrayList<Double> zeusAnti = new ArrayList<>();
    ArrayList<Double> zeusKoop = new ArrayList<>();
    
    
    PrzyciskBohatera pB = new PrzyciskBohatera();
    BestToPickListwa bTPListwa = new BestToPickListwa();
    BestToAvoidListwa bTAListwa = new BestToAvoidListwa();
    
    ListwaSila listwaSila = new ListwaSila();
    ListwaStr listwaStr = new ListwaStr();
    ListwaZrecznosc listwaZrecznosc = new ListwaZrecznosc();
    ListwaZrecznosc2 listwaZrecznosc2 = new ListwaZrecznosc2();
    ListwaAgi listwaAgi = new ListwaAgi();
    ListwaInteligencja listwaInteligencja = new ListwaInteligencja();
    ListwaInt listwaInt = new ListwaInt();
    
    RadiantLabel radiantLabel = new RadiantLabel();
    DireLabel direLabel = new DireLabel();
    PionowaListwa pionowaListwa = new PionowaListwa();
  
    EarthShaker es = new EarthShaker();
    Sven sven = new Sven();
    Tiny tiny = new Tiny();
    Kunkka kunkka = new Kunkka();
    Beastmaster beastmaster = new Beastmaster();
    DragonKnight dragonKnight = new DragonKnight();
    Clockwerk clockwerk = new Clockwerk();
    Omni omni = new Omni();
    Huskar huskar = new Huskar();
    Alchemist alchemist = new Alchemist();
    Brewmaster brewmaster = new Brewmaster();
    TreantProtector treantProtector = new TreantProtector();
    Io io = new Io();
    CentaurWarrunner centaurWarrunner = new CentaurWarrunner();
    Timbersaw timbersaw = new Timbersaw();
    Bristleback bristleback = new Bristleback();
    Tusk tusk = new Tusk();
    ElderTitan elderTitan = new ElderTitan();
    LegionCommander legionCommander = new LegionCommander();
    EarthSpirit earthSpirit = new EarthSpirit();
    Phoenix phoenix = new Phoenix();
    Axe axe = new Axe();
    Pudge pudge = new Pudge();
    SandKing sandKing = new SandKing();
    Slardar slardar = new Slardar();
    Tidehunter tidehunter = new Tidehunter();
    WraithKing wraithKing = new WraithKing();
    LifeStealer lifeStealer = new LifeStealer();
    NightStalker nightStalker = new NightStalker();
    Doom doom = new Doom();
    SpiritBreaker spiritBreaker = new SpiritBreaker();
    Lycan lycan = new Lycan();
    ChaosKnight chaosKnight = new ChaosKnight();
    Undying undying = new Undying();
    Magnus magnus = new Magnus();
    Abaddon abaddon = new Abaddon();
    AntiMage antiMage = new AntiMage();
    DrowRanger drowRanger = new DrowRanger();
    Juggernaut juggernaut = new Juggernaut();
    Mirana mirana = new Mirana();
    Morphling morphling = new Morphling();
    PhantomLancer phantomLancer = new PhantomLancer();
    VengefulSpirit vengefulSpirit = new VengefulSpirit();
    Riki riki = new Riki();
    Sniper sniper = new Sniper();
    TemplarAssassin templarAssassin = new TemplarAssassin();
    Luna luna = new Luna();
    BountyHunter bountyHunter = new BountyHunter();
    Ursa ursa = new Ursa();
    Gyrocopter gyrocopter = new Gyrocopter();
    LoneDruid loneDruid = new LoneDruid();
    NagaSiren nagaSiren = new NagaSiren();
    TrollWarlord trollWarlord = new TrollWarlord();
    EmberSpirit emberSpirit = new EmberSpirit();
    ArcWarden arcWarden = new ArcWarden();
    Bloodseeker bloodseeker = new Bloodseeker();
    ShadowFiend shadowFiend = new ShadowFiend();
    Razor razor = new Razor();
    Venomancer venomancer = new Venomancer();
    VoidB voidB = new VoidB();
    PhantomAssassin phantomAssassin = new PhantomAssassin();
    Viper viper = new Viper();
    Clinkz clinkz = new Clinkz();
    Broodmother broodmother = new Broodmother();
    Weaver weaver = new Weaver();
    Spectre spectre = new Spectre();
    Meepo meepo = new Meepo();
    NyxAssassin nyxAssassin = new NyxAssassin();
    Slark slark = new Slark();
    Medusa medusa = new Medusa();
    Terrorblade terrorblade = new Terrorblade();
    CrystalMaiden crystalMaiden = new CrystalMaiden();
    Puck puck = new Puck();
    StormSpirit stormSpirit = new StormSpirit();
    Windranger windranger = new Windranger();
    Zeus zeus = new Zeus();
    Lina lina = new Lina();
    ShadowShaman shadowShaman = new ShadowShaman();
    Tinker tinker = new Tinker();
    NaturesProphet naturesProphet = new NaturesProphet();
    Enchantress enchantress = new Enchantress();
    Jakiro jakiro = new Jakiro();
    Chen chen = new Chen();
    Silencer silencer = new Silencer();
    OgreMagi ogreMagi = new OgreMagi();
    Rubick rubick = new Rubick();
    Disruptor disruptor = new Disruptor();
    KeeperOfTheLight keeperOfTheLight = new KeeperOfTheLight();
    SkywrathMage skywrathMage = new SkywrathMage();
    Oracle oracle = new Oracle();
    Techies techies = new Techies();
    Bane bane = new Bane();
    Lich lich = new Lich();
    Lion lion = new Lion();
    WitchDoctor witchDoctor = new WitchDoctor();
    Enigma enigma = new Enigma();
    Necrophos necrophos = new Necrophos();
    Warlock warlock = new Warlock();
    QueenOfPain queenOfPain = new QueenOfPain();
    DeathProphet deathProphet = new DeathProphet();
    Pugna pugna = new Pugna();
    Dazzle dazzle = new Dazzle();
    Leshrac leshrac = new Leshrac();
    DarkSeer darkSeer = new DarkSeer();
    Batrider batrider = new Batrider();
    AncientApparition ancientApparition = new AncientApparition();
    Invoker invoker = new Invoker();
    OutworldDevourer outworldDevourer = new OutworldDevourer();
    ShadowDemon shadowDemon = new ShadowDemon();
    Visage visage = new Visage();
    WinterWyvern winterWyvern = new WinterWyvern();
    
    ListaBestToPick listaBestToPick = new ListaBestToPick();
    ListaBestToAvoid listaBestToAvoid = new ListaBestToAvoid();
    
    WybranaDruzyna wybranaDruzyna = new WybranaDruzyna();
    RatioInfo ratioInfo = new RatioInfo();
    
    RadiantPostac1 radiantPostac1 = new RadiantPostac1();
    RadiantPostac2 radiantPostac2 = new RadiantPostac2();
    RadiantPostac3 radiantPostac3 = new RadiantPostac3();
    RadiantPostac4 radiantPostac4 = new RadiantPostac4();
    RadiantPostac5 radiantPostac5 = new RadiantPostac5();
    
    RadiantPoleTekstowe radiantPoleTekstowe = new RadiantPoleTekstowe();
    
    DirePostac1 direPostac1 = new DirePostac1();
    DirePostac2 direPostac2 = new DirePostac2();
    DirePostac3 direPostac3 = new DirePostac3();
    DirePostac4 direPostac4 = new DirePostac4();
    DirePostac5 direPostac5 = new DirePostac5();
    
    DirePoleTekstowe direPoleTekstowe = new DirePoleTekstowe();
    
    Mysz mysz = new Mysz();
    Mysz2 mysz2 = new Mysz2();
    
    WyborPostaci wyborPostaci = new WyborPostaci();
    RadiantTeam radiantTeam = new RadiantTeam();
    DireTeam direTeam = new DireTeam();
    
    ListaWartosciBohaterow listaWartosciBohaterow = new ListaWartosciBohaterow();
    ListaAntiIndexBohaterow listaAntiIndexBohaterow = new ListaAntiIndexBohaterow();
    ListaKoopIndexBohaterow listaKoopIndexBohaterow = new ListaKoopIndexBohaterow();
    
    WynikWyjsciowyRadiantDire wynikWyjsciowyRadiantDire = new WynikWyjsciowyRadiantDire();
    
    BestToPickAvoidList bestToPickAvoidList = new BestToPickAvoidList();
    
    WinRatioPrzycisk winRatePrzycisk = new WinRatioPrzycisk();
    AddWRP addWRP = new AddWRP();
    RemoveWRP removeWRP = new RemoveWRP();
    WyborRatio wyborRatio = new WyborRatio();
    UsuniecieRatio usuniecieRatio = new UsuniecieRatio();
    
    public void tworzeniePaneluGlownego() throws FileNotFoundException{
        
        
        setBackground(Color.WHITE);
        setLayout(new GridBagLayout());
        
        es.tworzenieEarthShaker();
        c.anchor = GridBagConstraints.LINE_START;
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(es, c);
       
        sven.tworzenieSven();  
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(sven, c);
        
        tiny.tworzenieTiny();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 2;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(tiny, c);
        
        kunkka.tworzenieKunkka();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 3;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(kunkka, c);
        
        beastmaster.tworzenieBeastmaster();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 4;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(beastmaster, c);
        
        dragonKnight.tworzenieDragonKnight();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 5;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(dragonKnight, c);
        
        clockwerk.tworzenieClockwerk();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 6;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(clockwerk, c);
        
        omni.tworzenieOmni();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(omni, c);
        
        huskar.tworzenieHuskar();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(huskar, c);
        
        alchemist.tworzenieAlchemist();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 2;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(alchemist, c);
        
        brewmaster.tworzenieBrewmaster();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 3;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(brewmaster, c);
        
        treantProtector.tworzenieTreantProtector();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 4;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(treantProtector, c);
        
        io.tworzenieIo();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 5;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(io, c);
        
        centaurWarrunner.tworzenieCentaurWarrunner();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 6;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(centaurWarrunner, c);
        
        timbersaw.tworzenieTimbersaw();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(timbersaw, c);
        
        bristleback.tworzenieBristleback();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(bristleback, c);
        
        tusk.tworzenieTusk();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 2;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(tusk, c);
        
        elderTitan.tworzenieElderTitan();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 3;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(elderTitan, c);
        
        legionCommander.tworzenieLegionCommander();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 4;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(legionCommander, c);
        
        earthSpirit.tworzenieEarthSpirit();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 5;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(earthSpirit, c);
        
        phoenix.tworzeniePhoenix();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 6;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(phoenix, c);
        
        axe.tworzenieAxe();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(axe, c);
        
        pudge.tworzeniePudge();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(pudge, c);
        
        sandKing.tworzenieSandKing();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 2;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(sandKing, c);
        
        slardar.tworzenieSlardar();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 3;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(slardar, c);
        
        tidehunter.tworzenieTidehunter();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 4;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(tidehunter, c);
        
        wraithKing.tworzenieWraithKing();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 5;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(wraithKing, c);
        
        lifeStealer.tworzenieLifeStealer();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 6;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(lifeStealer, c);
        
        nightStalker.tworzenieNightStalker();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(nightStalker, c);
        
        doom.tworzenieDoom();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(doom, c);
        
        spiritBreaker.tworzenieSpiritBreaker();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 2;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(spiritBreaker, c);
        
        lycan.tworzenieLycan();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 3;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(lycan, c);
        
        chaosKnight.tworzenieChaosKnight();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 4;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(chaosKnight, c);
        
        undying.tworzenieUndying();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 5;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(undying, c);
        
        magnus.tworzenieMagnus();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 6;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(magnus, c);
        
        abaddon.tworzenieAbaddon();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(abaddon, c);
        
        listwaSila.tworzenieListwaSila();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 5;
        c.weightx = 1;
        c.weighty = 1;
        add(listwaSila, c);
        
        listwaStr.tworzenieListwaStr();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 6;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(listwaStr, c);
        
        antiMage.tworzenieAntiMage();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 7;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(antiMage, c);
        
        drowRanger.tworzenieDrowRanger();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 8;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(drowRanger, c);
        
        juggernaut.tworzenieJuggernaut();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 9;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(juggernaut, c);
        
        mirana.tworzenieMirana();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 10;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(mirana, c);
        
        morphling.tworzenieMorphling();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 11;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(morphling, c);
        
        phantomLancer.tworzeniePhantomLancer();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 12;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(phantomLancer, c);
        
        vengefulSpirit.tworzenieVengefulSpirit();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 13;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(vengefulSpirit, c);
        
        riki.tworzenieRiki();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 7;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(riki, c);
        
        sniper.tworzenieSniper();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 8;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(sniper, c);
        
        templarAssassin.tworzenieTemplarAssassin();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 9;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(templarAssassin, c);
        
        luna.tworzenieLuna();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 10;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(luna, c);
        
        bountyHunter.tworzenieBountyHunter();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 11;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(bountyHunter, c);
        
        ursa.tworzenieUrsa();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 12;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(ursa, c);
        
        gyrocopter.tworzenieGyrocopter();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 13;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(gyrocopter, c);
        
        loneDruid.tworzenieLoneDruid();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 7;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(loneDruid, c);
        
        nagaSiren.tworzenieNagaSiren();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 8;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(nagaSiren, c);
        
        trollWarlord.tworzenieTrollWarlord();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 9;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(trollWarlord, c);
        
        emberSpirit.tworzenieEmberSpirit();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 10;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(emberSpirit, c);
        
        bloodseeker.tworzenieBloodseeker();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 7;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(bloodseeker, c);
        
        shadowFiend.tworzenieShadowFiend();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 8;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(shadowFiend, c);
        
        razor.tworzenieRazor();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 9;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(razor, c);
        
        venomancer.tworzenieVenomancer();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 10;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 0;
        c.weighty = 0;
        add(venomancer, c);
        
        voidB.tworzenieVoidB();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 11;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(voidB, c);
        
        phantomAssassin.tworzeniePhantomAssassin();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 12;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(phantomAssassin, c);
        
        viper.tworzenieViper();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 13;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(viper, c);
        
        clinkz.tworzenieClinkz();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 7;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(clinkz, c);
        
        broodmother.tworzenieBroodmother();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 8;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(broodmother, c);
        
        weaver.tworzenieWeaver();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 9;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(weaver, c);
        
        spectre.tworzenieSpectre();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 10;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(spectre, c);
        
        meepo.tworzenieMeepo();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 11;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(meepo, c);
        
        nyxAssassin.tworzenieNyxAssassin();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 12;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(nyxAssassin, c);
        
        slark.tworzenieSlark();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 13;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(slark, c);
        
        medusa.tworzenieMedusa();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 7;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(medusa, c);
        
        terrorblade.tworzenieTerrorblade();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 8;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(terrorblade, c);
        
        arcWarden.tworzenieArcWarden();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 9;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(arcWarden, c);
        
        listwaZrecznosc.tworzenieListwaZrecznosc();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 11;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 3;
        c.weightx = 1;
        c.weighty = 1;
        add(listwaZrecznosc, c);
        
        listwaAgi.tworzenieListwaAgi();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 13;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(listwaAgi, c);
        
        listwaZrecznosc2.tworzenieListwaZrecznosc2();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 9;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 4;
        c.weightx = 1;
        c.weighty = 1;
        add(listwaZrecznosc2, c);
        
        crystalMaiden.tworzenieCrystalMaiden();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 14;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(crystalMaiden, c);
        
        puck.tworzeniePuck();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 15;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(puck, c);
        
        stormSpirit.tworzenieStormSpirit();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 16;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(stormSpirit, c);
        
        windranger.tworzenieWindranger();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 17;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(windranger, c);
        
        zeus.tworzenieZeus();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 18;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(zeus, c);
        
        lina.tworzenieLina();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 19;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(lina, c);
        
        shadowShaman.tworzenieShadowShaman();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 20;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(shadowShaman, c);
        
        tinker.tworzenieTinker();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 14;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(tinker, c);
        
        naturesProphet.tworzenieNaturesProphet();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 15;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(naturesProphet, c);
        
        enchantress.tworzenieEnchantress();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 16;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(enchantress, c);
        
        jakiro.tworzenieJakiro();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 17;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(jakiro, c);
        
        chen.tworzenieChen();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 18;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(chen, c);
        
        silencer.tworzenieSilencer();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 19;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(silencer, c);
        
        ogreMagi.tworzenieOgreMagi();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 20;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(ogreMagi, c);
        
        rubick.tworzenieRubick();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 14;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(rubick, c);
        
        disruptor.tworzenieDisruptor();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 15;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(disruptor, c);
        
        keeperOfTheLight.tworzenieKeeperOfTheLight();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 16;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(keeperOfTheLight, c);
        
        skywrathMage.tworzenieSkywrathMage();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 17;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(skywrathMage, c);
        
        oracle.tworzenieOracle();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 18;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(oracle, c);
        
        techies.tworzenieTechies();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 19;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(techies, c);
        
        bane.tworzenieBane();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 14;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(bane, c);
        
        lich.tworzenieLich();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 15;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(lich, c);
        
        lion.tworzenieLion();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 16;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(lion, c);
        
        witchDoctor.tworzenieWitchDoctor();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 17;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(witchDoctor, c);
        
        enigma.tworzenieEnigma();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 18;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(enigma, c);
        
        necrophos.tworzenieNecrophos();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 19;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(necrophos, c);
        
        warlock.tworzenieWarlock();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 20;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(warlock, c);
        
        queenOfPain.tworzenieQueenOfPain();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 14;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(queenOfPain, c);
        
        deathProphet.tworzenieDeathProphet();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 15;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(deathProphet, c);
        
        pugna.tworzeniePugna();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 16;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(pugna, c);
        
        dazzle.tworzenieDazzle();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 17;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(dazzle, c);
        
        leshrac.tworzenieLeshrac();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 18;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(leshrac, c);
        
        darkSeer.tworzenieDarkSeer();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 19;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(darkSeer, c);
        
        batrider.tworzenieBatrider();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 20;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(batrider, c);
        
        ancientApparition.tworzenieAncientApparition();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 14;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(ancientApparition, c);
        
        invoker.tworzenieInvoker();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 15;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(invoker, c);
        
        outworldDevourer.tworzenieOutworldDevourer();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 16;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(outworldDevourer, c);
        
        shadowDemon.tworzenieShadowDemon();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 17;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(shadowDemon, c);
        
        visage.tworzenieVisage();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 18;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(visage, c);
        
        winterWyvern.tworzenieWinterWyvern();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 19;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(winterWyvern, c);
       
        listwaInteligencja.tworzenieListwaInteligencja();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 20;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(listwaInteligencja, c);
        
        listwaInt.tworzenieListwaInt();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 20;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 1;
        c.weightx = 1;
        c.weighty = 1;
        add(listwaInt, c);
        
        radiantLabel.tworzenieRadiantLabel();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 36;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 6;
        c.weightx = 1;
        c.weighty = 1;
        add(radiantLabel, c);
        
        direLabel.tworzenieDireLabel();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 36;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 6;
        c.weightx = 1;
        c.weighty = 1;
        add(direLabel, c);
        
        bTPListwa.tworzenieBestToPickListwa();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 21;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 7;
        c.weightx = 1;
        c.weighty = 1;
        add(bTPListwa, c);
        
        listaBestToPick.tworzenieListaBestToPick();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 21;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 7;
        c.weightx = 1;
        c.weighty = 1;
        add(listaBestToPick, c);
        
        bTAListwa.tworzenieBestToAvoidListwa();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 28;
        c.gridy = 0;
        c.gridheight = 1;
        c.gridwidth = 7;
        c.weightx = 1;
        c.weighty = 1;
        add(bTAListwa, c);
        
        listaBestToAvoid.tworzenieListaBestToAvoid();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 28;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 7;
        c.weightx = 1;
        c.weighty = 1;
        add(listaBestToAvoid, c);
        
        wybranaDruzyna.tworzenieWybranaDruzyna();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 21;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 14;
        c.weightx = 1;
        c.weighty = 1;
        add(wybranaDruzyna, c);
        
        addWRP.tworzenieAddWRP();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 21;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 7;
        c.weightx = 1;
        c.weighty = 1;
        addWRP.setEnabled(true);
        add(addWRP, c);
        
        removeWRP.tworzenieRemoveWRP();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 28;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 7;
        c.weightx = 1;
        c.weighty = 1;
        removeWRP.setEnabled(false);
        add(removeWRP, c);
        
        ratioInfo.tworzenieRatioInfo();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 21;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 14;
        c.weightx = 1;
        c.weighty = 1;
        add(ratioInfo, c);
        
        radiantPostac1.tworzenieRadiantPostac1();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 36;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(radiantPostac1, c);
        
        radiantPostac2.tworzenieRadiantPostac2();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 38;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(radiantPostac2, c);
        
        radiantPostac3.tworzenieRadiantPostac3();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 40;
        c.gridy = 1;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(radiantPostac3, c);
        
        radiantPostac4.tworzenieRadiantPostac4();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 36;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(radiantPostac4, c);
        
        radiantPostac5.tworzenieRadiantPostac5();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 40;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(radiantPostac5, c);
        
        radiantPoleTekstowe.tworzenieRadiantPoleTekstowe();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 38;
        c.gridy = 2;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(radiantPoleTekstowe, c);
        
        direPostac1.tworzenieDirePostac1();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 36;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(direPostac1, c);
        
        direPostac2.tworzenieDirePostac2();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 38;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(direPostac2, c);
        
        direPostac3.tworzenieDirePostac3();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 40;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1;
        c.weighty = 1;
        add(direPostac3, c);
        
        direPostac4.tworzenieDirePostac4();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 36;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1.0;
        c.weighty = 1.0;
        add(direPostac4, c);
        
        direPostac5.tworzenieDirePostac5();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 40;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1.0;
        c.weighty = 1.0;
        add(direPostac5, c);
        
        direPoleTekstowe.tworzenieDirePoleTekstowe();
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 38;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 2;
        c.weightx = 1.0;
        c.weighty = 1.0;
        add(direPoleTekstowe, c);
        
        mysz.tworzenieMysz();
        mysz2.tworzenieMysz2();
        
        wyborPostaci.wyborAbaddon();
        wyborPostaci.wyborAlchemist();
        wyborPostaci.wyborAncientApparition();
        wyborPostaci.wyborAntiMage();
        wyborPostaci.wyborArcWarden();
        wyborPostaci.wyborAxe();
        wyborPostaci.wyborBane();
        wyborPostaci.wyborBatrider();
        wyborPostaci.wyborBeastmaster();
        wyborPostaci.wyborBloodseeker();
        wyborPostaci.wyborBountyHunter();
        wyborPostaci.wyborBrewmaster();
        wyborPostaci.wyborBristleback();
        wyborPostaci.wyborBroodmother();
        wyborPostaci.wyborCentaurWarrunner();
        wyborPostaci.wyborChaosKnight();
        wyborPostaci.wyborChen();
        wyborPostaci.wyborClinkz();
        wyborPostaci.wyborClockwerk();
        wyborPostaci.wyborCrystalMaiden();
        wyborPostaci.wyborDarkSeer();
        wyborPostaci.wyborDazzle();
        wyborPostaci.wyborDeathProphet();
        wyborPostaci.wyborDisruptor();
        wyborPostaci.wyborDk();
        wyborPostaci.wyborDoom();
        wyborPostaci.wyborDrowRanger();
        wyborPostaci.wyborEarthSpirit();
        wyborPostaci.wyborElderTitan();
        wyborPostaci.wyborEmberSpirit();
        wyborPostaci.wyborEnchentress();
        wyborPostaci.wyborEnigma();
        wyborPostaci.wyborEs();
        wyborPostaci.wyborGyrocopter();
        wyborPostaci.wyborHuskar();
        wyborPostaci.wyborInvoker();
        wyborPostaci.wyborIo();
        wyborPostaci.wyborJakiro();
        wyborPostaci.wyborJuggernaut();
        wyborPostaci.wyborKeeperOfTheLight();
        wyborPostaci.wyborKunkka();
        wyborPostaci.wyborLegionCommander();
        wyborPostaci.wyborLeshrac();
        wyborPostaci.wyborLich();
        wyborPostaci.wyborLifeStealer();
        wyborPostaci.wyborLina();
        wyborPostaci.wyborLion();
        wyborPostaci.wyborLoneDruid();
        wyborPostaci.wyborLuna();
        wyborPostaci.wyborLycan();
        wyborPostaci.wyborMagnus();
        wyborPostaci.wyborMedusa();
        wyborPostaci.wyborMeepo();
        wyborPostaci.wyborMirana();
        wyborPostaci.wyborMorphling();
        wyborPostaci.wyborNagaSiren();
        wyborPostaci.wyborNaturesProphet();
        wyborPostaci.wyborNecrophos();
        wyborPostaci.wyborNightStalker();
        wyborPostaci.wyborNyxAssassin();
        wyborPostaci.wyborOgreMagi();
        wyborPostaci.wyborOmniknight();
        wyborPostaci.wyborOracle();
        wyborPostaci.wyborOutworldDevourer();
        wyborPostaci.wyborPhantomAssassin();
        wyborPostaci.wyborPhantomLancer();
        wyborPostaci.wyborPhoenix();
        wyborPostaci.wyborPuck();
        wyborPostaci.wyborPudge();
        wyborPostaci.wyborPugna();
        wyborPostaci.wyborQueenOfPain();
        wyborPostaci.wyborRazor();
        wyborPostaci.wyborRiki();
        wyborPostaci.wyborRubick();
        wyborPostaci.wyborSandKing();
        wyborPostaci.wyborShadowDemon();
        wyborPostaci.wyborShadowFiend();
        wyborPostaci.wyborShadowShaman();
        wyborPostaci.wyborSilencer();
        wyborPostaci.wyborSkywrathMage();
        wyborPostaci.wyborSlark();
        wyborPostaci.wyborSlardar();
        wyborPostaci.wyborSniper();
        wyborPostaci.wyborSpectre();
        wyborPostaci.wyborSpiritBreaker();
        wyborPostaci.wyborStormSpirit();
        wyborPostaci.wyborSven();
        wyborPostaci.wyborTechies();
        wyborPostaci.wyborTemplarAssassin();
        wyborPostaci.wyborTerrorblade();
        wyborPostaci.wyborTidehunter();
        wyborPostaci.wyborTimbersaw();
        wyborPostaci.wyborTinker();
        wyborPostaci.wyborTiny();
        wyborPostaci.wyborTreantProtector();
        wyborPostaci.wyborTrollWarlord();
        wyborPostaci.wyborTusk();
        wyborPostaci.wyborUndying();
        wyborPostaci.wyborUrsa();
        wyborPostaci.wyborVengefulSpirit();
        wyborPostaci.wyborVenomancer();
        wyborPostaci.wyborViper();
        wyborPostaci.wyborVisage();
        wyborPostaci.wyborVoidB();
        wyborPostaci.wyborWarlock();
        wyborPostaci.wyborWeaver();
        wyborPostaci.wyborWindranger();
        wyborPostaci.wyborWinterWyvern();
        wyborPostaci.wyborWitchDoctor();
        wyborPostaci.wyborWraithKing();
        wyborPostaci.wyborZeus();
        
        radiantTeam.usunieciePostaciR1();
        radiantTeam.usunieciePostaciR2();
        radiantTeam.usunieciePostaciR3();
        radiantTeam.usunieciePostaciR4();
        radiantTeam.usunieciePostaciR5();
        direTeam.usunieciePostaciD1();
        direTeam.usunieciePostaciD2();
        direTeam.usunieciePostaciD3();
        direTeam.usunieciePostaciD4();
        direTeam.usunieciePostaciD5();
        wybranaDruzyna.tworzenieWybranaDruzyna();
        
        listaWartosciBohaterow.addWinRates();
        listaWartosciBohaterow.tworzenieListaWartosciBohaterowDire();
        listaWartosciBohaterow.tworzenieListaWartosciBohaterowDireCopy();
        listaWartosciBohaterow.tworzenieListaWartosciBohaterowDireRound();
        listaWartosciBohaterow.tworzenieListaWartosciBohaterowRadiant();
        listaWartosciBohaterow.tworzenieListaWartosciBohaterowRadiantCopy();
        listaWartosciBohaterow.tworzenieListaWartosciBohaterowRadiantRound();
        listaWartosciBohaterow.tworzeniesorotwaneListaBestToAvoidDire();
        listaWartosciBohaterow.tworzeniesorotwaneListaBestToAvoidRadiant();
        listaWartosciBohaterow.tworzeniesorotwaneListaBestToPickDire();
        listaWartosciBohaterow.tworzeniesorotwaneListaBestToPickRadiant();
        listaWartosciBohaterow.tworzeniesorotwaneListaRadiantNazwy();
        listaWartosciBohaterow.tworzeniesorotwaneListaDireNazwy();
        listaWartosciBohaterow.tworzeniesorotwaneListaDireWartosciNazwy();
        listaWartosciBohaterow.tworzeniesorotwaneListaRadiantWartosciNazwy();
        listaWartosciBohaterow.tworzeniesorotwaneListaWartosciBohaterowDireNazwyHerosow();
        listaWartosciBohaterow.tworzeniesorotwaneListaWartosciBohaterowRadiantNazwyHerosow();
        
        listaAntiIndexBohaterow.abaddonAntiIndex();
        listaAntiIndexBohaterow.alchemistAntiIndex();
        listaAntiIndexBohaterow.ancientApparitionAntiIndex();
        listaAntiIndexBohaterow.antiMageAntiIndex();
        listaAntiIndexBohaterow.arcWardenAntiIndex();
        listaAntiIndexBohaterow.axeAntiIndex();
        listaAntiIndexBohaterow.baneAntiIndex();
        listaAntiIndexBohaterow.batriderAntiIndex();
        listaAntiIndexBohaterow.beastmasterAntiIndex();
        listaAntiIndexBohaterow.bloodseekerAntiIndex();
        listaAntiIndexBohaterow.bountyHunterAntiIndex();
        listaAntiIndexBohaterow.brewmasterAntiIndex();
        listaAntiIndexBohaterow.bristlebackAntiIndex();
        listaAntiIndexBohaterow.broodmotherAntiIndex();
        listaAntiIndexBohaterow.centaurWarrunnerAntiIndex();
        listaAntiIndexBohaterow.chaosKnightAntiIndex();
        listaAntiIndexBohaterow.chenAntiIndex();
        listaAntiIndexBohaterow.clinkzAntiIndex();
        listaAntiIndexBohaterow.clockwerkAntiIndex();
        listaAntiIndexBohaterow.crystalMaidenAntiIndex();
        listaAntiIndexBohaterow.eSAntiIndex();
        listaAntiIndexBohaterow.darkSeerAntiIndex();
        listaAntiIndexBohaterow.dazzleAntiIndex();
        listaAntiIndexBohaterow.deathProphetAntiIndex();
        listaAntiIndexBohaterow.disruptorAntiIndex();
        listaAntiIndexBohaterow.doomAntiIndex();
        listaAntiIndexBohaterow.dragonKnightAntiIndex();
        listaAntiIndexBohaterow.drowRangerAntiIndex();
        listaAntiIndexBohaterow.eSAntiIndex();
        listaAntiIndexBohaterow.earthSpiritAntiIndex();
        listaAntiIndexBohaterow.elderTitanAntiIndex();
        listaAntiIndexBohaterow.emberSpiritAntiIndex();
        listaAntiIndexBohaterow.enchantressAntiIndex();
        listaAntiIndexBohaterow.enigmaAntiIndex();
        listaAntiIndexBohaterow.facelessVoidAntiIndex();
        listaAntiIndexBohaterow.gyrocopterAntiIndex();
        listaAntiIndexBohaterow.huskarAntiIndex();
        listaAntiIndexBohaterow.invokerAntiIndex();
        listaAntiIndexBohaterow.ioAntiIndex();
        listaAntiIndexBohaterow.jakiroAntiIndex();
        listaAntiIndexBohaterow.juggernautAntiIndex();
        listaAntiIndexBohaterow.keeperOfTheLightAntiIndex();
        listaAntiIndexBohaterow.kunkkaAntiIndex();
        listaAntiIndexBohaterow.legionCommanderAntiIndex();
        listaAntiIndexBohaterow.leshracAntiIndex();
        listaAntiIndexBohaterow.lichAntiIndex();
        listaAntiIndexBohaterow.lifestealerAntiIndex();
        listaAntiIndexBohaterow.linaAntiIndex();
        listaAntiIndexBohaterow.lionAntiIndex();
        listaAntiIndexBohaterow.loneDruidAntiIndex();
        listaAntiIndexBohaterow.lunaAntiIndex();
        listaAntiIndexBohaterow.lycanAntiIndex();
        listaAntiIndexBohaterow.magnusAntiIndex();
        listaAntiIndexBohaterow.medusaAntiIndex();
        listaAntiIndexBohaterow.meepoAntiIndex();
        listaAntiIndexBohaterow.miranaAntiIndex();
        listaAntiIndexBohaterow.morphlingAntiIndex();
        listaAntiIndexBohaterow.nagaSirenAntiIndex();
        listaAntiIndexBohaterow.naturesProphetAntiIndex();
        listaAntiIndexBohaterow.necrophosAntiIndex();
        listaAntiIndexBohaterow.nightStalkerAntiIndex();
        listaAntiIndexBohaterow.nyxAssassinAntiIndex();
        listaAntiIndexBohaterow.ogreMagiAntiIndex();
        listaAntiIndexBohaterow.omniknightAntiIndex();
        listaAntiIndexBohaterow.oracleAntiIndex();
        listaAntiIndexBohaterow.outworldDevourerAntiIndex();
        listaAntiIndexBohaterow.phantomAssassinAntiIndex();
        listaAntiIndexBohaterow.phantomLancerAntiIndex();
        listaAntiIndexBohaterow.phoenixAntiIndex();
        listaAntiIndexBohaterow.puckAntiIndex();
        listaAntiIndexBohaterow.pudgeAntiIndex();
        listaAntiIndexBohaterow.pugnaAntiIndex();
        listaAntiIndexBohaterow.queenOfPainAntiIndex();
        listaAntiIndexBohaterow.razorAntiIndex();
        listaAntiIndexBohaterow.rikiAntiIndex();
        listaAntiIndexBohaterow.rubickAntiIndex();
        listaAntiIndexBohaterow.sandKingAntiIndex();
        listaAntiIndexBohaterow.shadowDemonAntiIndex();
        listaAntiIndexBohaterow.shadowFiendAntiIndex();
        listaAntiIndexBohaterow.shadowShamanAntiIndex();
        listaAntiIndexBohaterow.silencerAntiIndex();
        listaAntiIndexBohaterow.skywrathMageAntiIndex();
        listaAntiIndexBohaterow.slardarAntiIndex();
        listaAntiIndexBohaterow.slarkAntiIndex();
        listaAntiIndexBohaterow.sniperAntiIndex();
        listaAntiIndexBohaterow.spectreAntiIndex();
        listaAntiIndexBohaterow.spiritBreakerAntiIndex();
        listaAntiIndexBohaterow.stormSpiritAntiIndex();
        listaAntiIndexBohaterow.svenAntiIndex();
        listaAntiIndexBohaterow.techiesAntiIndex();
        listaAntiIndexBohaterow.templarAssassinAntiIndex();
        listaAntiIndexBohaterow.terrorbladeAntiIndex();
        listaAntiIndexBohaterow.tidehunterAntiIndex();
        listaAntiIndexBohaterow.timbersawAntiIndex();
        listaAntiIndexBohaterow.tinkerAntiIndex();
        listaAntiIndexBohaterow.tinyAntiIndex();
        listaAntiIndexBohaterow.treantProtectorAntiIndex();
        listaAntiIndexBohaterow.trollWarlordAntiIndex();
        listaAntiIndexBohaterow.tuskAntiIndex();
        listaAntiIndexBohaterow.undyingAntiIndex();
        listaAntiIndexBohaterow.ursaAntiIndex();
        listaAntiIndexBohaterow.vengefulSpiritAntiIndex();
        listaAntiIndexBohaterow.venomancerAntiIndex();
        listaAntiIndexBohaterow.viperAntiIndex();
        listaAntiIndexBohaterow.visageAntiIndex();
        listaAntiIndexBohaterow.warlockAntiIndex();
        listaAntiIndexBohaterow.weaverAntiIndex();
        listaAntiIndexBohaterow.windrangerAntiIndex();
        listaAntiIndexBohaterow.winterWyvernAntiIndex();
        listaAntiIndexBohaterow.witchDoctorAntiIndex();
        listaAntiIndexBohaterow.wraithKingAntiIndex();
        listaAntiIndexBohaterow.zeusAntiIndex();
        
        listaKoopIndexBohaterow.abaddonKoopIndex();
        listaKoopIndexBohaterow.alchemistKoopIndex();
        listaKoopIndexBohaterow.ancientApparitionKoopIndex();
        listaKoopIndexBohaterow.antiMageKoopIndex();
        listaKoopIndexBohaterow.arcWardenKoopIndex();
        listaKoopIndexBohaterow.axeKoopIndex();
        listaKoopIndexBohaterow.baneKoopIndex();
        listaKoopIndexBohaterow.batriderKoopIndex();
        listaKoopIndexBohaterow.beastmasterKoopIndex();
        listaKoopIndexBohaterow.bloodseekerKoopIndex();
        listaKoopIndexBohaterow.bountyHunterKoopIndex();
        listaKoopIndexBohaterow.brewmasterKoopIndex();
        listaKoopIndexBohaterow.bristlebackKoopIndex();
        listaKoopIndexBohaterow.broodmotherKoopIndex();
        listaKoopIndexBohaterow.centaurWarrunnerKoopIndex();
        listaKoopIndexBohaterow.chaosKnightKoopIndex();
        listaKoopIndexBohaterow.chenKoopIndex();
        listaKoopIndexBohaterow.clinkzKoopIndex();
        listaKoopIndexBohaterow.clockwerkKoopIndex();
        listaKoopIndexBohaterow.crystalMaidenKoopIndex();
        listaKoopIndexBohaterow.eSKoopIndex();
        listaKoopIndexBohaterow.darkSeerKoopIndex();
        listaKoopIndexBohaterow.dazzleKoopIndex();
        listaKoopIndexBohaterow.deathProphetKoopIndex();
        listaKoopIndexBohaterow.disruptorKoopIndex();
        listaKoopIndexBohaterow.doomKoopIndex();
        listaKoopIndexBohaterow.dragonKnightKoopIndex();
        listaKoopIndexBohaterow.drowRangerKoopIndex();
        listaKoopIndexBohaterow.eSKoopIndex();
        listaKoopIndexBohaterow.earthSpiritKoopIndex();
        listaKoopIndexBohaterow.elderTitanKoopIndex();
        listaKoopIndexBohaterow.emberSpiritKoopIndex();
        listaKoopIndexBohaterow.enchantressKoopIndex();
        listaKoopIndexBohaterow.enigmaKoopIndex();
        listaKoopIndexBohaterow.facelessVoidKoopIndex();
        listaKoopIndexBohaterow.gyrocopterKoopIndex();
        listaKoopIndexBohaterow.huskarKoopIndex();
        listaKoopIndexBohaterow.invokerKoopIndex();
        listaKoopIndexBohaterow.ioKoopIndex();
        listaKoopIndexBohaterow.jakiroKoopIndex();
        listaKoopIndexBohaterow.juggernautKoopIndex();
        listaKoopIndexBohaterow.keeperOfTheLightKoopIndex();
        listaKoopIndexBohaterow.kunkkaKoopIndex();
        listaKoopIndexBohaterow.legionCommanderKoopIndex();
        listaKoopIndexBohaterow.leshracKoopIndex();
        listaKoopIndexBohaterow.lichKoopIndex();
        listaKoopIndexBohaterow.lifestealerKoopIndex();
        listaKoopIndexBohaterow.linaKoopIndex();
        listaKoopIndexBohaterow.lionKoopIndex();
        listaKoopIndexBohaterow.loneDruidKoopIndex();
        listaKoopIndexBohaterow.lunaKoopIndex();
        listaKoopIndexBohaterow.lycanKoopIndex();
        listaKoopIndexBohaterow.magnusKoopIndex();
        listaKoopIndexBohaterow.medusaKoopIndex();
        listaKoopIndexBohaterow.meepoKoopIndex();
        listaKoopIndexBohaterow.miranaKoopIndex();
        listaKoopIndexBohaterow.morphlingKoopIndex();
        listaKoopIndexBohaterow.nagaSirenKoopIndex();
        listaKoopIndexBohaterow.naturesProphetKoopIndex();
        listaKoopIndexBohaterow.necrophosKoopIndex();
        listaKoopIndexBohaterow.nightStalkerKoopIndex();
        listaKoopIndexBohaterow.nyxAssassinKoopIndex();
        listaKoopIndexBohaterow.ogreMagiKoopIndex();
        listaKoopIndexBohaterow.omniknightKoopIndex();
        listaKoopIndexBohaterow.oracleKoopIndex();
        listaKoopIndexBohaterow.outworldDevourerKoopIndex();
        listaKoopIndexBohaterow.phantomAssassinKoopIndex();
        listaKoopIndexBohaterow.phantomLancerKoopIndex();
        listaKoopIndexBohaterow.phoenixKoopIndex();
        listaKoopIndexBohaterow.puckKoopIndex();
        listaKoopIndexBohaterow.pudgeKoopIndex();
        listaKoopIndexBohaterow.pugnaKoopIndex();
        listaKoopIndexBohaterow.queenOfPainKoopIndex();
        listaKoopIndexBohaterow.razorKoopIndex();
        listaKoopIndexBohaterow.rikiKoopIndex();
        listaKoopIndexBohaterow.rubickKoopIndex();
        listaKoopIndexBohaterow.sandKingKoopIndex();
        listaKoopIndexBohaterow.shadowDemonKoopIndex();
        listaKoopIndexBohaterow.shadowFiendKoopIndex();
        listaKoopIndexBohaterow.shadowShamanKoopIndex();
        listaKoopIndexBohaterow.silencerKoopIndex();
        listaKoopIndexBohaterow.skywrathMageKoopIndex();
        listaKoopIndexBohaterow.slardarKoopIndex();
        listaKoopIndexBohaterow.slarkKoopIndex();
        listaKoopIndexBohaterow.sniperKoopIndex();
        listaKoopIndexBohaterow.spectreKoopIndex();
        listaKoopIndexBohaterow.spiritBreakerKoopIndex();
        listaKoopIndexBohaterow.stormSpiritKoopIndex();
        listaKoopIndexBohaterow.svenKoopIndex();
        listaKoopIndexBohaterow.techiesKoopIndex();
        listaKoopIndexBohaterow.templarAssassinKoopIndex();
        listaKoopIndexBohaterow.terrorbladeKoopIndex();
        listaKoopIndexBohaterow.tidehunterKoopIndex();
        listaKoopIndexBohaterow.timbersawKoopIndex();
        listaKoopIndexBohaterow.tinkerKoopIndex();
        listaKoopIndexBohaterow.tinyKoopIndex();
        listaKoopIndexBohaterow.treantProtectorKoopIndex();
        listaKoopIndexBohaterow.trollWarlordKoopIndex();
        listaKoopIndexBohaterow.tuskKoopIndex();
        listaKoopIndexBohaterow.undyingKoopIndex();
        listaKoopIndexBohaterow.ursaKoopIndex();
        listaKoopIndexBohaterow.vengefulSpiritKoopIndex();
        listaKoopIndexBohaterow.venomancerKoopIndex();
        listaKoopIndexBohaterow.viperKoopIndex();
        listaKoopIndexBohaterow.visageKoopIndex();
        listaKoopIndexBohaterow.warlockKoopIndex();
        listaKoopIndexBohaterow.weaverKoopIndex();
        listaKoopIndexBohaterow.windrangerKoopIndex();
        listaKoopIndexBohaterow.winterWyvernKoopIndex();
        listaKoopIndexBohaterow.witchDoctorKoopIndex();
        listaKoopIndexBohaterow.wraithKingKoopIndex();
        listaKoopIndexBohaterow.zeusKoopIndex();
       
        
        
        wynikWyjsciowyRadiantDire.start();
        wyborRatio.tworzenieWyborRatio();
        usuniecieRatio.tworzenieUsuniecieRatio();
        bestToPickAvoidList.sortowanieListyRadiantDire();
        ratioInfo.tworzenieRatioInfo();
    }
    
    //
    //
    //Wybor druzyny radiant
    //
    //
    
    class Mysz implements MouseListener {
        
        URL imgR2 = Mysz.class.getResource("radiantlabel2.png");
        URL imgR1 = Mysz.class.getResource("radiantlabel.png");
        URL imgWR = Mysz.class.getResource("wybranaRadiant.png");
        
        ImageIcon iconR2  = new ImageIcon(imgR2);
        ImageIcon iconR1  = new ImageIcon(imgR1);
        ImageIcon iconWR  = new ImageIcon(imgWR);
  
        public void tworzenieMysz(){
            
        radiantLabel.addMouseListener(mysz);
    }
        @Override
        public void mouseClicked(MouseEvent e) {
       
            radiantW = true;
            direW = false;
            radiantLabel.setEnabled(false);
            direLabel.setEnabled(true);
            wybranaDruzyna.setIcon(iconWR);
            
            if((radiantPostacA == true || radiantPostacB == true || radiantPostacC == true || radiantPostacD == true || radiantPostacE == true) || (direPostacA == true || direPostacB == true || direPostacC == true || direPostacD == true || direPostacE == true)){
                
            listaBestToPick.removeAllItems();
            listaBestToAvoid.removeAllItems();
            bestToPickAvoidList.sortowanieListyRadiantDire();
                
            }
         
        }

        @Override
        public void mousePressed(MouseEvent e) {
               
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        
        radiantLabel.setIcon(iconR1);
        
        }

        @Override
        public void mouseExited(MouseEvent e) {
        
        radiantLabel.setIcon(iconR2);
         }  
    }
    
    //
    //
    // Wybor druzyny dire
    //
    //
    
    class Mysz2 implements MouseListener{
        
        URL imgD1 = Mysz2.class.getResource("direlabel.png");
        URL imgD2 = Mysz2.class.getResource("direlabel2.png");
        URL imgWD = Mysz2.class.getResource("wybranaDire.png");
        
        ImageIcon iconD1  = new ImageIcon(imgD1);
        ImageIcon iconD2  = new ImageIcon(imgD2);
        ImageIcon iconWD  = new ImageIcon(imgWD);
        
             public void tworzenieMysz2(){
             
             direLabel.addMouseListener(mysz2);
             }

            @Override
            public void mouseClicked(MouseEvent g) {
                
            radiantW = false;
            direW = true;
            radiantLabel.setEnabled(true);
            direLabel.setEnabled(false);
            wybranaDruzyna.setIcon(iconWD);
            
            if((radiantPostacA == true || radiantPostacB == true || radiantPostacC == true || radiantPostacD == true || radiantPostacE == true) || (direPostacA == true || direPostacB == true || direPostacC == true || direPostacD == true || direPostacE == true)){
            
            listaBestToPick.removeAllItems();
            listaBestToAvoid.removeAllItems();    
            bestToPickAvoidList.sortowanieListyRadiantDire();
                
            }
           
            }

            @Override
            public void mousePressed(MouseEvent g) {
                  
            }

            @Override
            public void mouseReleased(MouseEvent g) {
               
            }

            @Override
            public void mouseEntered(MouseEvent g) {
                
            direLabel.setIcon(iconD1);
                
            }

            @Override
            public void mouseExited(MouseEvent g) {
                
            direLabel.setIcon(iconD2);
                
            }           
    }
    
    //
    //
    // Dodawanie 5 postaci do druzyny radiant albo dire
    //
    //
    
    class WyborPostaci{
    
        public void wyborEs(){
            
         es.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent es1){
            
            if(direEs == false && radiantEs == false){    
        
                
                
        int width = es.getWidth();
        if(es1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantEs = true;
            es.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + eSKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - eSAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon1);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Earth Shaker");
                radiantNazwa1 = nazwaEs;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon1);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Earth Shaker");
                radiantNazwa2 = nazwaEs;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon1);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Earth Shaker");
                radiantNazwa3 = nazwaEs;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon1);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Earth Shaker");
                radiantNazwa4 = nazwaEs;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon1);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Earth Shaker");
                radiantNazwa5 = nazwaEs;
           
                 
            }
            
                  
        }
        }
        
            if(es1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direEs = true;
            es.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + eSKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - eSAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon1);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Earth Shaker");
                direNazwa1 = nazwaEs;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon1);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Earth Shaker");
                direNazwa2 = nazwaEs;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon1);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Earth Shaker");
                direNazwa3 = nazwaEs;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon1);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Earth Shaker");
                direNazwa4 = nazwaEs;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon1);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Earth Shaker"); 
                direNazwa5 = nazwaEs;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborAbaddon(){
            
         abaddon.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent abaddon1){
            
            if(direAbaddon == false && radiantAbaddon == false){    
        
                
                
        int width = abaddon.getWidth();
        if(abaddon1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantAbaddon = true;
            abaddon.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + abaddonKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - abaddonAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon36);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Abaddon");
                radiantNazwa1 = nazwaAbaddon;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon36);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Abaddon");
                radiantNazwa2 = nazwaAbaddon;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon36);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Abaddon");
                radiantNazwa3 = nazwaAbaddon;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon36);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Abaddon");
                radiantNazwa4 = nazwaAbaddon;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon36);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Abaddon");
                radiantNazwa5 = nazwaAbaddon;
           
                 
            }
            
                  
        }
        }
        
            if(abaddon1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direAbaddon = true;
            abaddon.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + abaddonKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - abaddonAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon36);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Abaddon");
                direNazwa1 = nazwaAbaddon;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon36);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Abaddon");
                direNazwa2 = nazwaAbaddon;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon36);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Abaddon");
                direNazwa3 = nazwaAbaddon;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon36);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Abaddon");
                direNazwa4 = nazwaAbaddon;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon36);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Abaddon"); 
                direNazwa5 = nazwaAbaddon;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborAlchemist(){
            
         alchemist.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent alchemist1){
            
            if(direAlchemist == false && radiantAlchemist == false){    
        
                
                
        int width = alchemist.getWidth();
        if(alchemist1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantAlchemist = true;
            alchemist.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + alchemistKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - alchemistAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon10);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Alchemist");
                radiantNazwa1 = nazwaAlchemist;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon10);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Alchemist");
                radiantNazwa2 = nazwaAlchemist;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon10);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Alchemist");
                radiantNazwa3 = nazwaAlchemist;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon10);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Alchemist");
                radiantNazwa4 = nazwaAlchemist;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon10);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Alchemist");
                radiantNazwa5 = nazwaAlchemist;
           
                 
            }
            
                  
        }
        }
        
            if(alchemist1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direAlchemist = true;
            alchemist.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + alchemistKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - alchemistAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon10);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Alchemist");
                direNazwa1 = nazwaAlchemist;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon10);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Alchemist");
                direNazwa2 = nazwaAlchemist;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon10);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Alchemist");
                direNazwa3 = nazwaAlchemist;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon10);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Alchemist");
                direNazwa4 = nazwaAlchemist;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon10);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Alchemist"); 
                direNazwa5 = nazwaAlchemist;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborAncientApparition(){
            
         ancientApparition.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent ancientApparition1){
            
            if(direAncientApparition == false && radiantAncientApparition == false){    
        
                
                
        int width = ancientApparition.getWidth();
        if(ancientApparition1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantAncientApparition = true;
            ancientApparition.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + ancientApparitionKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - ancientApparitionAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon106);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Ancient Apparition");
                radiantNazwa1 = nazwaAncientApparition;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon106);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Ancient Apparition");
                radiantNazwa2 = nazwaAncientApparition;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon106);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Ancient Apparition");
                radiantNazwa3 = nazwaAncientApparition;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon106);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Ancient Apparition");
                radiantNazwa4 = nazwaAncientApparition;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon106);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Ancient Apparition");
                radiantNazwa5 = nazwaAncientApparition;
           
                 
            }
            
                  
        }
        }
        
            if(ancientApparition1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direAncientApparition = true;
            ancientApparition.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ancientApparitionKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ancientApparitionAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon106);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Ancient Apparition");
                direNazwa1 = nazwaAncientApparition;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon106);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Ancient Apparition");
                direNazwa2 = nazwaAncientApparition;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon106);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Ancient Apparition");
                direNazwa3 = nazwaAncientApparition;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon106);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Ancient Apparition");
                direNazwa4 = nazwaAncientApparition;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon106);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Ancient Apparition"); 
                direNazwa5 = nazwaAncientApparition;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborAntiMage(){
            
         antiMage.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent antiMage1){
            
            if(direAntiMage == false && radiantAntiMage == false){    
        
                
                
        int width = antiMage.getWidth();
        if(antiMage1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantAntiMage = true;
            antiMage.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + antiMageKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - antiMageAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon37);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Anti-Mage");
                radiantNazwa1 = nazwaAntiMage;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon37);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Anti-Mage");
                radiantNazwa2 = nazwaAntiMage;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon37);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Anti-Mage");
                radiantNazwa3 = nazwaAntiMage;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon37);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Anti-Mage");
                radiantNazwa4 = nazwaAntiMage;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon37);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Anti-Mage");
                radiantNazwa5 = nazwaAntiMage;
           
                 
            }
            
                  
        }
        }
        
            if(antiMage1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direAntiMage = true;
            antiMage.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + antiMageKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - antiMageAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon37);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Anti-Mage");
                direNazwa1 = nazwaAntiMage;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon37);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Anti-Mage");
                direNazwa2 = nazwaAntiMage;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon37);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Anti-Mage");
                direNazwa3 = nazwaAntiMage;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon37);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Anti-Mage");
                direNazwa4 = nazwaAbaddon;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon37);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Anti-Mage"); 
                direNazwa5 = nazwaAntiMage;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborArcWarden(){
            
         arcWarden.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent arcWarden1){
            
            if(direArcWarden == false && radiantArcWarden == false){    
        
                
                
        int width = arcWarden.getWidth();
        if(arcWarden1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantArcWarden = true;
            arcWarden.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + arcWardenKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - arcWardenAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon112);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Arc Warden");
                radiantNazwa1 = nazwaArcWarden;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon112);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Arc Warden");
                radiantNazwa2 = nazwaArcWarden;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon112);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Arc Warden");
                radiantNazwa3 = nazwaArcWarden;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon112);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Arc Warden");
                radiantNazwa4 = nazwaArcWarden;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon112);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Arc Warden");
                radiantNazwa5 = nazwaArcWarden;
           
                 
            }
            
                  
        }
        }
        
            if(arcWarden1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direArcWarden = true;
            arcWarden.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + arcWardenKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - arcWardenAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon112);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Arc Warden");
                direNazwa1 = nazwaArcWarden;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon112);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Arc Warden");
                direNazwa2 = nazwaArcWarden;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon112);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Arc Warden");
                direNazwa3 = nazwaArcWarden;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon112);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Arc Warden");
                direNazwa4 = nazwaArcWarden;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon112);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Arc Warden"); 
                direNazwa5 = nazwaArcWarden;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborAxe(){
            
         axe.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent axe1){
            
            if(direAxe == false && radiantAxe == false){    
        
                
                
        int width = axe.getWidth();
        if(axe1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantAxe = true;
            axe.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + axeKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - axeAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon22);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Axe");
                radiantNazwa1 = nazwaAxe;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon22);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Axe");
                radiantNazwa2 = nazwaAxe;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon22);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Axe");
                radiantNazwa3 = nazwaAxe;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon22);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Axe");
                radiantNazwa4 = nazwaAxe;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon22);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Axe");
                radiantNazwa5 = nazwaAxe;
           
                 
            }
            
                  
        }
        }
        
            if(axe1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direAxe = true;
            axe.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + axeKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - axeAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon22);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Axe");
                direNazwa1 = nazwaAxe;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon22);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Axe");
                direNazwa2 = nazwaAxe;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon22);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Axe");
                direNazwa3 = nazwaAxe;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon22);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Axe");
                direNazwa4 = nazwaAxe;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon22);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Axe"); 
                direNazwa5 = nazwaAxe;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborBane(){
            
         bane.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent bane1){
            
            if(direBane == false && radiantBane == false){    
        
                
                
        int width = abaddon.getWidth();
        if(bane1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBane = true;
            bane.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + baneKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - baneAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon92);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Bane");
                radiantNazwa1 = nazwaBane;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon92);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Bane");
                radiantNazwa2 = nazwaBane;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon92);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Bane");
                radiantNazwa3 = nazwaBane;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon92);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Bane");
                radiantNazwa4 = nazwaBane;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon92);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Bane");
                radiantNazwa5 = nazwaBane;
           
                 
            }
            
                  
        }
        }
        
            if(bane1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBane = true;
            bane.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + baneKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - baneAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon92);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Bane");
                direNazwa1 = nazwaBane;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon92);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Bane");
                direNazwa2 = nazwaBane;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon92);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Bane");
                direNazwa3 = nazwaBane;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon92);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Bane");
                direNazwa4 = nazwaBane;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon92);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Bane"); 
                direNazwa5 = nazwaBane;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborBatrider(){
            
         batrider.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent batrider1){
            
            if(direBatrider == false && radiantBatrider == false){    
        
                
                
        int width = batrider.getWidth();
        if(batrider1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBatrider = true;
            batrider.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + batriderKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - batriderAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon105);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Batrider");
                radiantNazwa1 = nazwaBatrider;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon105);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Batrider");
                radiantNazwa2 = nazwaBatrider;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon105);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Batrider");
                radiantNazwa3 = nazwaBatrider;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon105);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Batrider");
                radiantNazwa4 = nazwaBatrider;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon105);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Batrider");
                radiantNazwa5 = nazwaBatrider;
           
                 
            }
            
                  
        }
        }
        
            if(batrider1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBatrider = true;
            batrider.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + batriderKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - batriderAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon105);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Batrider");
                direNazwa1 = nazwaBatrider;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon105);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Batrider");
                direNazwa2 = nazwaBatrider;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon105);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Batrider");
                direNazwa3 = nazwaBatrider;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon105);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Batrider");
                direNazwa4 = nazwaBatrider;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon105);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Batrider"); 
                direNazwa5 = nazwaBatrider;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborBeastmaster(){
            
        beastmaster.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent beastmaster1){
            
            if(direBeastmaster == false && radiantBeastmaster == false){    
                   
        int width = beastmaster.getWidth();
        if(beastmaster1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBeastmaster = true;
            beastmaster.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + beastmasterKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - beastmasterAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon6);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Beastmaster");
                radiantNazwa1 = nazwaBeastmaster;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon6);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Beastmaster");
                radiantNazwa2 = nazwaBeastmaster;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon6);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Beastmaster");
                radiantNazwa3 = nazwaBeastmaster;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon6);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Beastmaster");
                radiantNazwa4 = nazwaBeastmaster;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon6);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Beastmaster");
                radiantNazwa5 = nazwaBeastmaster;
                
                
            }
                    
        }
        }
        
        if(beastmaster1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBeastmaster = true;
            beastmaster.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + beastmasterKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - beastmasterAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon6);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Beastmaster");
                direNazwa1 = nazwaBeastmaster;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon6);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Beastmaster");
                direNazwa2 = nazwaBeastmaster;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon6);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Beastmaster");
                direNazwa3 = nazwaBeastmaster;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon6);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Beastmaster");
                direNazwa4 = nazwaBeastmaster;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon6);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Beastmaster"); 
                direNazwa5 = nazwaBeastmaster;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborBloodseeker(){
            
         bloodseeker.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent bloodseeker1){
            
            if(direBloodseeker == false && radiantBloodseeker == false){    
        
                
                
        int width = bloodseeker.getWidth();
        if(bloodseeker1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBloodseeker = true;
            bloodseeker.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + bloodseekerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - bloodseekerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon55);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Bloodseeker");
                radiantNazwa1 = nazwaBloodseeker;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon55);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Bloodseeker");
                radiantNazwa2 = nazwaBloodseeker;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon55);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Bloodseeker");
                radiantNazwa3 = nazwaBloodseeker;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon55);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Bloodseeker");
                radiantNazwa4 = nazwaBloodseeker;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon55);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Bloodseeker");
                radiantNazwa5 = nazwaBloodseeker;
           
                 
            }
            
                  
        }
        }
        
            if(bloodseeker1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBloodseeker = true;
            bloodseeker.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bloodseekerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bloodseekerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon55);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Bloodseeker");
                direNazwa1 = nazwaBloodseeker;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon55);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Bloodseeker");
                direNazwa2 = nazwaBloodseeker;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon55);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Bloodseeker");
                direNazwa3 = nazwaBloodseeker;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon55);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Bloodseeker");
                direNazwa4 = nazwaBloodseeker;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon55);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Bloodseeker"); 
                direNazwa5 = nazwaBloodseeker;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborBountyHunter(){
            
         bountyHunter.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent bountyHunter1){
            
            if(direBountyHunter == false && radiantBountyHunter == false){    
        
                
                
        int width = bountyHunter.getWidth();
        if(bountyHunter1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBountyHunter = true;
            bountyHunter.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + bountyHunterKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - bountyHunterAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon48);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Bounty Hunter");
                radiantNazwa1 = nazwaBountyHunter;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon48);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Bounty Hunter");
                radiantNazwa2 = nazwaBountyHunter;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon48);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Bounty Hunter");
                radiantNazwa3 = nazwaBountyHunter;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon48);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Bounty Hunter");
                radiantNazwa4 = nazwaBountyHunter;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon48);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Bounty Hunter");
                radiantNazwa5 = nazwaBountyHunter;
           
                 
            }
            
                  
        }
        }
        
            if(bountyHunter1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBountyHunter = true;
            bountyHunter.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bountyHunterKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bountyHunterAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon48);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Bounty Hunter");
                direNazwa1 = nazwaBountyHunter;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon48);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Bounty Hunter");
                direNazwa2 = nazwaBountyHunter;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon48);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Bounty Hunter");
                direNazwa3 = nazwaBountyHunter;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon48);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Bounty Hunter");
                direNazwa4 = nazwaBountyHunter;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon48);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Bounty Hunter"); 
                direNazwa5 = nazwaBountyHunter;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborBrewmaster(){
            
         brewmaster.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent brewmaster1){
            
            if(direBrewmaster == false && radiantBrewmaster == false){    
        
                
                
        int width = brewmaster.getWidth();
        if(brewmaster1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBrewmaster = true;
            brewmaster.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + brewmasterKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - brewmasterAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon11);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Brewmaster");
                radiantNazwa1 = nazwaBrewmaster;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon11);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Brewmaster");
                radiantNazwa2 = nazwaBrewmaster;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon11);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Brewmaster");
                radiantNazwa3 = nazwaBrewmaster;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon11);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Brewmaster");
                radiantNazwa4 = nazwaBrewmaster;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon11);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Brewmaster");
                radiantNazwa5 = nazwaBrewmaster;
           
                 
            }
            
                  
        }
        }
        
            if(brewmaster1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBrewmaster = true;
            brewmaster.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + brewmasterKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - brewmasterAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon11);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Brewmaster");
                direNazwa1 = nazwaBrewmaster;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon11);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Brewmaster");
                direNazwa2 = nazwaBrewmaster;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon11);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Brewmaster");
                direNazwa3 = nazwaBrewmaster;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon11);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Brewmaster");
                direNazwa4 = nazwaBrewmaster;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon11);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Brewmaster"); 
                direNazwa5 = nazwaBrewmaster;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborBristleback(){
            
         bristleback.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent bristleback1){
            
            if(direBristleback == false && radiantBristleback == false){    
        
                
                
        int width = bristleback.getWidth();
        if(bristleback1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBristleback = true;
            bristleback.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + bristlebackKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - bristlebackAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon16);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Bristleback");
                radiantNazwa1 = nazwaBristleback;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon16);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Bristleback");
                radiantNazwa2 = nazwaBristleback;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon16);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Bristleback");
                radiantNazwa3 = nazwaBristleback;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon16);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Bristleback");
                radiantNazwa4 = nazwaBristleback;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon16);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Bristleback");
                radiantNazwa5 = nazwaBristleback;
           
                 
            }
            
                  
        }
        }
        
            if(bristleback1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBristleback = true;
            bristleback.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bristlebackKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bristlebackAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon16);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Bristleback");
                direNazwa1 = nazwaBristleback;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon16);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Bristleback");
                direNazwa2 = nazwaBristleback;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon16);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Bristleback");
                direNazwa3 = nazwaBristleback;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon16);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Bristleback");
                direNazwa4 = nazwaBristleback;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon16);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Bristleback"); 
                direNazwa5 = nazwaBristleback;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborBroodmother(){
            
         broodmother.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent broodmother1){
            
            if(direBroodmother == false && radiantBroodmother == false){    
        
                
                
        int width = broodmother.getWidth();
        if(broodmother1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantBroodmother = true;
            broodmother.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + broodmotherKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - broodmotherAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon63);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Broodmother");
                radiantNazwa1 = nazwaBroodmother;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon63);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Broodmother");
                radiantNazwa2 = nazwaBroodmother;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon63);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Broodmother");
                radiantNazwa3 = nazwaBroodmother;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon63);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Broodmother");
                radiantNazwa4 = nazwaBroodmother;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon63);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Broodmother");
                radiantNazwa5 = nazwaBroodmother;
           
                 
            }
            
                  
        }
        }
        
            if(broodmother1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direBroodmother = true;
            broodmother.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + broodmotherKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - broodmotherAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon63);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Broodmother");
                direNazwa1 = nazwaBroodmother;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon63);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Broodmother");
                direNazwa2 = nazwaBroodmother;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon63);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Broodmother");
                direNazwa3 = nazwaBroodmother;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon63);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Broodmother");
                direNazwa4 = nazwaBroodmother;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon63);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Broodmother"); 
                direNazwa5 = nazwaBroodmother;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborCentaurWarrunner(){
            
         centaurWarrunner.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent centaurWarrunner1){
            
            if(direCentaurWarrunner == false && radiantCentaurWarrunner == false){    
        
                
                
        int width = centaurWarrunner.getWidth();
        if(centaurWarrunner1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantCentaurWarrunner = true;
            centaurWarrunner.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + centaurWarrunnerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - centaurWarrunnerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon14);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Centaur Warrunner");
                radiantNazwa1 = nazwaCentaurWarrunner;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon14);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Centaur Warrunner");
                radiantNazwa2 = nazwaCentaurWarrunner;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon14);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Centaur Warrunner");
                radiantNazwa3 = nazwaCentaurWarrunner;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon14);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Centaur Warrunner");
                radiantNazwa4 = nazwaCentaurWarrunner;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon14);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Centaur Warrunner");
                radiantNazwa5 = nazwaCentaurWarrunner;
           
                 
            }
            
                  
        }
        }
        
            if(centaurWarrunner1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direCentaurWarrunner = true;
            centaurWarrunner.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + centaurWarrunnerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - centaurWarrunnerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon14);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Centaur Warrunner");
                direNazwa1 = nazwaCentaurWarrunner;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon14);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Centaur Warrunner");
                direNazwa2 = nazwaCentaurWarrunner;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon14);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Centaur Warrunner");
                direNazwa3 = nazwaCentaurWarrunner;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon14);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Centaur Warrunner");
                direNazwa4 = nazwaCentaurWarrunner;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon14);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Centaur Warrunner"); 
                direNazwa5 = nazwaCentaurWarrunner;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborChaosKnight(){
            
         chaosKnight.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent chaosKnight1){
            
            if(direChaosKnight == false && radiantChaosKnight == false){    
        
                
                
        int width = chaosKnight.getWidth();
        if(chaosKnight1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantChaosKnight = true;
            chaosKnight.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + chaosKnightKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - chaosKnightAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon33);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Chaos Knight");
                radiantNazwa1 = nazwaChaosKnight;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon33);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Chaos Knight");
                radiantNazwa2 = nazwaChaosKnight;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon33);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Chaos Knight");
                radiantNazwa3 = nazwaChaosKnight;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon33);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Chaos Knight");
                radiantNazwa4 = nazwaChaosKnight;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon33);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Chaos Knight");
                radiantNazwa5 = nazwaChaosKnight;
           
                 
            }
            
                  
        }
        }
        
            if(chaosKnight1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direChaosKnight = true;
            chaosKnight.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chaosKnightKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chaosKnightAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon33);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Chaos Knight");
                direNazwa1 = nazwaChaosKnight;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon33);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Chaos Knight");
                direNazwa2 = nazwaChaosKnight;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon33);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Chaos Knight");
                direNazwa3 = nazwaChaosKnight;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon33);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Chaos Knight");
                direNazwa4 = nazwaChaosKnight;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon33);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Chaos Knight"); 
                direNazwa5 = nazwaChaosKnight;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborChen(){
            
         chen.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent chen1){
            
            if(direChen == false && radiantChen == false){    
        
                
                
        int width = chen.getWidth();
        if(chen1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantChen = true;
            chen.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + chenKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - chenAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon83);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Chen");
                radiantNazwa1 = nazwaChen;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon83);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Chen");
                radiantNazwa2 = nazwaChen;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon83);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Chen");
                radiantNazwa3 = nazwaChen;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon83);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Chen");
                radiantNazwa4 = nazwaChen;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon83);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Chen");
                radiantNazwa5 = nazwaChen;
           
                 
            }
            
                  
        }
        }
        
            if(chen1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direChen = true;
            chen.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chenKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chenAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon83);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Chen");
                direNazwa1 = nazwaChen;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon83);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Chen");
                direNazwa2 = nazwaChen;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon83);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Chen");
                direNazwa3 = nazwaChen;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon83);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Chen");
                direNazwa4 = nazwaChen;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon83);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Chen"); 
                direNazwa5 = nazwaChen;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborClinkz(){
            
         clinkz.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent clinkz1){
            
            if(direClinkz == false && radiantClinkz == false){    
        
                
                
        int width = clinkz.getWidth();
        if(clinkz1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantClinkz = true;
            clinkz.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + clinkzKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - clinkzAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon62);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Clinkz");
                radiantNazwa1 = nazwaClinkz;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon62);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Clinkz");
                radiantNazwa2 = nazwaClinkz;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon62);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Clinkz");
                radiantNazwa3 = nazwaClinkz;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon62);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Clinkz");
                radiantNazwa4 = nazwaClinkz;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon62);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Clinkz");
                radiantNazwa5 = nazwaClinkz;
           
                 
            }
            
                  
        }
        }
        
            if(clinkz1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direClinkz = true;
            clinkz.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clinkzKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clinkzAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon62);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Clinkz");
                direNazwa1 = nazwaClinkz;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon62);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Clinkz");
                direNazwa2 = nazwaClinkz;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon62);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Clinkz");
                direNazwa3 = nazwaClinkz;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon62);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Clinkz");
                direNazwa4 = nazwaClinkz;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon62);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Clinkz"); 
                direNazwa5 = nazwaClinkz;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborClockwerk(){
            
         clockwerk.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent clockwerk1){
            
            if(direClockwerk == false && radiantClockwerk == false){    
        
                
                
        int width = clockwerk.getWidth();
        if(clockwerk1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantClockwerk = true;
            clockwerk.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + clockwerkKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - clockwerkAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon8);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Clockwerk");
                radiantNazwa1 = nazwaClockwerk;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon8);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Clockwerk");
                radiantNazwa2 = nazwaClockwerk;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon8);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Clockwerk");
                radiantNazwa3 = nazwaClockwerk;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon8);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Clockwerk");
                radiantNazwa4 = nazwaClockwerk;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon8);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Clockwerk");
                radiantNazwa5 = nazwaClockwerk;
           
                 
            }
            
                  
        }
        }
        
            if(clockwerk1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direClockwerk = true;
            clockwerk.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clockwerkKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clockwerkAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon8);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Clockwerk");
                direNazwa1 = nazwaClockwerk;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon8);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Clockwerk");
                direNazwa2 = nazwaClockwerk;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon8);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Clockwerk");
                direNazwa3 = nazwaClockwerk;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon8);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Clockwerk");
                direNazwa4 = nazwaClockwerk;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon8);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Clockwerk"); 
                direNazwa5 = nazwaClockwerk;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborCrystalMaiden(){
            
         crystalMaiden.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent crystalMaiden1){
            
            if(direCrystalMaiden == false && radiantCrystalMaiden == false){    
        
                
                
        int width = crystalMaiden.getWidth();
        if(crystalMaiden1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantCrystalMaiden = true;
            crystalMaiden.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + crystalMaidenKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - crystalMaidenAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon71);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Crystal Maiden");
                radiantNazwa1 = nazwaCrystalMaiden;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon71);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Crystal Maiden");
                radiantNazwa2 = nazwaCrystalMaiden;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon71);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Crystal Maiden");
                radiantNazwa3 = nazwaCrystalMaiden;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon71);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Crystal Maiden");
                radiantNazwa4 = nazwaCrystalMaiden;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon71);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Crystal Maiden");
                radiantNazwa5 = nazwaCrystalMaiden;
           
                 
            }
            
                  
        }
        }
        
            if(crystalMaiden1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direCrystalMaiden = true;
            crystalMaiden.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + crystalMaidenKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - crystalMaidenAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon71);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Crystal Maiden");
                direNazwa1 = nazwaCrystalMaiden;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon71);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Crystal Maiden");
                direNazwa2 = nazwaCrystalMaiden;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon71);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Crystal Maiden");
                direNazwa3 = nazwaCrystalMaiden;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon71);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Crystal Maiden");
                direNazwa4 = nazwaAbaddon;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon71);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Crystal Maiden"); 
                direNazwa5 = nazwaCrystalMaiden;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborDarkSeer(){
            
         darkSeer.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent darkSeer1){
            
            if(direDarkSeer == false && radiantDarkSeer == false){    
        
                
                
        int width = darkSeer.getWidth();
        if(darkSeer1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantDarkSeer = true;
            darkSeer.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + darkSeerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - darkSeerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon104);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Dark Seer");
                radiantNazwa1 = nazwaDarkSeer;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon104);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Dark Seer");
                radiantNazwa2 = nazwaDarkSeer;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon104);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Dark Seer");
                radiantNazwa3 = nazwaDarkSeer;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon104);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Dark Seer");
                radiantNazwa4 = nazwaDarkSeer;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon104);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Dark Seer");
                radiantNazwa5 = nazwaDarkSeer;
           
                 
            }
            
                  
        }
        }
        
            if(darkSeer1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direDarkSeer = true;
            darkSeer.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + darkSeerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - darkSeerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon104);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Dark Seer");
                direNazwa1 = nazwaDarkSeer;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon104);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Dark Seer");
                direNazwa2 = nazwaDarkSeer;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon104);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Dark Seer");
                direNazwa3 = nazwaDarkSeer;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon104);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Dark Seer");
                direNazwa4 = nazwaDarkSeer;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon104);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Dark Seer"); 
                direNazwa5 = nazwaDarkSeer;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborDazzle(){
            
         dazzle.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent dazzle1){
            
            if(direDazzle == false && radiantDazzle == false){    
        
                
                
        int width = dazzle.getWidth();
        if(dazzle1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantDazzle = true;
            dazzle.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + dazzleKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - dazzleAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon102);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Dazzle");
                radiantNazwa1 = nazwaDazzle;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon102);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Dazzle");
                radiantNazwa2 = nazwaDazzle;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon102);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Dazzle");
                radiantNazwa3 = nazwaDazzle;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon102);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Dazzle");
                radiantNazwa4 = nazwaDazzle;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon102);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Dazzle");
                radiantNazwa5 = nazwaDazzle;
           
                 
            }
            
                  
        }
        }
        
            if(dazzle1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direDazzle = true;
            dazzle.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dazzleKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dazzleAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon102);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Dazzle");
                direNazwa1 = nazwaDazzle;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon102);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Dazzle");
                direNazwa2 = nazwaDazzle;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon102);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Dazzle");
                direNazwa3 = nazwaDazzle;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon102);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Dazzle");
                direNazwa4 = nazwaDazzle;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon102);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Dazzle"); 
                direNazwa5 = nazwaDazzle;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborDeathProphet(){
            
         deathProphet.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent deathProphet1){
            
            if(direDeathProphet == false && radiantDeathProphet == false){    
        
                
                
        int width = deathProphet.getWidth();
        if(deathProphet1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantDeathProphet = true;
            deathProphet.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + deathProphetKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - deathProphetAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon100);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Death Prophet");
                radiantNazwa1 = nazwaDeathProphet;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon100);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Death Prophet");
                radiantNazwa2 = nazwaDeathProphet;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon100);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Death Prophet");
                radiantNazwa3 = nazwaDeathProphet;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon100);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Death Prophet");
                radiantNazwa4 = nazwaDeathProphet;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon100);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Death Prophet");
                radiantNazwa5 = nazwaDeathProphet;
           
                 
            }
            
                  
        }
        }
        
            if(deathProphet1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direDeathProphet = true;
            deathProphet.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + deathProphetKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - deathProphetAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon100);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Death Prophet");
                direNazwa1 = nazwaDeathProphet;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon100);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Death Prophet");
                direNazwa2 = nazwaDeathProphet;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon100);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Death Prophet");
                direNazwa3 = nazwaDeathProphet;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon100);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Death Prophet");
                direNazwa4 = nazwaDeathProphet;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon100);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Death Prophet"); 
                direNazwa5 = nazwaDeathProphet;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborDisruptor(){
            
         disruptor.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent disruptor1){
            
            if(direDisruptor == false && radiantDisruptor == false){    
        
                
                
        int width = disruptor.getWidth();
        if(disruptor1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantDisruptor = true;
            disruptor.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + disruptorKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - disruptorAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon87);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Disruptor");
                radiantNazwa1 = nazwaDisruptor;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon87);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Disruptor");
                radiantNazwa2 = nazwaDisruptor;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon87);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Disruptor");
                radiantNazwa3 = nazwaDisruptor;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon87);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Disruptor");
                radiantNazwa4 = nazwaDisruptor;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon87);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Disruptor");
                radiantNazwa5 = nazwaDisruptor;
           
                 
            }
            
                  
        }
        }
        
            if(disruptor1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direDisruptor = true;
            disruptor.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + disruptorKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - disruptorAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon87);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Disruptor");
                direNazwa1 = nazwaDisruptor;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon87);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Disruptor");
                direNazwa2 = nazwaDisruptor;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon87);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Disruptor");
                direNazwa3 = nazwaDisruptor;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon87);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Disruptor");
                direNazwa4 = nazwaDisruptor;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon87);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Disruptor"); 
                direNazwa5 = nazwaDisruptor;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborDoom(){
            
         doom.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent doom1){
            
            if(direDoom == false && radiantDoom == false){    
        
                
                
        int width = doom.getWidth();
        if(doom1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantDoom = true;
            doom.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + doomKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - doomAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon30);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Doom");
                radiantNazwa1 = nazwaDoom;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon30);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Doom");
                radiantNazwa2 = nazwaDoom;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon30);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Doom");
                radiantNazwa3 = nazwaDoom;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon30);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Doom");
                radiantNazwa4 = nazwaDoom;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon30);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Doom");
                radiantNazwa5 = nazwaDoom;
           
                 
            }
            
                  
        }
        }
        
            if(doom1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direDoom = true;
            doom.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + doomKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - doomAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon30);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Doom");
                direNazwa1 = nazwaDoom;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon30);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Doom");
                direNazwa2 = nazwaDoom;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon30);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Doom");
                direNazwa3 = nazwaDoom;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon30);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Doom");
                direNazwa4 = nazwaDoom;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon30);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Doom"); 
                direNazwa5 = nazwaDoom;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborDk(){
            
        dragonKnight.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent dK1){
            
            if(direDk == false && radiantDk == false){    
                   
        int width = dragonKnight.getWidth();
        if(dK1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantDk = true;
            dragonKnight.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + dKKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - dKAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon7);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Dragon Knight");
                radiantNazwa1 = nazwaDk;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon7);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Dragon Knight");
                radiantNazwa2 = nazwaDk;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon7);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Dragon Knight");
                radiantNazwa3 = nazwaDk;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon7);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Dragon Knight");
                radiantNazwa4 = nazwaDk;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon7);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Dragon Knight");
                radiantNazwa5 = nazwaDk;
                
                
            }
            
            
                  
        }
        }
        
        if(dK1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direDk = true;
            dragonKnight.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dKKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dKAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon7);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Dragon Knight");
                direNazwa1 = nazwaDk;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon7);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Dragon Knight");
                direNazwa2 = nazwaDk;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon7);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Dragon Knight");
                direNazwa3 = nazwaDk;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon7);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Dragon Knight");
                direNazwa4 = nazwaDk;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon7);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Dragon Knight"); 
                direNazwa5 = nazwaDk;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborDrowRanger(){
            
         drowRanger.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent drowRanger1){
            
            if(direDrowRanger == false && radiantDrowRanger == false){    
        
                
                
        int width = drowRanger.getWidth();
        if(drowRanger1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantDrowRanger = true;
            drowRanger.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + drowRangerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - drowRangerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon38);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Drow Ranger");
                radiantNazwa1 = nazwaDrowRanger;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon38);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Drow Ranger");
                radiantNazwa2 = nazwaDrowRanger;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon38);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Drow Ranger");
                radiantNazwa3 = nazwaDrowRanger;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon38);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Drow Ranger");
                radiantNazwa4 = nazwaDrowRanger;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon38);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Drow Ranger");
                radiantNazwa5 = nazwaDrowRanger;
           
                 
            }
            
                  
        }
        }
        
            if(drowRanger1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direDrowRanger = true;
            drowRanger.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + drowRangerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - drowRangerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon38);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Drow Ranger");
                direNazwa1 = nazwaDrowRanger;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon38);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Drow Ranger");
                direNazwa2 = nazwaDrowRanger;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon38);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Drow Ranger");
                direNazwa3 = nazwaDrowRanger;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon38);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Drow Ranger");
                direNazwa4 = nazwaDrowRanger;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon38);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Drow Ranger"); 
                direNazwa5 = nazwaDrowRanger;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborEarthSpirit(){
            
         earthSpirit.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent earthSpirit1){
            
            if(direEarthSpirit == false && radiantEarthSpirit == false){    
        
                
                
        int width = axe.getWidth();
        if(earthSpirit1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantEarthSpirit = true;
            earthSpirit.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + earthSpiritKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - earthSpiritAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon20);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Earth Spirit");
                radiantNazwa1 = nazwaEarthSpirit;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon20);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Earth Spirit");
                radiantNazwa2 = nazwaEarthSpirit;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon20);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Earth Spirit");
                radiantNazwa3 = nazwaEarthSpirit;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon20);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Earth Spirit");
                radiantNazwa4 = nazwaEarthSpirit;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon20);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Earth Spirit");
                radiantNazwa5 = nazwaEarthSpirit;
           
                 
            }
            
                  
        }
        }
        
            if(earthSpirit1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direEarthSpirit = true;
            earthSpirit.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + earthSpiritKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - earthSpiritAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon20);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Earth Spirit");
                direNazwa1 = nazwaEarthSpirit;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon20);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Earth Spirit");
                direNazwa2 = nazwaEarthSpirit;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon20);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Earth Spirit");
                direNazwa3 = nazwaEarthSpirit;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon20);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Earth Spirit");
                direNazwa4 = nazwaEarthSpirit;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon20);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Earth Spirit"); 
                direNazwa5 = nazwaEarthSpirit;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborElderTitan(){
            
         elderTitan.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent elderTitan1){
            
            if(direElderTitan == false && radiantElderTitan == false){    
        
                
                
        int width = elderTitan.getWidth();
        if(elderTitan1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantElderTitan = true;
            elderTitan.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + elderTitanKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - elderTitanAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon18);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Elder Titan");
                radiantNazwa1 = nazwaElderTitan;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon18);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Elder Titan");
                radiantNazwa2 = nazwaElderTitan;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon18);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Elder Titan");
                radiantNazwa3 = nazwaElderTitan;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon18);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Elder Titan");
                radiantNazwa4 = nazwaElderTitan;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon18);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Elder Titan");
                radiantNazwa5 = nazwaElderTitan;
           
                 
            }
            
                  
        }
        }
        
            if(elderTitan1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direElderTitan = true;
            elderTitan.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + elderTitanKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - elderTitanAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon18);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Elder Titan");
                direNazwa1 = nazwaElderTitan;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon18);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Elder Titan");
                direNazwa2 = nazwaElderTitan;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon18);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Elder Titan");
                direNazwa3 = nazwaElderTitan;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon18);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Elder Titan");
                direNazwa4 = nazwaElderTitan;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon18);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Elder Titan"); 
                direNazwa5 = nazwaElderTitan;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborEmberSpirit(){
            
         emberSpirit.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent emberSpirit1){
            
            if(direEmberSpirit == false && radiantEmberSpirit == false){    
        
                
                
        int width = emberSpirit.getWidth();
        if(emberSpirit1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantEmberSpirit = true;
            emberSpirit.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + emberSpiritKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - emberSpiritAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon54);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Ember Spirit");
                radiantNazwa1 = nazwaEmberSpirit;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon54);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Ember Spirit");
                radiantNazwa2 = nazwaEmberSpirit;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon54);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Ember Spirit");
                radiantNazwa3 = nazwaEmberSpirit;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon54);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Ember Spirit");
                radiantNazwa4 = nazwaEmberSpirit;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon54);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Ember Spirit");
                radiantNazwa5 = nazwaEmberSpirit;
           
                 
            }
            
                  
        }
        }
        
            if(emberSpirit1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direEmberSpirit = true;
            emberSpirit.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + emberSpiritKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - emberSpiritAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon54);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Ember Spirit");
                direNazwa1 = nazwaEmberSpirit;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon54);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Ember Spirit");
                direNazwa2 = nazwaEmberSpirit;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon54);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Ember Spirit");
                direNazwa3 = nazwaEmberSpirit;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon54);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Ember Spirit");
                direNazwa4 = nazwaEmberSpirit;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon54);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Ember Spirit"); 
                direNazwa5 = nazwaEmberSpirit;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborEnchentress(){
            
        enchantress.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent enchantress1){
            
            if(direEnchantress == false && radiantEnchantress == false){    
        
                
                
        int width = enchantress.getWidth();
        if(enchantress1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantEnchantress = true;
            enchantress.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + enchantressKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - enchantressAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon80);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Enchantress");
                radiantNazwa1 = nazwaEnchantress;
         
               
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon80);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Enchantress");
                radiantNazwa2 = nazwaEnchantress;
           
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon80);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Enchantress");
                radiantNazwa3 = nazwaEnchantress;
            
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon80);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Enchantress");
                radiantNazwa4 = nazwaEnchantress;
               
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon80);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Enchantress");
                radiantNazwa5 = nazwaEnchantress;
           
                 
            }
            
                  
        }
        }
        
            if(enchantress1.getX() > width/2){
                if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direEnchantress = true;
            enchantress.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enchantressKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enchantressAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon80);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Enchantress");
                direNazwa1 = nazwaEnchantress;
            
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon80);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Enchantress");
                direNazwa2 = nazwaEnchantress;
        
                
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon80);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Enchantress");
                direNazwa3 = nazwaEnchantress;
     
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon80);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Enchantress");
                direNazwa4 = nazwaEnchantress;
 
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon80);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Enchantress"); 
                direNazwa5 = nazwaEnchantress;
            
                
              }     
        } 
            }
               
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
                        
            }});
         
        }
        
        public void wyborEnigma(){
            
        enigma.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent enigma1){
            
            if(direEnigma == false && radiantEnigma == false){    
                   
        int width = enigma.getWidth();
        if(enigma1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantEnigma = true;
            enigma.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + enigmaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - enigmaAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon96);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Enigma");
                radiantNazwa1 = nazwaDk;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon96);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Enigma");
                radiantNazwa2 = nazwaEnigma;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon96);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Enigma");
                radiantNazwa3 = nazwaEnigma;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon96);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Enigma");
                radiantNazwa4 = nazwaEnigma;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon96);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Enigma");
                radiantNazwa5 = nazwaEnigma;
                
                
            }
            
            
                  
        }
        }
        
        if(enigma1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direEnigma = true;
            enigma.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enigmaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enigmaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon96);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Enigma");
                direNazwa1 = nazwaEnigma;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon96);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Enigma");
                direNazwa2 = nazwaEnigma;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon96);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Enigma");
                direNazwa3 = nazwaEnigma;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon96);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Enigma");
                direNazwa4 = nazwaEnigma;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon96);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Enigma"); 
                direNazwa5 = nazwaEnigma;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborGyrocopter(){
            
        gyrocopter.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent Gyrocopter1){
            
            if(direGyrocopter == false && radiantGyrocopter == false){    
                   
        int width = gyrocopter.getWidth();
        if(Gyrocopter1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantGyrocopter = true;
            gyrocopter.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + gyrocopterKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - gyrocopterAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon50);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Gyrocopter");
                radiantNazwa1 = nazwaGyrocopter;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon50);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Gyrocopter");
                radiantNazwa2 = nazwaGyrocopter;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon50);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Gyrocopter");
                radiantNazwa3 = nazwaGyrocopter;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon50);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Gyrocopter");
                radiantNazwa4 = nazwaGyrocopter;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon50);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Gyrocopter");
                radiantNazwa5 = nazwaGyrocopter;
                
                
            }
            
            
                  
        }
        }
        
        if(Gyrocopter1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direGyrocopter = true;
            gyrocopter.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + gyrocopterKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - gyrocopterAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon50);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Gyrocopter");
                direNazwa1 = nazwaGyrocopter;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon50);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Gyrocopter");
                direNazwa2 = nazwaGyrocopter;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon50);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Gyrocopter");
                direNazwa3 = nazwaGyrocopter;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon50);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Gyrocopter");
                direNazwa4 = nazwaGyrocopter;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon50);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Gyrocopter"); 
                direNazwa5 = nazwaGyrocopter;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborInvoker(){
            
        invoker.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent invoker1){
            
            if(direInvoker == false && radiantInvoker == false){    
                   
        int width = invoker.getWidth();
        if(invoker1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantInvoker = true;
            invoker.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + invokerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - invokerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon107);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Invoker");
                radiantNazwa1 = nazwaInvoker;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon107);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Invoker");
                radiantNazwa2 = nazwaInvoker;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon107);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Invoker");
                radiantNazwa3 = nazwaInvoker;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon107);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Invoker");
                radiantNazwa4 = nazwaInvoker;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon107);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Invoker");
                radiantNazwa5 = nazwaInvoker;
                
                
            }
            
            
                  
        }
        }
        
        if(invoker1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direInvoker = true;
            invoker.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + invokerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - invokerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon107);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Invoker");
                direNazwa1 = nazwaInvoker;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon107);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Invoker");
                direNazwa2 = nazwaInvoker;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon107);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Invoker");
                direNazwa3 = nazwaInvoker;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon107);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Invoker");
                direNazwa4 = nazwaInvoker;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon107);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Invoker"); 
                direNazwa5 = nazwaInvoker;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborIo(){
            
        io.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent io1){
            
            if(direIo == false && radiantIo == false){    
                   
        int width = io.getWidth();
        if(io1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantIo = true;
            io.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + ioKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - ioAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon13);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Io");
                radiantNazwa1 = nazwaIo;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon13);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Io");
                radiantNazwa2 = nazwaIo;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon13);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Io");
                radiantNazwa3 = nazwaIo;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon13);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Io");
                radiantNazwa4 = nazwaIo;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon13);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Io");
                radiantNazwa5 = nazwaIo;
                
                
            }
            
            
                  
        }
        }
        
        if(io1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direIo = true;
            io.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ioKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ioAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon13);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Io");
                direNazwa1 = nazwaIo;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon13);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Io");
                direNazwa2 = nazwaIo;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon13);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Io");
                direNazwa3 = nazwaIo;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon13);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Io");
                direNazwa4 = nazwaIo;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon13);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Io"); 
                direNazwa5 = nazwaIo;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborJakiro(){
            
        jakiro.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent jakiro1){
            
            if(direJakiro == false && radiantJakiro == false){    
                   
        int width = jakiro.getWidth();
        if(jakiro1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantJakiro = true;
            jakiro.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + jakiroKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - jakiroAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon81);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Jakiro");
                radiantNazwa1 = nazwaJakiro;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon81);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Jakiro");
                radiantNazwa2 = nazwaJakiro;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon81);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Jakiro");
                radiantNazwa3 = nazwaJakiro;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon81);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Jakiro");
                radiantNazwa4 = nazwaJakiro;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon81);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Jakiro");
                radiantNazwa5 = nazwaJakiro;
                
                
            }
            
            
                  
        }
        }
        
        if(jakiro1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direJakiro = true;
            jakiro.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + jakiroKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - jakiroAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon81);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Jakiro");
                direNazwa1 = nazwaJakiro;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon81);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Jakiro");
                direNazwa2 = nazwaJakiro;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon81);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Jakiro");
                direNazwa3 = nazwaJakiro;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon81);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Jakiro");
                direNazwa4 = nazwaJakiro;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon81);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Jakiro"); 
                direNazwa5 = nazwaJakiro;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborJuggernaut(){
            
        juggernaut.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent juggernaut1){
            
            if(direJuggernaut == false && radiantJuggernaut == false){    
                   
        int width = juggernaut.getWidth();
        if(juggernaut1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantJuggernaut = true;
            juggernaut.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + juggernautKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - juggernautAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon39);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Juggernaut");
                radiantNazwa1 = nazwaJuggernaut;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon39);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Juggernaut");
                radiantNazwa2 = nazwaJuggernaut;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon39);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Juggernaut");
                radiantNazwa3 = nazwaJuggernaut;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon39);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Juggernaut");
                radiantNazwa4 = nazwaJuggernaut;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon39);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Juggernaut");
                radiantNazwa5 = nazwaJuggernaut;
                
                
            }
            
            
                  
        }
        }
        
        if(juggernaut1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direJuggernaut = true;
            juggernaut.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + juggernautKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - juggernautAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon39);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Juggernaut");
                direNazwa1 = nazwaJuggernaut;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon39);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Juggernaut");
                direNazwa2 = nazwaJuggernaut;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon39);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Juggernaut");
                direNazwa3 = nazwaJuggernaut;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon39);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Juggernaut");
                direNazwa4 = nazwaJuggernaut;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon39);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Juggernaut"); 
                direNazwa5 = nazwaJuggernaut;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborKeeperOfTheLight(){
            
        keeperOfTheLight.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent keeperOfTheLight1){
            
            if(direKeeperOfTheLight == false && radiantKeeperOfTheLight == false){    
                   
        int width = keeperOfTheLight.getWidth();
        if(keeperOfTheLight1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantKeeperOfTheLight = true;
            keeperOfTheLight.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + keeperOfTheLightKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - keeperOfTheLightAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon88);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Keeper Of The Light");
                radiantNazwa1 = nazwaKeeperOfTheLight;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon88);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Keeper Of The Light");
                radiantNazwa2 = nazwaKeeperOfTheLight;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon88);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Keeper Of The Light");
                radiantNazwa3 = nazwaKeeperOfTheLight;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon88);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Keeper Of The Light");
                radiantNazwa4 = nazwaKeeperOfTheLight;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon88);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Keeper Of The Light");
                radiantNazwa5 = nazwaKeeperOfTheLight;
                
                
            }
            
            
                  
        }
        }
        
        if(keeperOfTheLight1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direKeeperOfTheLight = true;
            keeperOfTheLight.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + keeperOfTheLightKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - keeperOfTheLightAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon88);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Keeper Of The Light");
                direNazwa1 = nazwaKeeperOfTheLight;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon88);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Keeper Of The Light");
                direNazwa2 = nazwaKeeperOfTheLight;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon88);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Keeper Of The Light");
                direNazwa3 = nazwaKeeperOfTheLight;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon88);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Keeper Of The Light");
                direNazwa4 = nazwaKeeperOfTheLight;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon88);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Keeper Of The Light"); 
                direNazwa5 = nazwaKeeperOfTheLight;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLegionCommander(){
            
        legionCommander.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent legionCommander1){
            
            if(direLegionCommander == false && radiantLegionCommander == false){    
                   
        int width = legionCommander.getWidth();
        if(legionCommander1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLegionCommander = true;
            legionCommander.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + legionCommanderKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - legionCommanderAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon19);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Legion Commander");
                radiantNazwa1 = nazwaLegionCommander;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon19);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Legion Commander");
                radiantNazwa2 = nazwaLegionCommander;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon19);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Legion Commander");
                radiantNazwa3 = nazwaLegionCommander;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon19);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Legion Commander");
                radiantNazwa4 = nazwaLegionCommander;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon19);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Legion Commander");
                radiantNazwa5 = nazwaLegionCommander;
                
                
            }
            
            
                  
        }
        }
        
        if(legionCommander1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLegionCommander = true;
            legionCommander.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + legionCommanderKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - legionCommanderAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon19);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Legion Commander");
                direNazwa1 = nazwaLegionCommander;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon19);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Legion Commander");
                direNazwa2 = nazwaLegionCommander;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon19);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Legion Commander");
                direNazwa3 = nazwaLegionCommander;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon19);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Legion Commander");
                direNazwa4 = nazwaLegionCommander;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon19);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Legion Commander"); 
                direNazwa5 = nazwaLegionCommander;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLeshrac(){
            
        leshrac.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent leshrac1){
            
            if(direLeshrac == false && radiantLeshrac == false){    
                   
        int width = leshrac.getWidth();
        if(leshrac1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLeshrac = true;
            leshrac.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + leshracKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - leshracAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon103);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Leshrac");
                radiantNazwa1 = nazwaLeshrac;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon103);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Leshrac");
                radiantNazwa2 = nazwaLeshrac;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon103);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Leshrac");
                radiantNazwa3 = nazwaLeshrac;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon103);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Leshrac");
                radiantNazwa4 = nazwaLeshrac;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon103);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Leshrac");
                radiantNazwa5 = nazwaLeshrac;
                
                
            }
            
            
                  
        }
        }
        
        if(leshrac1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLeshrac = true;
            leshrac.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + leshracKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - leshracAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon103);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Leshrac");
                direNazwa1 = nazwaLeshrac;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon103);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Leshrac");
                direNazwa2 = nazwaLeshrac;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon103);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Leshrac");
                direNazwa3 = nazwaLeshrac;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon103);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Leshrac");
                direNazwa4 = nazwaLeshrac;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon103);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Leshrac"); 
                direNazwa5 = nazwaLeshrac;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLich(){
            
        lich.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent lich1){
            
            if(direLich == false && radiantLich == false){    
                   
        int width = lich.getWidth();
        if(lich1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLich = true;
            lich.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + lichKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - lichAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon93);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Lich");
                radiantNazwa1 = nazwaLich;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon93);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Lich");
                radiantNazwa2 = nazwaLich;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon93);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Lich");
                radiantNazwa3 = nazwaLich;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon93);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Lich");
                radiantNazwa4 = nazwaLich;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon93);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Lich");
                radiantNazwa5 = nazwaLich;
                
                
            }
            
            
                  
        }
        }
        
        if(lich1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLich = true;
            lich.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lichKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lichAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon93);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Lich");
                direNazwa1 = nazwaLich;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon93);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Lich");
                direNazwa2 = nazwaLich;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon93);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Lich");
                direNazwa3 = nazwaLich;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon93);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Lich");
                direNazwa4 = nazwaLich;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon93);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Lich"); 
                direNazwa5 = nazwaLich;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLifeStealer(){
            
        lifeStealer.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent lifeStealer1){
            
            if(direLifeStealer == false && radiantLifeStealer == false){    
                   
        int width = lifeStealer.getWidth();
        if(lifeStealer1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLifeStealer = true;
            lifeStealer.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + lifeStealerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - lifeStealerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon28);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Life Stealer");
                radiantNazwa1 = nazwaLifeStealer;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon28);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Life Stealer");
                radiantNazwa2 = nazwaLifeStealer;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon28);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Life Stealer");
                radiantNazwa3 = nazwaLifeStealer;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon28);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Life Stealer");
                radiantNazwa4 = nazwaLifeStealer;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon28);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Life Stealer");
                radiantNazwa5 = nazwaLifeStealer;
                
                
            }
            
            
                  
        }
        }
        
        if(lifeStealer1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLifeStealer = true;
            lifeStealer.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lifeStealerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lifeStealerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon28);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Life Stealer");
                direNazwa1 = nazwaLifeStealer;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon28);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Life Stealer");
                direNazwa2 = nazwaLifeStealer;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon28);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Life Stealer");
                direNazwa3 = nazwaLifeStealer;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon28);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Life Stealer");
                direNazwa4 = nazwaLifeStealer;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon28);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Life Stealer"); 
                direNazwa5 = nazwaLifeStealer;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLina(){
            
        lina.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent lina1){
            
            if(direLina == false && radiantLina == false){    
                   
        int width = lina.getWidth();
        if(lina1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLina = true;
            lina.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + linaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - linaAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon76);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Lina");
                radiantNazwa1 = nazwaLina;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon76);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Lina");
                radiantNazwa2 = nazwaLina;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon76);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Lina");
                radiantNazwa3 = nazwaLina;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon76);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Lina");
                radiantNazwa4 = nazwaLina;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon76);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Lina");
                radiantNazwa5 = nazwaLina;
                
                
            }
            
            
                  
        }
        }
        
        if(lina1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLina = true;
            lina.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + linaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - linaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon76);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Lina");
                direNazwa1 = nazwaLina;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon76);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Lina");
                direNazwa2 = nazwaLina;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon76);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Lina");
                direNazwa3 = nazwaLina;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon76);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Lina");
                direNazwa4 = nazwaLina;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon76);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Lina"); 
                direNazwa5 = nazwaLina;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLion(){
            
        lion.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent lion1){
            
            if(direLion == false && radiantLion == false){    
                   
        int width = lion.getWidth();
        if(lion1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLion = true;
            lion.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + lionKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - lionAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon94);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Lion");
                radiantNazwa1 = nazwaLion;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon94);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Lion");
                radiantNazwa2 = nazwaLion;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon94);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Lion");
                radiantNazwa3 = nazwaLion;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon94);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Lion");
                radiantNazwa4 = nazwaLion;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon94);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Lion");
                radiantNazwa5 = nazwaLion;
                
                
            }
            
            
                  
        }
        }
        
        if(lion1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLion = true;
            lion.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lionKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lionAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon94);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Lion");
                direNazwa1 = nazwaLion;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon94);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Lion");
                direNazwa2 = nazwaLion;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon94);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Lion");
                direNazwa3 = nazwaLion;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon94);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Lion");
                direNazwa4 = nazwaLion;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon94);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Lion"); 
                direNazwa5 = nazwaLion;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLoneDruid(){
            
        loneDruid.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent loneDruid1){
            
            if(direLoneDruid == false && radiantLoneDruid == false){    
                   
        int width = loneDruid.getWidth();
        if(loneDruid1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLoneDruid = true;
            loneDruid.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + loneDruidKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - loneDruidAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon51);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Lone Druid");
                radiantNazwa1 = nazwaLoneDruid;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon51);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Lone Druid");
                radiantNazwa2 = nazwaLoneDruid;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon51);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Lone Druid");
                radiantNazwa3 = nazwaLoneDruid;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon51);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Lone Druid");
                radiantNazwa4 = nazwaLoneDruid;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon51);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Lone Druid");
                radiantNazwa5 = nazwaLoneDruid;
                
                
            }
            
            
                  
        }
        }
        
        if(loneDruid1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLoneDruid = true;
            loneDruid.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + loneDruidKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - loneDruidAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon51);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Lone Druid");
                direNazwa1 = nazwaLoneDruid;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon51);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Lone Druid");
                direNazwa2 = nazwaLoneDruid;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon51);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Lone Druid");
                direNazwa3 = nazwaLoneDruid;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon51);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Lone Druid");
                direNazwa4 = nazwaLoneDruid;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon51);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Lone Druid"); 
                direNazwa5 = nazwaLoneDruid;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLuna(){
            
        luna.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent luna1){
            
            if(direLuna == false && radiantLuna == false){    
                   
        int width = luna.getWidth();
        if(luna1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLuna = true;
            luna.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + lunaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - lunaAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon47);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Luna");
                radiantNazwa1 = nazwaLuna;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon47);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Luna");
                radiantNazwa2 = nazwaLuna;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon47);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Luna");
                radiantNazwa3 = nazwaLuna;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon47);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Luna");
                radiantNazwa4 = nazwaLuna;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon47);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Luna");
                radiantNazwa5 = nazwaLuna;
                
                
            }
            
            
                  
        }
        }
        
        if(luna1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLuna = true;
            luna.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lunaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lunaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon47);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Luna");
                direNazwa1 = nazwaLuna;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon47);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Luna");
                direNazwa2 = nazwaLuna;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon47);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Luna");
                direNazwa3 = nazwaLuna;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon47);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Luna");
                direNazwa4 = nazwaLuna;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon47);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Luna"); 
                direNazwa5 = nazwaLuna;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborLycan(){
            
        lycan.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent lycan1){
            
            if(direLycan == false && radiantLycan == false){    
                   
        int width = lycan.getWidth();
        if(lycan1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantLycan = true;
            lycan.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + lycanKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - lycanAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon32);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Lycan");
                radiantNazwa1 = nazwaLycan;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon32);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Lycan");
                radiantNazwa2 = nazwaLycan;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon32);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Lycan");
                radiantNazwa3 = nazwaLycan;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon32);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Lycan");
                radiantNazwa4 = nazwaLycan;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon32);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Lycan");
                radiantNazwa5 = nazwaLycan;
                
                
            }
            
            
                  
        }
        }
        
        if(lycan1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direLycan = true;
            lycan.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lycanKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lycanAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon32);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Lycan");
                direNazwa1 = nazwaLycan;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon32);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Lycan");
                direNazwa2 = nazwaLycan;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon32);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Lycan");
                direNazwa3 = nazwaLycan;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon32);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Lycan");
                direNazwa4 = nazwaLycan;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon32);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Lycan"); 
                direNazwa5 = nazwaLycan;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborMagnus(){
            
        magnus.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent magnus1){
            
            if(direMagnus == false && radiantMagnus == false){    
                   
        int width = magnus.getWidth();
        if(magnus1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantMagnus = true;
            magnus.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + magnusKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - magnusAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon35);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Magnus");
                radiantNazwa1 = nazwaMagnus;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon35);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Magnus");
                radiantNazwa2 = nazwaMagnus;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon35);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Magnus");
                radiantNazwa3 = nazwaMagnus;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon35);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Magnus");
                radiantNazwa4 = nazwaMagnus;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon35);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Magnus");
                radiantNazwa5 = nazwaMagnus;
                
                
            }
            
            
                  
        }
        }
        
        if(magnus1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direMagnus = true;
            magnus.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + magnusKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - magnusAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon35);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Magnus");
                direNazwa1 = nazwaMagnus;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon35);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Magnus");
                direNazwa2 = nazwaMagnus;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon35);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Magnus");
                direNazwa3 = nazwaMagnus;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon35);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Magnus");
                direNazwa4 = nazwaMagnus;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon35);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Magnus"); 
                direNazwa5 = nazwaMagnus;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborMedusa(){
            
        medusa.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent medusa1){
            
            if(direMedusa == false && radiantMedusa == false){    
                   
        int width = medusa.getWidth();
        if(medusa1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantMedusa = true;
            medusa.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + medusaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - medusaAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon69);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Medusa");
                radiantNazwa1 = nazwaMedusa;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon69);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Medusa");
                radiantNazwa2 = nazwaMedusa;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon69);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Medusa");
                radiantNazwa3 = nazwaMedusa;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon69);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Medusa");
                radiantNazwa4 = nazwaMedusa;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon69);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Medusa");
                radiantNazwa5 = nazwaMedusa;
                
                
            }
            
            
                  
        }
        }
        
        if(medusa1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direMedusa = true;
            medusa.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + medusaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - medusaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon69);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Medusa");
                direNazwa1 = nazwaMedusa;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon69);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Medusa");
                direNazwa2 = nazwaMedusa;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon69);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Medusa");
                direNazwa3 = nazwaMedusa;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon69);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Medusa");
                direNazwa4 = nazwaMedusa;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon69);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Medusa"); 
                direNazwa5 = nazwaMedusa;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborMeepo(){
            
        meepo.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent meepo1){
            
            if(direMeepo == false && radiantMeepo == false){    
                   
        int width = meepo.getWidth();
        if(meepo1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantMeepo = true;
            meepo.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + meepoKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - meepoAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon66);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Meepo");
                radiantNazwa1 = nazwaMeepo;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon66);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Meepo");
                radiantNazwa2 = nazwaMeepo;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon66);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Meepo");
                radiantNazwa3 = nazwaMeepo;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon66);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Meepo");
                radiantNazwa4 = nazwaMeepo;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon66);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Meepo");
                radiantNazwa5 = nazwaMeepo;
                
                
            }
            
            
                  
        }
        }
        
        if(meepo1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direMeepo = true;
            meepo.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + meepoKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - meepoAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon66);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Meepo");
                direNazwa1 = nazwaMeepo;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon66);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Meepo");
                direNazwa2 = nazwaMeepo;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon66);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Meepo");
                direNazwa3 = nazwaMeepo;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon66);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Meepo");
                direNazwa4 = nazwaMeepo;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon66);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Meepo"); 
                direNazwa5 = nazwaMeepo;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborMirana(){
            
        mirana.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent mirana1){
            
            if(direMirana == false && radiantMirana == false){    
                   
        int width = mirana.getWidth();
        if(mirana1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantMirana = true;
            mirana.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + miranaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - miranaAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon40);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Mirana");
                radiantNazwa1 = nazwaMirana;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon40);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Mirana");
                radiantNazwa2 = nazwaMirana;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon40);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Mirana");
                radiantNazwa3 = nazwaMirana;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon40);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Mirana");
                radiantNazwa4 = nazwaMirana;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon40);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Mirana");
                radiantNazwa5 = nazwaMirana;
                
                
            }
            
            
                  
        }
        }
        
        if(mirana1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direMirana = true;
            mirana.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + miranaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - miranaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon40);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Mirana");
                direNazwa1 = nazwaMirana;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon40);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Mirana");
                direNazwa2 = nazwaMirana;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon40);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Mirana");
                direNazwa3 = nazwaMirana;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon40);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Mirana");
                direNazwa4 = nazwaMirana;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon40);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Mirana"); 
                direNazwa5 = nazwaMirana;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborMorphling(){
            
        morphling.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent morphling1){
            
            if(direMorphling == false && radiantMorphling == false){    
                   
        int width = morphling.getWidth();
        if(morphling1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantMorphling = true;
            morphling.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + morphlingKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - morphlingAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon41);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Morphling");
                radiantNazwa1 = nazwaMorphling;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon41);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Morphling");
                radiantNazwa2 = nazwaMorphling;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon41);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Morphling");
                radiantNazwa3 = nazwaMorphling;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon41);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Morphling");
                radiantNazwa4 = nazwaMorphling;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon41);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Morphling");
                radiantNazwa5 = nazwaMorphling;
                
                
            }
            
            
                  
        }
        }
        
        if(morphling1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direMorphling = true;
            morphling.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + morphlingKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - morphlingAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon41);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Morphling");
                direNazwa1 = nazwaMorphling;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon41);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Morphling");
                direNazwa2 = nazwaMorphling;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon41);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Morphling");
                direNazwa3 = nazwaMorphling;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon41);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Morphling");
                direNazwa4 = nazwaMorphling;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon41);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Morphling"); 
                direNazwa5 = nazwaMorphling;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborNagaSiren(){
            
        nagaSiren.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent nagaSiren1){
            
            if(direNagaSiren == false && radiantNagaSiren == false){    
                   
        int width = nagaSiren.getWidth();
        if(nagaSiren1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantNagaSiren = true;
            nagaSiren.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + nagaSirenKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - nagaSirenAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon52);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Naga Siren");
                radiantNazwa1 = nazwaNagaSiren;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon52);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Naga Siren");
                radiantNazwa2 = nazwaNagaSiren;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon52);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Naga Siren");
                radiantNazwa3 = nazwaNagaSiren;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon52);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Naga Siren");
                radiantNazwa4 = nazwaNagaSiren;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon52);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Naga Siren");
                radiantNazwa5 = nazwaNagaSiren;
                
                
            }
            
            
                  
        }
        }
        
        if(nagaSiren1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direNagaSiren = true;
            nagaSiren.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nagaSirenKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nagaSirenAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon52);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Naga Siren");
                direNazwa1 = nazwaNagaSiren;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon52);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Naga Siren");
                direNazwa2 = nazwaNagaSiren;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon52);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Naga Siren");
                direNazwa3 = nazwaNagaSiren;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon52);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Naga Siren");
                direNazwa4 = nazwaNagaSiren;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon52);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Naga Siren"); 
                direNazwa5 = nazwaNagaSiren;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborNaturesProphet(){
            
        naturesProphet.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent naturesProphet1){
            
            if(direNaturesProphet == false && radiantNaturesProphet == false){    
                   
        int width = naturesProphet.getWidth();
        if(naturesProphet1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantNaturesProphet = true;
            naturesProphet.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + naturesProphetKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - naturesProphetAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon79);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Natures Prophet");
                radiantNazwa1 = nazwaNaturesProphet;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon79);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Natures Prophet");
                radiantNazwa2 = nazwaNaturesProphet;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon79);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Natures Prophet");
                radiantNazwa3 = nazwaNaturesProphet;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon79);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Natures Prophet");
                radiantNazwa4 = nazwaNaturesProphet;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon79);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Natures Prophet");
                radiantNazwa5 = nazwaNaturesProphet;
                
                
            }
            
            
                  
        }
        }
        
        if(naturesProphet1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direNaturesProphet = true;
            naturesProphet.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + naturesProphetKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - naturesProphetAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon79);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Natures Prophet");
                direNazwa1 = nazwaNaturesProphet;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon79);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Natures Prophet");
                direNazwa2 = nazwaNaturesProphet;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon79);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Natures Prophet");
                direNazwa3 = nazwaNaturesProphet;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon79);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Natures Prophet");
                direNazwa4 = nazwaNaturesProphet;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon79);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Natures Prophet"); 
                direNazwa5 = nazwaNaturesProphet;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborNecrophos(){
            
        necrophos.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent necrophos1){
            
            if(direNecrophos == false && radiantNecrophos == false){    
                   
        int width = necrophos.getWidth();
        if(necrophos1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantNecrophos = true;
            necrophos.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + necrophosKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - necrophosAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon97);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Necrophos");
                radiantNazwa1 = nazwaNecrophos;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon97);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Necrophos");
                radiantNazwa2 = nazwaNecrophos;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon97);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Necrophos");
                radiantNazwa3 = nazwaNecrophos;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon97);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Necrophos");
                radiantNazwa4 = nazwaNecrophos;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon97);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Necrophos");
                radiantNazwa5 = nazwaNecrophos;
                
                
            }
            
            
                  
        }
        }
        
        if(necrophos1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direNecrophos = true;
            necrophos.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + necrophosKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - necrophosAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon97);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Necrophos");
                direNazwa1 = nazwaNecrophos;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon97);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Necrophos");
                direNazwa2 = nazwaNecrophos;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon97);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Necrophos");
                direNazwa3 = nazwaNecrophos;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon97);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Necrophos");
                direNazwa4 = nazwaNecrophos;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon97);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Necrophos"); 
                direNazwa5 = nazwaNecrophos;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborNightStalker(){
            
        nightStalker.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent nightStalker1){
            
            if(direNightStalker == false && radiantNightStalker == false){    
                   
        int width = nightStalker.getWidth();
        if(nightStalker1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantNightStalker = true;
            nightStalker.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + nightStalkerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - nightStalkerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon29);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Night Stalker");
                radiantNazwa1 = nazwaNightStalker;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon29);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Night Stalker");
                radiantNazwa2 = nazwaNightStalker;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon29);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Night Stalker");
                radiantNazwa3 = nazwaNightStalker;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon29);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Night Stalker");
                radiantNazwa4 = nazwaNightStalker;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon29);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Night Stalker");
                radiantNazwa5 = nazwaNightStalker;
                
                
            }
            
            
                  
        }
        }
        
        if(nightStalker1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direNightStalker = true;
            nightStalker.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nightStalkerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nightStalkerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon29);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Night Stalker");
                direNazwa1 = nazwaNightStalker;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon29);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Night Stalker");
                direNazwa2 = nazwaNightStalker;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon29);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Night Stalker");
                direNazwa3 = nazwaNightStalker;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon29);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Night Stalker");
                direNazwa4 = nazwaNightStalker;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon29);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Night Stalker"); 
                direNazwa5 = nazwaNightStalker;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborNyxAssassin(){
            
        nyxAssassin.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent nyxAssassin1){
            
            if(direNyxAssassin == false && radiantNyxAssassin == false){    
                   
        int width = nyxAssassin.getWidth();
        if(nyxAssassin1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantNyxAssassin = true;
            nyxAssassin.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + nyxAssassinKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - nyxAssassinAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon67);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Nyx Assassin");
                radiantNazwa1 = nazwaNyxAssassin;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon67);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Nyx Assassin");
                radiantNazwa2 = nazwaNyxAssassin;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon67);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Nyx Assassin");
                radiantNazwa3 = nazwaNyxAssassin;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon67);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Nyx Assassin");
                radiantNazwa4 = nazwaNyxAssassin;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon67);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Nyx Assassin");
                radiantNazwa5 = nazwaNyxAssassin;
                
                
            }
            
            
                  
        }
        }
        
        if(nyxAssassin1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direNyxAssassin = true;
            nyxAssassin.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nyxAssassinKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nyxAssassinAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon67);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Nyx Assassin");
                direNazwa1 = nazwaNyxAssassin;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon67);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Nyx Assassin");
                direNazwa2 = nazwaNyxAssassin;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon67);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Nyx Assassin");
                direNazwa3 = nazwaNyxAssassin;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon67);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Nyx Assassin");
                direNazwa4 = nazwaNyxAssassin;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon67);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Nyx Assassin"); 
                direNazwa5 = nazwaNyxAssassin;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborOgreMagi(){
            
        ogreMagi.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent ogreMagi1){
            
            if(direOgreMagi == false && radiantOgreMagi == false){    
                   
        int width = ogreMagi.getWidth();
        if(ogreMagi1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantOgreMagi = true;
            ogreMagi.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + ogreMagiKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - ogreMagiAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon85);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Ogre Magi");
                radiantNazwa1 = nazwaOgreMagi;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon85);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Ogre Magi");
                radiantNazwa2 = nazwaOgreMagi;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon85);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Ogre Magi");
                radiantNazwa3 = nazwaOgreMagi;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon85);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Ogre Magi");
                radiantNazwa4 = nazwaOgreMagi;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon85);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Ogre Magi");
                radiantNazwa5 = nazwaOgreMagi;
                
                
            }
            
            
                  
        }
        }
        
        if(ogreMagi1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direOgreMagi = true;
            ogreMagi.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ogreMagiKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ogreMagiAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon85);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Ogre Magi");
                direNazwa1 = nazwaOgreMagi;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon85);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Ogre Magi");
                direNazwa2 = nazwaOgreMagi;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon85);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Ogre Magi");
                direNazwa3 = nazwaOgreMagi;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon85);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Ogre Magi");
                direNazwa4 = nazwaOgreMagi;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon85);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Ogre Magi"); 
                direNazwa5 = nazwaOgreMagi;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborOracle(){
            
         oracle.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent oracle1){
            
            if(direOracle == false && radiantOracle == false){
                
                   
        int width = oracle.getWidth();
        if(oracle1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantOracle = true;
            oracle.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + oracleKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - oracleAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon90);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Oracle");
                radiantNazwa1 = nazwaOracle;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon90);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Oracle");
                radiantNazwa2 = nazwaOracle;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon90);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Oracle");
                radiantNazwa3 = nazwaOracle;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon90);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Oracle");
                radiantNazwa4 = nazwaOracle;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon90);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Oracle");
                radiantNazwa5 = nazwaOracle;
                
                
            }
            
        }
        }
        
        if(oracle1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direOracle = true;
            oracle.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + oracleKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - oracleAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon90);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Oracle");
                direNazwa1 = nazwaOracle;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon90);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Oracle");
                direNazwa2 = nazwaOracle;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon90);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Oracle");
                direNazwa3 = nazwaOracle;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon90);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Oracle");
                direNazwa4 = nazwaOracle;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon90);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Oracle"); 
                direNazwa5 = nazwaOracle;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborOutworldDevourer(){
            
         outworldDevourer.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent outworldDevourer1){
            
            if(direOutworldDevourer == false && radiantOutworldDevourer == false){
                
                   
        int width = outworldDevourer.getWidth();
        if(outworldDevourer1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantOutworldDevourer = true;
            outworldDevourer.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + outworldDevourerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - outworldDevourerAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon108);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Outworld Devourer");
                radiantNazwa1 = nazwaOutworldDevourer;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon108);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Outworld Devourer");
                radiantNazwa2 = nazwaOutworldDevourer;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon108);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Outworld Devourer");
                radiantNazwa3 = nazwaOutworldDevourer;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon108);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Outworld Devourer");
                radiantNazwa4 = nazwaOutworldDevourer;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon108);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Outworld Devourer");
                radiantNazwa5 = nazwaOutworldDevourer;
                
                
            }
            
        }
        }
        
        if(outworldDevourer1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direOutworldDevourer = true;
            outworldDevourer.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + outworldDevourerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - outworldDevourerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon108);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Outworld Devourer");
                direNazwa1 = nazwaOutworldDevourer;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon108);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Outworld Devourer");
                direNazwa2 = nazwaOutworldDevourer;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon108);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Outworld Devourer");
                direNazwa3 = nazwaOutworldDevourer;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon108);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Outworld Devourer");
                direNazwa4 = nazwaOutworldDevourer;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon108);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Outworld Devourer"); 
                direNazwa5 = nazwaOutworldDevourer;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborPhantomAssassin(){
            
         phantomAssassin.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent phantomAssassin1){
            
            if(direPhantomAssassin == false && radiantPhantomAssassin == false){
                
                   
        int width = phantomAssassin.getWidth();
        if(phantomAssassin1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantPhantomAssassin = true;
            phantomAssassin.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + phantomAssassinKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - phantomAssassinAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon60);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Phantom Assassin");
                radiantNazwa1 = nazwaPhantomAssassin;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon60);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Phantom Assassin");
                radiantNazwa2 = nazwaPhantomAssassin;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon60);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Phantom Assassin");
                radiantNazwa3 = nazwaPhantomAssassin;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon60);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Phantom Assassin");
                radiantNazwa4 = nazwaPhantomAssassin;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon60);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Phantom Assassin");
                radiantNazwa5 = nazwaPhantomAssassin;
                
                
            }
            
        }
        }
        
        if(phantomAssassin1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direPhantomAssassin = true;
            phantomAssassin.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomAssassinKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomAssassinAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon60);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Phantom Assassin");
                direNazwa1 = nazwaPhantomAssassin;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon60);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Phantom Assassin");
                direNazwa2 = nazwaPhantomAssassin;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon60);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Phantom Assassin");
                direNazwa3 = nazwaPhantomAssassin;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon60);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Phantom Assassin");
                direNazwa4 = nazwaPhantomAssassin;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon60);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Phantom Assassin"); 
                direNazwa5 = nazwaPhantomAssassin;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborPhantomLancer(){
            
         phantomLancer.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent phantomLancer1){
            
            if(direPhantomLancer == false && radiantPhantomLancer == false){
                
                   
        int width = phantomLancer.getWidth();
        if(phantomLancer1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantPhantomLancer = true;
            phantomLancer.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + phantomLancerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - phantomLancerAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon42);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Phantom Lancer");
                radiantNazwa1 = nazwaPhantomLancer;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon42);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Phantom Lancer");
                radiantNazwa2 = nazwaPhantomLancer;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon42);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Phantom Lancer");
                radiantNazwa3 = nazwaPhantomLancer;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon42);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Phantom Lancer");
                radiantNazwa4 = nazwaPhantomLancer;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon42);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Phantom Lancer");
                radiantNazwa5 = nazwaPhantomLancer;
                
                
            }
            
        }
        }
        
        if(phantomLancer1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direPhantomLancer = true;
            phantomLancer.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomLancerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomLancerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon42);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Phantom Lancer");
                direNazwa1 = nazwaPhantomLancer;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon42);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Phantom Lancer");
                direNazwa2 = nazwaPhantomLancer;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon42);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Phantom Lancer");
                direNazwa3 = nazwaPhantomLancer;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon42);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Phantom Lancer");
                direNazwa4 = nazwaPhantomLancer;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon42);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Phantom Lancer"); 
                direNazwa5 = nazwaPhantomLancer;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborPhoenix(){
            
         phoenix.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent phoenix1){
            
            if(direPhoenix == false && radiantPhoenix == false){
                
                   
        int width = phoenix.getWidth();
        if(phoenix1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantPhoenix = true;
            phoenix.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + phoenixKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - phoenixAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon21);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Phoenix");
                radiantNazwa1 = nazwaPhoenix;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon21);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Phoenix");
                radiantNazwa2 = nazwaPhoenix;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon21);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Phoenix");
                radiantNazwa3 = nazwaPhoenix;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon21);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Phoenix");
                radiantNazwa4 = nazwaPhoenix;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon21);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Phoenix");
                radiantNazwa5 = nazwaPhoenix;
                
                
            }
            
        }
        }
        
        if(phoenix1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direPhoenix = true;
            phoenix.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phoenixKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phoenixAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon21);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Phoenix");
                direNazwa1 = nazwaPhoenix;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon21);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Phoenix");
                direNazwa2 = nazwaPhoenix;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon21);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Phoenix");
                direNazwa3 = nazwaPhoenix;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon21);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Phoenix");
                direNazwa4 = nazwaPhoenix;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon21);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Phoenix"); 
                direNazwa5 = nazwaPhoenix;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborPuck(){
            
         puck.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent puck1){
            
            if(direPuck == false && radiantPuck == false){
                
                   
        int width = puck.getWidth();
        if(puck1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantPuck = true;
            puck.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + puckKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - puckAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon72);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Puck");
                radiantNazwa1 = nazwaPuck;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon72);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Puck");
                radiantNazwa2 = nazwaPuck;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon72);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Puck");
                radiantNazwa3 = nazwaPuck;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon72);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Puck");
                radiantNazwa4 = nazwaPuck;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon72);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Puck");
                radiantNazwa5 = nazwaPuck;
                
                
            }
            
        }
        }
        
        if(puck1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direPuck = true;
            puck.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + puckKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - puckAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon72);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Puck");
                direNazwa1 = nazwaPuck;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon72);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Puck");
                direNazwa2 = nazwaPuck;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon72);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Puck");
                direNazwa3 = nazwaPuck;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon72);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Puck");
                direNazwa4 = nazwaPuck;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon72);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Puck"); 
                direNazwa5 = nazwaPuck;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborPudge(){
            
         pudge.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent pudge1){
            
            if(direPudge == false && radiantPudge == false){
                
                   
        int width = pudge.getWidth();
        if(pudge1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantPudge = true;
            pudge.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + pudgeKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - pudgeAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon23);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Pudge");
                radiantNazwa1 = nazwaPudge;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon23);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Pudge");
                radiantNazwa2 = nazwaPudge;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon23);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Pudge");
                radiantNazwa3 = nazwaPudge;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon23);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Pudge");
                radiantNazwa4 = nazwaPudge;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon23);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Pudge");
                radiantNazwa5 = nazwaPudge;
                
                
            }
            
        }
        }
        
        if(pudge1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direPudge = true;
            pudge.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pudgeKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pudgeAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon23);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Pudge");
                direNazwa1 = nazwaPudge;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon23);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Pudge");
                direNazwa2 = nazwaPudge;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon23);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Pudge");
                direNazwa3 = nazwaPudge;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon23);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Pudge");
                direNazwa4 = nazwaPudge;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon23);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Pudge"); 
                direNazwa5 = nazwaPudge;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborPugna(){
            
         pugna.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent pugna1){
            
            if(direPugna == false && radiantPugna == false){
                
                   
        int width = pugna.getWidth();
        if(pugna1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantPugna = true;
            pugna.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + pugnaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - pugnaAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon101);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Pugna");
                radiantNazwa1 = nazwaPugna;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon101);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Pugna");
                radiantNazwa2 = nazwaPugna;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon101);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Pugna");
                radiantNazwa3 = nazwaPugna;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon101);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Pugna");
                radiantNazwa4 = nazwaPugna;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon101);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Pugna");
                radiantNazwa5 = nazwaPugna;
                
                
            }
            
        }
        }
        
        if(pugna1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direPugna = true;
            pugna.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pugnaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pugnaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon101);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Pugna");
                direNazwa1 = nazwaPugna;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon101);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Pugna");
                direNazwa2 = nazwaPugna;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon101);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Pugna");
                direNazwa3 = nazwaPugna;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon101);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Pugna");
                direNazwa4 = nazwaPugna;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon101);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Pugna"); 
                direNazwa5 = nazwaPugna;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborQueenOfPain(){
            
         queenOfPain.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent queenOfPain1){
            
            if(direQueenOfPain == false && radiantQueenOfPain == false){
                
                   
        int width = queenOfPain.getWidth();
        if(queenOfPain1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantQueenOfPain = true;
            queenOfPain.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + queenOfPainKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - queenOfPainAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon99);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Queen Of Pain");
                radiantNazwa1 = nazwaQueenOfPain;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon99);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Queen Of Pain");
                radiantNazwa2 = nazwaQueenOfPain;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon99);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Queen Of Pain");
                radiantNazwa3 = nazwaQueenOfPain;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon99);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Queen Of Pain");
                radiantNazwa4 = nazwaQueenOfPain;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon99);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Queen Of Pain");
                radiantNazwa5 = nazwaQueenOfPain;
                
                
            }
            
        }
        }
        
        if(queenOfPain1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direQueenOfPain = true;
            queenOfPain.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + queenOfPainKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - queenOfPainAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon99);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Queen Of Pain");
                direNazwa1 = nazwaQueenOfPain;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon99);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Queen Of Pain");
                direNazwa2 = nazwaQueenOfPain;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon99);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Queen Of Pain");
                direNazwa3 = nazwaQueenOfPain;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon99);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Queen Of Pain");
                direNazwa4 = nazwaQueenOfPain;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon99);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Queen Of Pain"); 
                direNazwa5 = nazwaQueenOfPain;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborRazor(){
            
         razor.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent razor1){
            
            if(direRazor == false && radiantRazor == false){
                
                   
        int width = razor.getWidth();
        if(razor1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantRazor = true;
            razor.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + razorKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - razorAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon57);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Razor");
                radiantNazwa1 = nazwaRazor;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon57);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Razor");
                radiantNazwa2 = nazwaRazor;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon57);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Razor");
                radiantNazwa3 = nazwaRazor;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon57);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Razor");
                radiantNazwa4 = nazwaRazor;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon57);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Razor");
                radiantNazwa5 = nazwaRazor;
                
                
            }
            
        }
        }
        
        if(razor1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direRazor = true;
            razor.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + razorKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - razorAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon57);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Razor");
                direNazwa1 = nazwaRazor;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon57);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Razor");
                direNazwa2 = nazwaRazor;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon57);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Razor");
                direNazwa3 = nazwaRazor;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon57);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Razor");
                direNazwa4 = nazwaRazor;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon57);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Razor"); 
                direNazwa5 = nazwaRazor;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborRiki(){
            
         riki.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent riki1){
            
            if(direRiki == false && radiantRiki == false){
                
                   
        int width = riki.getWidth();
        if(riki1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantRiki = true;
            riki.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + rikiKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - rikiAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon44);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Riki");
                radiantNazwa1 = nazwaRiki;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon44);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Riki");
                radiantNazwa2 = nazwaRiki;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon44);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Riki");
                radiantNazwa3 = nazwaRiki;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon44);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Riki");
                radiantNazwa4 = nazwaRiki;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon44);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Riki");
                radiantNazwa5 = nazwaRiki;
                
                
            }
            
        }
        }
        
        if(riki1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direRiki = true;
            riki.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rikiKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rikiAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon44);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Riki");
                direNazwa1 = nazwaRiki;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon44);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Riki");
                direNazwa2 = nazwaRiki;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon44);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Riki");
                direNazwa3 = nazwaRiki;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon44);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Riki");
                direNazwa4 = nazwaRiki;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon44);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Riki"); 
                direNazwa5 = nazwaRiki;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborRubick(){
            
         rubick.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent rubick1){
            
            if(direRubick == false && radiantRubick == false){
                
                   
        int width = rubick.getWidth();
        if(rubick1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantRubick = true;
            rubick.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + rubickKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - rubickAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon86);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Rubick");
                radiantNazwa1 = nazwaRubick;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon86);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Rubick");
                radiantNazwa2 = nazwaRubick;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon86);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Rubick");
                radiantNazwa3 = nazwaRubick;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon86);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Rubick");
                radiantNazwa4 = nazwaRubick;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon86);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Rubick");
                radiantNazwa5 = nazwaRubick;
                
                
            }
            
        }
        }
        
        if(rubick1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direRubick = true;
            rubick.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rubickKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rubickAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon86);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Rubick");
                direNazwa1 = nazwaRubick;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon86);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Rubick");
                direNazwa2 = nazwaRubick;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon86);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Rubick");
                direNazwa3 = nazwaRubick;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon86);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Rubick");
                direNazwa4 = nazwaRubick;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon86);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Rubick"); 
                direNazwa5 = nazwaRubick;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSandKing(){
            
         sandKing.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent sandKing1){
            
            if(direSandKing == false && radiantSandKing == false){
                
                   
        int width = sandKing.getWidth();
        if(sandKing1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSandKing = true;
            sandKing.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + sandKingKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - sandKingAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon24);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Sand King");
                radiantNazwa1 = nazwaSandKing;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon24);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Sand King");
                radiantNazwa2 = nazwaSandKing;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon24);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Sand King");
                radiantNazwa3 = nazwaSandKing;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon24);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Sand King");
                radiantNazwa4 = nazwaSandKing;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon24);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Sand King");
                radiantNazwa5 = nazwaSandKing;
                
                
            }
            
        }
        }
        
        if(sandKing1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSandKing = true;
            sandKing.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sandKingKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sandKingAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon24);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Sand King");
                direNazwa1 = nazwaSandKing;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon24);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Sand King");
                direNazwa2 = nazwaSandKing;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon24);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Sand King");
                direNazwa3 = nazwaSandKing;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon24);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Sand King");
                direNazwa4 = nazwaSandKing;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon24);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Sand King"); 
                direNazwa5 = nazwaSandKing;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborShadowDemon(){
            
         shadowDemon.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent shadowDemon1){
            
            if(direShadowDemon == false && radiantShadowDemon == false){
                
                   
        int width = shadowDemon.getWidth();
        if(shadowDemon1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantShadowDemon = true;
            shadowDemon.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + shadowDemonKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - shadowDemonAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon109);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Shadow Demon");
                radiantNazwa1 = nazwaShadowDemon;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon109);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Shadow Demon");
                radiantNazwa2 = nazwaShadowDemon;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon109);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Shadow Demon");
                radiantNazwa3 = nazwaShadowDemon;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon109);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Shadow Demon");
                radiantNazwa4 = nazwaShadowDemon;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon109);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Shadow Demon");
                radiantNazwa5 = nazwaShadowDemon;
                
                
            }
            
        }
        }
        
        if(shadowDemon1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direShadowDemon = true;
            shadowDemon.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowDemonKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowDemonAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon109);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Shadow Demon");
                direNazwa1 = nazwaShadowDemon;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon109);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Shadow Demon");
                direNazwa2 = nazwaShadowDemon;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon109);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Shadow Demon");
                direNazwa3 = nazwaShadowDemon;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon109);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Shadow Demon");
                direNazwa4 = nazwaShadowDemon;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon109);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Shadow Demon"); 
                direNazwa5 = nazwaShadowDemon;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborShadowFiend(){
            
         shadowFiend.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent shadowFiend1){
            
            if(direShadowFiend == false && radiantShadowFiend == false){
                
                   
        int width = shadowFiend.getWidth();
        if(shadowFiend1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantShadowFiend = true;
            shadowFiend.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + shadowFiendKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - shadowFiendAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon56);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Shadow Fiend");
                radiantNazwa1 = nazwaShadowFiend;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon56);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Shadow Fiend");
                radiantNazwa2 = nazwaShadowFiend;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon56);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Shadow Fiend");
                radiantNazwa3 = nazwaShadowFiend;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon56);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Shadow Fiend");
                radiantNazwa4 = nazwaShadowFiend;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon56);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Shadow Fiend");
                radiantNazwa5 = nazwaShadowFiend;
                
                
            }
            
        }
        }
        
        if(shadowFiend1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direShadowFiend = true;
            shadowFiend.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowFiendKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowFiendAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon56);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Shadow Fiend");
                direNazwa1 = nazwaShadowFiend;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon56);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Shadow Fiend");
                direNazwa2 = nazwaShadowFiend;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon56);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Shadow Fiend");
                direNazwa3 = nazwaShadowFiend;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon56);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Shadow Fiend");
                direNazwa4 = nazwaShadowFiend;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon56);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Shadow Fiend"); 
                direNazwa5 = nazwaShadowFiend;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborShadowShaman(){
            
         shadowShaman.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent shadowShaman1){
            
            if(direShadowShaman == false && radiantShadowShaman == false){
                
                   
        int width = shadowShaman.getWidth();
        if(shadowShaman1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantShadowShaman = true;
            shadowShaman.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + shadowShamanKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - shadowShamanAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon77);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Shadow Shaman");
                radiantNazwa1 = nazwaShadowShaman;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon77);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Shadow Shaman");
                radiantNazwa2 = nazwaShadowShaman;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon77);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Shadow Shaman");
                radiantNazwa3 = nazwaShadowShaman;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon77);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Shadow Shaman");
                radiantNazwa4 = nazwaShadowShaman;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon77);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Shadow Shaman");
                radiantNazwa5 = nazwaShadowShaman;
                
                
            }
            
        }
        }
        
        if(shadowShaman1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direShadowShaman = true;
            shadowShaman.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowShamanKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowShamanAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon77);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Shadow Shaman");
                direNazwa1 = nazwaShadowShaman;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon77);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Shadow Shaman");
                direNazwa2 = nazwaShadowShaman;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon77);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Shadow Shaman");
                direNazwa3 = nazwaShadowShaman;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon77);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Shadow Shaman");
                direNazwa4 = nazwaShadowShaman;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon77);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Shadow Shaman"); 
                direNazwa5 = nazwaShadowShaman;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSilencer(){
            
         silencer.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent silencer1){
            
            if(direSilencer == false && radiantSilencer == false){
                
                   
        int width = silencer.getWidth();
        if(silencer1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSilencer = true;
            silencer.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + silencerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - silencerAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon84);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Silencer");
                radiantNazwa1 = nazwaSilencer;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon84);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Silencer");
                radiantNazwa2 = nazwaSilencer;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon84);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Silencer");
                radiantNazwa3 = nazwaSilencer;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon84);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Silencer");
                radiantNazwa4 = nazwaSilencer;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon84);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Silencer");
                radiantNazwa5 = nazwaSilencer;
                
                
            }
            
        }
        }
        
        if(silencer1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSilencer = true;
            silencer.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + silencerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - silencerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon84);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Silencer");
                direNazwa1 = nazwaSilencer;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon84);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Silencer");
                direNazwa2 = nazwaSilencer;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon84);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Silencer");
                direNazwa3 = nazwaSilencer;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon84);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Silencer");
                direNazwa4 = nazwaSilencer;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon84);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Silencer"); 
                direNazwa5 = nazwaSilencer;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSkywrathMage(){
            
         skywrathMage.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent skywrathMage1){
            
            if(direSkywrathMage == false && radiantSkywrathMage == false){
                
                   
        int width = skywrathMage.getWidth();
        if(skywrathMage1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSkywrathMage = true;
            skywrathMage.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + skywrathMageKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - skywrathMageAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon89);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Skywrath Mage");
                radiantNazwa1 = nazwaSkywrathMage;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon89);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Skywrath Mage");
                radiantNazwa2 = nazwaSkywrathMage;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon89);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Skywrath Mage");
                radiantNazwa3 = nazwaSkywrathMage;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon89);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Skywrath Mage");
                radiantNazwa4 = nazwaSkywrathMage;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon89);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Skywrath Mage");
                radiantNazwa5 = nazwaSkywrathMage;
                
                
            }
            
        }
        }
        
        if(skywrathMage1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSkywrathMage = true;
            skywrathMage.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + skywrathMageKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - skywrathMageAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon89);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Skywrath Mage");
                direNazwa1 = nazwaSkywrathMage;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon89);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Skywrath Mage");
                direNazwa2 = nazwaSkywrathMage;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon89);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Skywrath Mage");
                direNazwa3 = nazwaSkywrathMage;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon89);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Skywrath Mage");
                direNazwa4 = nazwaSkywrathMage;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon89);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Skywrath Mage"); 
                direNazwa5 = nazwaSkywrathMage;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSlardar(){
            
         slardar.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent slardar1){
            
            if(direSlardar == false && radiantSlardar == false){
                
                   
        int width = slardar.getWidth();
        if(slardar1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSlardar = true;
            slardar.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + slardarKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - slardarAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon25);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Slardar");
                radiantNazwa1 = nazwaSlardar;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon25);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Slardar");
                radiantNazwa2 = nazwaSlardar;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon25);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Slardar");
                radiantNazwa3 = nazwaSlardar;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon25);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Slardar");
                radiantNazwa4 = nazwaSlardar;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon25);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Slardar");
                radiantNazwa5 = nazwaSlardar;
                
                
            }
            
        }
        }
        
        if(slardar1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSlardar = true;
            slardar.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slardarKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slardarAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon25);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Slardar");
                direNazwa1 = nazwaSlardar;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon25);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Slardar");
                direNazwa2 = nazwaSlardar;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon25);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Slardar");
                direNazwa3 = nazwaSlardar;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon25);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Slardar");
                direNazwa4 = nazwaSlardar;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon25);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Slardar"); 
                direNazwa5 = nazwaSlardar;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSlark(){
            
         slark.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent slark1){
            
            if(direSlark == false && radiantSlark == false){
                
                   
        int width = slark.getWidth();
        if(slark1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSlark = true;
            slark.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + slarkKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - slarkAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon68);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Slark");
                radiantNazwa1 = nazwaSlark;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon68);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Slark");
                radiantNazwa2 = nazwaSlark;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon68);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Slark");
                radiantNazwa3 = nazwaSlark;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon68);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Slark");
                radiantNazwa4 = nazwaSlark;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon68);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Slark");
                radiantNazwa5 = nazwaSlark;
                
                
            }
            
        }
        }
        
        if(slark1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSlark = true;
            slark.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slarkKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slarkAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon68);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Slark");
                direNazwa1 = nazwaSlark;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon68);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Slark");
                direNazwa2 = nazwaSlark;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon68);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Slark");
                direNazwa3 = nazwaSlark;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon68);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Slark");
                direNazwa4 = nazwaSlark;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon68);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Slark"); 
                direNazwa5 = nazwaSlark;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSniper(){
            
         sniper.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent sniper1){
            
            if(direSniper == false && radiantSniper == false){
                
                   
        int width = sniper.getWidth();
        if(sniper1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSniper = true;
            sniper.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + sniperKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - sniperAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon45);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Sniper");
                radiantNazwa1 = nazwaSniper;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon45);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Sniper");
                radiantNazwa2 = nazwaSniper;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon45);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Sniper");
                radiantNazwa3 = nazwaSniper;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon45);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Sniper");
                radiantNazwa4 = nazwaSniper;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon45);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Sniper");
                radiantNazwa5 = nazwaSniper;
                
                
            }
            
        }
        }
        
        if(sniper1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSniper = true;
            sniper.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sniperKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sniperAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon45);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Sniper");
                direNazwa1 = nazwaSniper;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon45);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Sniper");
                direNazwa2 = nazwaSniper;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon45);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Sniper");
                direNazwa3 = nazwaSniper;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon45);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Sniper");
                direNazwa4 = nazwaSniper;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon45);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Sniper"); 
                direNazwa5 = nazwaSniper;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSpectre(){
            
         spectre.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent spectre1){
            
            if(direSpectre == false && radiantSpectre == false){
                
                   
        int width = spectre.getWidth();
        if(spectre1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSpectre = true;
            spectre.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + spectreKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - spectreAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon65);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Spectre");
                radiantNazwa1 = nazwaSpectre;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon65);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Spectre");
                radiantNazwa2 = nazwaSpectre;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon65);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Spectre");
                radiantNazwa3 = nazwaSpectre;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon65);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Spectre");
                radiantNazwa4 = nazwaSpectre;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon65);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Spectre");
                radiantNazwa5 = nazwaSpectre;
                
                
            }
            
        }
        }
        
        if(spectre1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSpectre = true;
            spectre.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spectreKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spectreAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon65);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Spectre");
                direNazwa1 = nazwaSpectre;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon65);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Spectre");
                direNazwa2 = nazwaSpectre;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon65);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Spectre");
                direNazwa3 = nazwaSpectre;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon65);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Spectre");
                direNazwa4 = nazwaSpectre;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon65);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Spectre"); 
                direNazwa5 = nazwaSpectre;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborSpiritBreaker(){
            
         spiritBreaker.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent spiritBreaker1){
            
            if(direSpiritBreaker == false && radiantSpiritBreaker == false){
                
                   
        int width = spiritBreaker.getWidth();
        if(spiritBreaker1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSpiritBreaker = true;
            spiritBreaker.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + spiritBreakerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - spiritBreakerAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon31);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Spirit Breaker");
                radiantNazwa1 = nazwaSpiritBreaker;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon31);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Spirit Breaker");
                radiantNazwa2 = nazwaSpiritBreaker;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon31);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Spirit Breaker");
                radiantNazwa3 = nazwaSpiritBreaker;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon31);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Spirit Breaker");
                radiantNazwa4 = nazwaSpiritBreaker;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon31);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Spirit Breaker");
                radiantNazwa5 = nazwaSpiritBreaker;
                
                
            }
            
        }
        }
        
        if(spiritBreaker1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSpiritBreaker = true;
            spiritBreaker.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spiritBreakerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spiritBreakerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon31);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Spirit Breaker");
                direNazwa1 = nazwaSpiritBreaker;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon31);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Spirit Breaker");
                direNazwa2 = nazwaSpiritBreaker;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon31);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Spirit Breaker");
                direNazwa3 = nazwaSpiritBreaker;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon31);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Spirit Breaker");
                direNazwa4 = nazwaSpiritBreaker;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon31);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Spirit Breaker"); 
                direNazwa5 = nazwaSpiritBreaker;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborStormSpirit(){
            
         stormSpirit.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent stormSpirit1){
            
            if(direStormSpirit == false && radiantStormSpirit == false){
                
                   
        int width = stormSpirit.getWidth();
        if(stormSpirit1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantStormSpirit = true;
            stormSpirit.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + stormSpiritKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - stormSpiritAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon73);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Storm Spirit");
                radiantNazwa1 = nazwaStormSpirit;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon73);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Storm Spirit");
                radiantNazwa2 = nazwaStormSpirit;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon73);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Storm Spirit");
                radiantNazwa3 = nazwaStormSpirit;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon73);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Storm Spirit");
                radiantNazwa4 = nazwaStormSpirit;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon73);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Storm Spirit");
                radiantNazwa5 = nazwaStormSpirit;
                
                
            }
            
        }
        }
        
        if(stormSpirit1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direStormSpirit = true;
            stormSpirit.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + stormSpiritKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - stormSpiritAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon73);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Storm Spirit");
                direNazwa1 = nazwaStormSpirit;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon73);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Storm Spirit");
                direNazwa2 = nazwaStormSpirit;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon73);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Storm Spirit");
                direNazwa3 = nazwaStormSpirit;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon73);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Storm Spirit");
                direNazwa4 = nazwaStormSpirit;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon73);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Storm Spirit"); 
                direNazwa5 = nazwaStormSpirit;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        
        
        public void wyborSven(){
            
         sven.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent sven1){
            
            if(direSven == false && radiantSven == false){
                
                   
        int width = sven.getWidth();
        if(sven1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantSven = true;
            sven.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + svenKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - svenAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon2);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Sven");
                radiantNazwa1 = nazwaSven;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon2);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Sven");
                radiantNazwa2 = nazwaSven;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon2);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Sven");
                radiantNazwa3 = nazwaSven;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon2);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Sven");
                radiantNazwa4 = nazwaSven;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon2);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Sven");
                radiantNazwa5 = nazwaSven;
                
                
            }
            
        }
        }
        
        if(sven1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direSven = true;
            sven.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + svenKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - svenAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon2);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Sven");
                direNazwa1 = nazwaSven;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon2);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Sven");
                direNazwa2 = nazwaSven;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon2);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Sven");
                direNazwa3 = nazwaSven;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon2);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Sven");
                direNazwa4 = nazwaSven;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon2);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Sven"); 
                direNazwa5 = nazwaSven;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTechies(){
            
         techies.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent techies1){
            
            if(direTechies == false && radiantTechies == false){
                
                   
        int width = techies.getWidth();
        if(techies1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTechies = true;
            techies.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + techiesKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - techiesAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon91);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Techies");
                radiantNazwa1 = nazwaTechies;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon91);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Techies");
                radiantNazwa2 = nazwaTechies;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon91);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Techies");
                radiantNazwa3 = nazwaTechies;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon91);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Techies");
                radiantNazwa4 = nazwaTechies;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon91);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Techies");
                radiantNazwa5 = nazwaTechies;
                
                
            }
            
        }
        }
        
        if(techies1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTechies = true;
            techies.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + techiesKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - techiesAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon91);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Techies");
                direNazwa1 = nazwaTechies;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon91);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Techies");
                direNazwa2 = nazwaTechies;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon91);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Techies");
                direNazwa3 = nazwaTechies;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon91);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Techies");
                direNazwa4 = nazwaTechies;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon91);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Techies"); 
                direNazwa5 = nazwaTechies;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTemplarAssassin(){
            
         templarAssassin.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent templarAssassin1){
            
            if(direTemplarAssassin == false && radiantTemplarAssassin == false){
                
                   
        int width = templarAssassin.getWidth();
        if(templarAssassin1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTemplarAssassin = true;
            templarAssassin.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + templarAssassinKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - templarAssassinAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon46);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Templar Assassin");
                radiantNazwa1 = nazwaTemplarAssassin;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon46);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Templar Assassin");
                radiantNazwa2 = nazwaTemplarAssassin;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon46);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Templar Assassin");
                radiantNazwa3 = nazwaTemplarAssassin;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon46);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Templar Assassin");
                radiantNazwa4 = nazwaTemplarAssassin;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon46);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Templar Assassin");
                radiantNazwa5 = nazwaTemplarAssassin;
                
                
            }
            
        }
        }
        
        if(templarAssassin1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTemplarAssassin = true;
            templarAssassin.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + templarAssassinKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - templarAssassinAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon46);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Templar Assassin");
                direNazwa1 = nazwaTemplarAssassin;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon46);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Templar Assassin");
                direNazwa2 = nazwaTemplarAssassin;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon46);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Templar Assassin");
                direNazwa3 = nazwaTemplarAssassin;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon46);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Templar Assassin");
                direNazwa4 = nazwaTemplarAssassin;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon46);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Templar Assassin"); 
                direNazwa5 = nazwaTemplarAssassin;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTerrorblade(){
            
         terrorblade.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent terrorblade1){
            
            if(direTerrorblade == false && radiantTerrorblade == false){
                
                   
        int width = terrorblade.getWidth();
        if(terrorblade1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTerrorblade = true;
            terrorblade.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + terrorbladeKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - terrorbladeAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon70);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Terrorblade");
                radiantNazwa1 = nazwaTerrorblade;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon70);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Terrorblade");
                radiantNazwa2 = nazwaTerrorblade;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon70);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Terrorblade");
                radiantNazwa3 = nazwaTerrorblade;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon70);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Terrorblade");
                radiantNazwa4 = nazwaTerrorblade;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon70);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Terrorblade");
                radiantNazwa5 = nazwaTerrorblade;
                
                
            }
            
        }
        }
        
        if(terrorblade1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTerrorblade = true;
            terrorblade.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + terrorbladeKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - terrorbladeAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon70);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Terrorblade");
                direNazwa1 = nazwaTerrorblade;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon70);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Terrorblade");
                direNazwa2 = nazwaTerrorblade;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon70);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Terrorblade");
                direNazwa3 = nazwaTerrorblade;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon70);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Terrorblade");
                direNazwa4 = nazwaTerrorblade;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon70);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Terrorblade"); 
                direNazwa5 = nazwaTerrorblade;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTidehunter(){
            
         tidehunter.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent tidehunter1){
            
            if(direTidehunter == false && radiantTidehunter == false){
                
                   
        int width = tidehunter.getWidth();
        if(tidehunter1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTidehunter = true;
            tidehunter.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + tidehunterKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - tidehunterAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon26);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Tidehunter");
                radiantNazwa1 = nazwaTidehunter;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon26);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Tidehunter");
                radiantNazwa2 = nazwaTidehunter;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon26);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Tidehunter");
                radiantNazwa3 = nazwaTidehunter;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon26);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Tidehunter");
                radiantNazwa4 = nazwaTidehunter;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon26);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Tidehunter");
                radiantNazwa5 = nazwaTidehunter;
                
                
            }
            
        }
        }
        
        if(tidehunter1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTidehunter = true;
            tidehunter.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tidehunterKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tidehunterAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon26);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Tidehunter");
                direNazwa1 = nazwaTidehunter;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon26);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Tidehunter");
                direNazwa2 = nazwaTidehunter;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon26);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Tidehunter");
                direNazwa3 = nazwaTidehunter;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon26);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Tidehunter");
                direNazwa4 = nazwaTidehunter;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon26);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Tidehunter"); 
                direNazwa5 = nazwaTidehunter;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTimbersaw(){
            
         timbersaw.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent timbersaw1){
            
            if(direTimbersaw == false && radiantTimbersaw == false){
                
                   
        int width = timbersaw.getWidth();
        if(timbersaw1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTimbersaw = true;
            timbersaw.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + timbersawKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - timbersawAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon15);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Timbersaw");
                radiantNazwa1 = nazwaTimbersaw;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon15);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Timbersaw");
                radiantNazwa2 = nazwaTimbersaw;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon15);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Timbersaw");
                radiantNazwa3 = nazwaTimbersaw;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon15);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Timbersaw");
                radiantNazwa4 = nazwaTimbersaw;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon15);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Timbersaw");
                radiantNazwa5 = nazwaTimbersaw;
                
                
            }
            
        }
        }
        
        if(timbersaw1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTimbersaw = true;
            timbersaw.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + timbersawKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - timbersawAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon15);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Timbersaw");
                direNazwa1 = nazwaTimbersaw;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon15);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Timbersaw");
                direNazwa2 = nazwaTimbersaw;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon15);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Timbersaw");
                direNazwa3 = nazwaTimbersaw;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon15);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Timbersaw");
                direNazwa4 = nazwaTimbersaw;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon15);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Timbersaw"); 
                direNazwa5 = nazwaTimbersaw;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTinker(){
            
         tinker.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent tinker1){
            
            if(direTinker == false && radiantTinker == false){
                
                   
        int width = tinker.getWidth();
        if(tinker1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTinker = true;
            tinker.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + tinkerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - tinkerAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon78);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Tinker");
                radiantNazwa1 = nazwaTinker;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon78);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Tinker");
                radiantNazwa2 = nazwaTinker;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon78);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Tinker");
                radiantNazwa3 = nazwaTinker;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon78);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Tinker");
                radiantNazwa4 = nazwaTinker;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon78);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Tinker");
                radiantNazwa5 = nazwaTinker;
                
                
            }
            
        }
        }
        
        if(tinker1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTinker = true;
            tinker.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinkerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinkerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon78);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Tinker");
                direNazwa1 = nazwaTinker;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon78);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Tinker");
                direNazwa2 = nazwaTinker;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon78);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Tinker");
                direNazwa3 = nazwaTinker;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon78);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Tinker");
                direNazwa4 = nazwaTinker;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon78);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Tinker"); 
                direNazwa5 = nazwaTinker;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTiny(){
            
         tiny.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent tiny1){
            
            if(direTiny == false && radiantTiny == false){    
                   
        int width = tiny.getWidth();
        if(tiny1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTiny = true;
            tiny.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + tinyKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - tinyAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon4);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Tiny");
                radiantNazwa1 = nazwaTiny;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon4);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Tiny");
                radiantNazwa2 = nazwaTiny;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon4);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Tiny");
                radiantNazwa3 = nazwaTiny;
               
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon4);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Tiny");
                radiantNazwa4 = nazwaTiny;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon4);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Tiny");
                radiantNazwa5 = nazwaTiny;
              
                
            }
            
            
                  
        }
        }
        
        if(tiny1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTiny = true;
            tiny.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinyKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinyAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon4);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Tiny");
                direNazwa1 = nazwaTiny;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon4);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Tiny");
                direNazwa2 = nazwaTiny;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon4);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Tiny");
                direNazwa3 = nazwaTiny;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon4);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Tiny");
                direNazwa4 = nazwaTiny;
               
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon4);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Tiny"); 
                direNazwa5 = nazwaTiny;
                
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborTreantProtector(){
            
         treantProtector.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent treantProtector1){
            
            if(direTreantProtector == false && radiantTreantProtector == false){
                
                   
        int width = treantProtector.getWidth();
        if(treantProtector1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTreantProtector = true;
            treantProtector.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + treantProtectorKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - treantProtectorAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon12);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Treant Protector");
                radiantNazwa1 = nazwaTreantProtector;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon12);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Treant Protector");
                radiantNazwa2 = nazwaTreantProtector;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon12);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Treant Protector");
                radiantNazwa3 = nazwaTreantProtector;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon12);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Treant Protector");
                radiantNazwa4 = nazwaTreantProtector;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon12);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Treant Protector");
                radiantNazwa5 = nazwaTreantProtector;
                
                
            }
            
        }
        }
        
        if(treantProtector1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTreantProtector = true;
            treantProtector.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + treantProtectorKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - treantProtectorAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon12);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Treant Protector");
                direNazwa1 = nazwaTreantProtector;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon12);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Treant Protector");
                direNazwa2 = nazwaTreantProtector;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon12);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Treant Protector");
                direNazwa3 = nazwaTreantProtector;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon12);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Treant Protector");
                direNazwa4 = nazwaTreantProtector;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon12);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Treant Protector"); 
                direNazwa5 = nazwaTreantProtector;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTrollWarlord(){
            
         trollWarlord.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent trollWarlord1){
            
            if(direTrollWarlord == false && radiantTrollWarlord == false){
                
                   
        int width = trollWarlord.getWidth();
        if(trollWarlord1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTrollWarlord = true;
            trollWarlord.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + trollWarlordKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - trollWarlordAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon53);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Troll Warlord");
                radiantNazwa1 = nazwaTrollWarlord;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon53);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Troll Warlord");
                radiantNazwa2 = nazwaTrollWarlord;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon53);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Troll Warlord");
                radiantNazwa3 = nazwaTrollWarlord;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon53);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Troll Warlord");
                radiantNazwa4 = nazwaTrollWarlord;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon53);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Troll Warlord");
                radiantNazwa5 = nazwaTrollWarlord;
                
                
            }
            
        }
        }
        
        if(trollWarlord1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTrollWarlord = true;
            trollWarlord.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + trollWarlordKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - trollWarlordAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon53);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Troll Warlord");
                direNazwa1 = nazwaTrollWarlord;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon53);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Troll Warlord");
                direNazwa2 = nazwaTrollWarlord;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon53);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Troll Warlord");
                direNazwa3 = nazwaTrollWarlord;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon53);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Troll Warlord");
                direNazwa4 = nazwaTrollWarlord;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon53);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Troll Warlord"); 
                direNazwa5 = nazwaTrollWarlord;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborTusk(){
            
         tusk.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent tusk1){
            
            if(direTusk == false && radiantTusk == false){
                
                   
        int width = tusk.getWidth();
        if(tusk1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantTusk = true;
            tusk.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + tuskKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - tuskAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon17);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Tusk");
                radiantNazwa1 = nazwaTusk;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon17);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Tusk");
                radiantNazwa2 = nazwaTusk;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon17);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Tusk");
                radiantNazwa3 = nazwaTusk;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon17);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Tusk");
                radiantNazwa4 = nazwaTusk;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon17);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Tusk");
                radiantNazwa5 = nazwaTusk;
                
                
            }
            
        }
        }
        
        if(tusk1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direTusk = true;
            tusk.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tuskKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tuskAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon17);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Tusk");
                direNazwa1 = nazwaTusk;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon17);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Tusk");
                direNazwa2 = nazwaTusk;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon17);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Tusk");
                direNazwa3 = nazwaTusk;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon17);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Tusk");
                direNazwa4 = nazwaTusk;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon17);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Tusk"); 
                direNazwa5 = nazwaTusk;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborUndying(){
            
         undying.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent undying1){
            
            if(direUndying == false && radiantUndying == false){
                
                   
        int width = undying.getWidth();
        if(undying1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantUndying = true;
            undying.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + undyingKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - undyingAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon34);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Undying");
                radiantNazwa1 = nazwaUndying;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon34);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Undying");
                radiantNazwa2 = nazwaUndying;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon34);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Undying");
                radiantNazwa3 = nazwaUndying;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon34);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Undying");
                radiantNazwa4 = nazwaUndying;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon34);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Undying");
                radiantNazwa5 = nazwaUndying;
                
                
            }
            
        }
        }
        
        if(undying1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direUndying = true;
            undying.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + undyingKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - undyingAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon34);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Undying");
                direNazwa1 = nazwaUndying;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon34);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Undying");
                direNazwa2 = nazwaUndying;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon34);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Undying");
                direNazwa3 = nazwaUndying;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon34);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Undying");
                direNazwa4 = nazwaUndying;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon34);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Undying"); 
                direNazwa5 = nazwaUndying;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborUrsa(){
            
         ursa.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent ursa1){
            
            if(direUrsa == false && radiantUrsa == false){
                
                   
        int width = ursa.getWidth();
        if(ursa1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantUrsa = true;
            ursa.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + ursaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - ursaAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon49);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Ursa");
                radiantNazwa1 = nazwaUrsa;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon49);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Ursa");
                radiantNazwa2 = nazwaUrsa;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon49);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Ursa");
                radiantNazwa3 = nazwaUrsa;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon49);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Ursa");
                radiantNazwa4 = nazwaUrsa;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon49);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Ursa");
                radiantNazwa5 = nazwaUrsa;
                
                
            }
            
        }
        }
        
        if(ursa1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direUrsa = true;
            ursa.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ursaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ursaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon49);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Ursa");
                direNazwa1 = nazwaUrsa;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon49);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Ursa");
                direNazwa2 = nazwaUrsa;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon49);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Ursa");
                direNazwa3 = nazwaUrsa;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon49);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Ursa");
                direNazwa4 = nazwaUrsa;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon49);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Ursa"); 
                direNazwa5 = nazwaUrsa;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborVengefulSpirit(){
            
         vengefulSpirit.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent vengefulSpirit1){
            
            if(direVengefulSpirit == false && radiantVengefulSpirit == false){
                
                   
        int width = vengefulSpirit.getWidth();
        if(vengefulSpirit1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantVengefulSpirit = true;
            vengefulSpirit.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + vengefulSpiritKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - vengefulSpiritAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon43);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Vengeful Spirit");
                radiantNazwa1 = nazwaVengefulSpirit;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon43);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Vengeful Spirit");
                radiantNazwa2 = nazwaVengefulSpirit;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon43);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Vengeful Spirit");
                radiantNazwa3 = nazwaVengefulSpirit;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon43);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Vengeful Spirit");
                radiantNazwa4 = nazwaVengefulSpirit;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon43);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Vengeful Spirit");
                radiantNazwa5 = nazwaVengefulSpirit;
                
                
            }
            
        }
        }
        
        if(vengefulSpirit1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direVengefulSpirit = true;
            vengefulSpirit.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + vengefulSpiritKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - vengefulSpiritAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon43);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Vengeful Spirit");
                direNazwa1 = nazwaVengefulSpirit;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon43);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Vengeful Spirit");
                direNazwa2 = nazwaVengefulSpirit;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon43);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Vengeful Spirit");
                direNazwa3 = nazwaVengefulSpirit;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon43);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Vengeful Spirit");
                direNazwa4 = nazwaVengefulSpirit;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon43);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Vengeful Spirit"); 
                direNazwa5 = nazwaVengefulSpirit;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborVenomancer(){
            
         venomancer.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent venomancer1){
            
            if(direVenomancer == false && radiantVenomancer == false){
                
                   
        int width = venomancer.getWidth();
        if(venomancer1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantVenomancer = true;
            venomancer.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + venomancerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - venomancerAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon58);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Venomancer");
                radiantNazwa1 = nazwaVenomancer;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon58);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Venomancer");
                radiantNazwa2 = nazwaVenomancer;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon58);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Venomancer");
                radiantNazwa3 = nazwaVenomancer;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon58);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Venomancer");
                radiantNazwa4 = nazwaVenomancer;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon58);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Venomancer");
                radiantNazwa5 = nazwaVenomancer;
                
                
            }
            
        }
        }
        
        if(venomancer1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direVenomancer = true;
            venomancer.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + venomancerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - venomancerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon58);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Venomancer");
                direNazwa1 = nazwaVenomancer;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon58);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Venomancer");
                direNazwa2 = nazwaVenomancer;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon58);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Venomancer");
                direNazwa3 = nazwaVenomancer;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon58);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Venomancer");
                direNazwa4 = nazwaVenomancer;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon58);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Venomancer"); 
                direNazwa5 = nazwaVenomancer;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborViper(){
            
         viper.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent viper1){
            
            if(direViper == false && radiantViper == false){
                
                   
        int width = viper.getWidth();
        if(viper1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantViper = true;
            viper.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + viperKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - viperAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon61);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Viper");
                radiantNazwa1 = nazwaViper;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon61);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Viper");
                radiantNazwa2 = nazwaViper;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon61);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Viper");
                radiantNazwa3 = nazwaViper;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon61);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Viper");
                radiantNazwa4 = nazwaViper;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon61);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Viper");
                radiantNazwa5 = nazwaViper;
                
                
            }
            
        }
        }
        
        if(viper1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direViper = true;
            viper.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + viperKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - viperAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon61);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Viper");
                direNazwa1 = nazwaViper;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon61);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Viper");
                direNazwa2 = nazwaViper;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon61);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Viper");
                direNazwa3 = nazwaViper;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon61);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Viper");
                direNazwa4 = nazwaViper;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon61);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Viper"); 
                direNazwa5 = nazwaViper;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborVisage(){
            
         visage.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent visage1){
            
            if(direVisage == false && radiantVisage == false){
                
                   
        int width = visage.getWidth();
        if(visage1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantVisage = true;
            visage.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + visageKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - visageAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon110);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Visage");
                radiantNazwa1 = nazwaVisage;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon110);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Visage");
                radiantNazwa2 = nazwaVisage;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon110);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Visage");
                radiantNazwa3 = nazwaVisage;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon110);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Visage");
                radiantNazwa4 = nazwaVisage;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon110);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Visage");
                radiantNazwa5 = nazwaVisage;
                
                
            }
            
        }
        }
        
        if(visage1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direVisage = true;
            visage.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + visageKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - visageAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon110);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Visage");
                direNazwa1 = nazwaVisage;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon110);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Visage");
                direNazwa2 = nazwaVisage;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon110);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Visage");
                direNazwa3 = nazwaVisage;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon110);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Visage");
                direNazwa4 = nazwaVisage;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon110);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Visage"); 
                direNazwa5 = nazwaVisage;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborVoidB(){
            
         voidB.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent voidB1){
            
            if(direVoid == false && radiantVoid == false){
                
                   
        int width = voidB.getWidth();
        if(voidB1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantVoid = true;
            voidB.setEnabled(false);
            
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + voidKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - voidAnti.get(j));
            
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon59);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Void");
                radiantNazwa1 = nazwaVoid;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon59);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Void");
                radiantNazwa2 = nazwaVoid;
              
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon59);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Void");
                radiantNazwa3 = nazwaVoid;
                
               
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon59);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Void");
                radiantNazwa4 = nazwaVoid;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon59);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Void");
                radiantNazwa5 = nazwaVoid;
                
                
            }
            
        }
        }
        
        if(voidB1.getX() > width/2){
            if(direPostacA == false || direPostacD == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direVoid = true;
            voidB.setEnabled(false);
            
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + voidKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - voidAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon59);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Void");
                direNazwa1 = nazwaVoid;
               
               
              }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon59);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Void");
                direNazwa2 = nazwaVoid;
                
                      
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon59);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Void");
                direNazwa3 = nazwaVoid;
                
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon59);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Void");
                direNazwa4 = nazwaVoid;
                
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon59);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Void"); 
                direNazwa5 = nazwaVoid;
               
                
              } 
            }
        }
     
        bestToPickAvoidList.sortowanieListyRadiantDire();
        
            }
        
        }});
         
        }
        
        public void wyborWarlock(){
            
        warlock.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent warlock1){
            
            if(direWarlock == false && radiantWarlock == false){    
                   
        int width = warlock.getWidth();
        if(warlock1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantWarlock = true;
            warlock.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + warlockKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - warlockAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon98);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Warlock");
                radiantNazwa1 = nazwaWarlock;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon98);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Warlock");
                radiantNazwa2 = nazwaWarlock;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon98);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Warlock");
                radiantNazwa3 = nazwaWarlock;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon98);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Warlock");
                radiantNazwa4 = nazwaWarlock;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon98);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Warlock");
                radiantNazwa5 = nazwaWarlock;
                
                
            }
            
            
                  
        }
        }
        
        if(warlock1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direWarlock = true;
            warlock.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + warlockKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - warlockAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon98);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Warlock");
                direNazwa1 = nazwaWarlock;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon98);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Warlock");
                direNazwa2 = nazwaWarlock;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon98);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Warlock");
                direNazwa3 = nazwaWarlock;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon98);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Warlock");
                direNazwa4 = nazwaWarlock;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon98);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Warlock"); 
                direNazwa5 = nazwaWarlock;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborWeaver(){
            
        weaver.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent weaver1){
            
            if(direWeaver == false && radiantWeaver == false){    
                   
        int width = weaver.getWidth();
        if(weaver1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantWeaver = true;
            weaver.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + weaverKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - weaverAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon64);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Weaver");
                radiantNazwa1 = nazwaWeaver;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon64);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Weaver");
                radiantNazwa2 = nazwaWeaver;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon64);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Weaver");
                radiantNazwa3 = nazwaWeaver;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon64);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Weaver");
                radiantNazwa4 = nazwaWeaver;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon64);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Weaver");
                radiantNazwa5 = nazwaWeaver;
                
                
            }
            
            
                  
        }
        }
        
        if(weaver1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direWeaver = true;
            weaver.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + weaverKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - weaverAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon64);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Weaver");
                direNazwa1 = nazwaWeaver;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon64);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Weaver");
                direNazwa2 = nazwaWeaver;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon64);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Weaver");
                direNazwa3 = nazwaWeaver;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon64);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Weaver");
                direNazwa4 = nazwaWeaver;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon64);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Weaver"); 
                direNazwa5 = nazwaWeaver;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborWindranger(){
            
        windranger.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent windranger1){
            
            if(direWindranger == false && radiantWindranger == false){    
                   
        int width = windranger.getWidth();
        if(windranger1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantWindranger = true;
            windranger.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + windrangerKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - windrangerAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon74);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Windranger");
                radiantNazwa1 = nazwaWindranger;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon74);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Windranger");
                radiantNazwa2 = nazwaWindranger;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon74);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Windranger");
                radiantNazwa3 = nazwaWindranger;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon74);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Windranger");
                radiantNazwa4 = nazwaWindranger;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon74);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Windranger");
                radiantNazwa5 = nazwaWindranger;
                
                
            }
            
            
                  
        }
        }
        
        if(windranger1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direWindranger = true;
            windranger.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + windrangerKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - windrangerAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon74);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Windranger");
                direNazwa1 = nazwaWindranger;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon74);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Windranger");
                direNazwa2 = nazwaWindranger;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon74);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Windranger");
                direNazwa3 = nazwaWindranger;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon74);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Windranger");
                direNazwa4 = nazwaWindranger;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon74);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Windranger"); 
                direNazwa5 = nazwaWindranger;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborWinterWyvern(){
            
        winterWyvern.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent winterWyvern1){
            
            if(direWinterWyvern == false && radiantWinterWyvern == false){    
                   
        int width = winterWyvern.getWidth();
        if(winterWyvern1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantWinterWyvern = true;
            winterWyvern.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + winterWyvernKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - winterWyvernAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon111);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Winter Wyvern");
                radiantNazwa1 = nazwaWinterWyvern;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon111);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Winter Wyvern");
                radiantNazwa2 = nazwaWinterWyvern;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon111);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Winter Wyvern");
                radiantNazwa3 = nazwaWinterWyvern;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon111);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Winter Wyvern");
                radiantNazwa4 = nazwaWinterWyvern;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon111);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Winter Wyvern");
                radiantNazwa5 = nazwaWinterWyvern;
                
                
            }
            
            
                  
        }
        }
        
        if(winterWyvern1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direWinterWyvern = true;
            winterWyvern.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + winterWyvernKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - winterWyvernAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon111);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Winter Wyvern");
                direNazwa1 = nazwaWinterWyvern;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon111);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Winter Wyvern");
                direNazwa2 = nazwaWinterWyvern;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon111);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Winter Wyvern");
                direNazwa3 = nazwaWinterWyvern;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon111);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Winter Wyvern");
                direNazwa4 = nazwaWinterWyvern;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon111);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Winter Wyvern"); 
                direNazwa5 = nazwaWinterWyvern;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborWitchDoctor(){
            
        witchDoctor.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent witchDoctor1){
            
            if(direWitchDoctor == false && radiantWitchDoctor == false){    
                   
        int width = witchDoctor.getWidth();
        if(witchDoctor1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantWitchDoctor = true;
            witchDoctor.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + witchDoctorKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - witchDoctorAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon95);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Witch Doctor");
                radiantNazwa1 = nazwaWitchDoctor;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon95);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Witch Doctor");
                radiantNazwa2 = nazwaWitchDoctor;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon95);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Witch Doctor");
                radiantNazwa3 = nazwaWitchDoctor;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon95);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Witch Doctor");
                radiantNazwa4 = nazwaWitchDoctor;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon95);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Witch Doctor");
                radiantNazwa5 = nazwaWitchDoctor;
                
                
            }
            
            
                  
        }
        }
        
        if(witchDoctor1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direWitchDoctor = true;
            witchDoctor.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + witchDoctorKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - witchDoctorAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon95);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Witch Doctor");
                direNazwa1 = nazwaWitchDoctor;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon95);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Witch Doctor");
                direNazwa2 = nazwaWitchDoctor;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon95);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Witch Doctor");
                direNazwa3 = nazwaWitchDoctor;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon95);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Witch Doctor");
                direNazwa4 = nazwaWitchDoctor;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon95);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Witch Doctor"); 
                direNazwa5 = nazwaWitchDoctor;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborWraithKing(){
            
        wraithKing.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent wraithKing1){
            
            if(direWraithKing == false && radiantWraithKing == false){    
                   
        int width = wraithKing.getWidth();
        if(wraithKing1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantWraithKing = true;
            wraithKing.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + wraithKingKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - wraithKingAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon27);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Wraith King");
                radiantNazwa1 = nazwaWraithKing;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon27);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Wraith King");
                radiantNazwa2 = nazwaWraithKing;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon27);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Wraith King");
                radiantNazwa3 = nazwaWraithKing;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon27);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Wraith King");
                radiantNazwa4 = nazwaWraithKing;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon27);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Wraith King");
                radiantNazwa5 = nazwaWraithKing;
                
                
            }
            
            
                  
        }
        }
        
        if(wraithKing1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direWraithKing = true;
            wraithKing.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + wraithKingKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - wraithKingAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon27);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Wraith King");
                direNazwa1 = nazwaWraithKing;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon27);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Wraith King");
                direNazwa2 = nazwaWraithKing;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon27);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Wraith King");
                direNazwa3 = nazwaWraithKing;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon27);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Wraith King");
                direNazwa4 = nazwaWraithKing;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon27);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Wraith King"); 
                direNazwa5 = nazwaWraithKing;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborZeus(){
            
        zeus.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent zeus1){
            
            if(direZeus == false && radiantZeus == false){    
                   
        int width = zeus.getWidth();
        if(zeus1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantZeus = true;
            zeus.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + zeusKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - zeusAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon75);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Zeus");
                radiantNazwa1 = nazwaZeus;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon75);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Zeus");
                radiantNazwa2 = nazwaZeus;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon75);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Zeus");
                radiantNazwa3 = nazwaZeus;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon75);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Zeus");
                radiantNazwa4 = nazwaZeus;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon75);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Zeus");
                radiantNazwa5 = nazwaZeus;
                
                
            }
            
            
                  
        }
        }
        
        if(zeus1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direZeus = true;
            zeus.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + zeusKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - zeusAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon75);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Zeus");
                direNazwa1 = nazwaZeus;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon75);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Zeus");
                direNazwa2 = nazwaZeus;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon75);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Zeus");
                direNazwa3 = nazwaZeus;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon75);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Zeus");
                direNazwa4 = nazwaZeus;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon75);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Zeus"); 
                direNazwa5 = nazwaZeus;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborKunkka(){
            
        kunkka.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent kunkka1){
            
            if(direKunkka == false && radiantKunkka == false){    
                   
        int width = kunkka.getWidth();
        if(kunkka1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantKunkka = true;
            kunkka.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + kunkkaKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - kunkkaAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon5);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Kunkka");
                radiantNazwa1 = nazwaKunkka;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon5);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Kunkka");
                radiantNazwa2 = nazwaKunkka;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon5);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Kunkka");
                radiantNazwa3 = nazwaKunkka;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon5);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Kunkka");
                radiantNazwa4 = nazwaKunkka;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon5);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Kunkka");
                radiantNazwa5 = nazwaKunkka;
                
                
            }
            
            
                  
        }
        }
        
        if(kunkka1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direKunkka = true;
            kunkka.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
                
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + kunkkaKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - kunkkaAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon5);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Kunkka");
                direNazwa1 = nazwaKunkka;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon5);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Kunkka");
                direNazwa2 = nazwaKunkka;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon5);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Kunkka");
                direNazwa3 = nazwaKunkka;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon5);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Kunkka");
                direNazwa4 = nazwaKunkka;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon5);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Kunkka"); 
                direNazwa5 = nazwaKunkka;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
        public void wyborOmniknight(){
            
        omni.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent omni1){
            
            if(direOmniknight == false && radiantOmniknight == false){    
                   
        int width = omni.getWidth();
        if(omni1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantOmniknight = true;
            omni.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + omniKnightKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - omniKnightAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon3);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Omniknight");
                radiantNazwa1 = nazwaOmniknight;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon3);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Omniknight");
                radiantNazwa2 = nazwaOmniknight;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon3);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Omniknight");
                radiantNazwa3 = nazwaOmniknight;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon3);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Omniknight");
                radiantNazwa4 = nazwaOmniknight;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon3);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Omniknight");
                radiantNazwa5 = nazwaOmniknight;
                
                
            }
            
            
                  
        }
        }
        
        if(omni1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direOmniknight = true;
            omni.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
               
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + omniKnightKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - omniKnightAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon3);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Omniknight");
                direNazwa1 = nazwaOmniknight;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon3);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Omniknight");
                direNazwa2 = nazwaOmniknight;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon3);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Omniknight");
                direNazwa3 = nazwaOmniknight;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon3);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Omniknight");
                direNazwa4 = nazwaOmniknight;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon3);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Omniknight"); 
                direNazwa5 = nazwaOmniknight;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
         
         public void wyborHuskar(){
            
        huskar.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent huskar1){
            
            if(direHuskar == false && radiantHuskar == false){    
                   
        int width = huskar.getWidth();
        if(huskar1.getX() < width/2){
            if(radiantPostacA == false || radiantPostacB == false || radiantPostacC == false || radiantPostacD == false || radiantPostacE == false){
            
            radiantHuskar = true;
            huskar.setEnabled(false);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) + huskarKoop.get(i));
            
            }
            
            for (int j = 0; j < iloscBohaterow; ++j){
            
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) - huskarAnti.get(j));
                
            }
            
            if(radiantPostacA == false){
             
                radiantPostacA = true;
                radiantPostac1.setIcon(icon9);
                radiantPostac1.setEnabled(true);
                radiantPostac1.setToolTipText("Huskar");
                radiantNazwa1 = nazwaHuskar;
                
                
            }
            
            else if(radiantPostacB == false){
                
                radiantPostacB = true;
                radiantPostac2.setIcon(icon9);
                radiantPostac2.setEnabled(true);
                radiantPostac2.setToolTipText("Huskar");
                radiantNazwa2 = nazwaHuskar;
                
                
            }
            
            else if(radiantPostacC == false){
                
                radiantPostacC = true;
                radiantPostac3.setIcon(icon9);
                radiantPostac3.setEnabled(true);
                radiantPostac3.setToolTipText("Huskar");
                radiantNazwa3 = nazwaHuskar;
                
                
            }
            
            else if(radiantPostacD == false){
                
                radiantPostacD = true;
                radiantPostac4.setIcon(icon9);
                radiantPostac4.setEnabled(true);
                radiantPostac4.setToolTipText("Huskar");
                radiantNazwa4 = nazwaHuskar;
                
                
            }
            
            else if(radiantPostacE == false){
                
                radiantPostacE = true;
                radiantPostac5.setIcon(icon9);
                radiantPostac5.setEnabled(true);
                radiantPostac5.setToolTipText("Huskar");
                radiantNazwa5 = nazwaHuskar;
                
                
            }
            
            
                  
        }
        }
        
        if(huskar1.getX() > width/2){
            if(direPostacA == false || direPostacB == false || direPostacC == false || direPostacD == false || direPostacE == false){
            
            direHuskar = true;
            huskar.setEnabled(false);
            
            for (int j = 0; j < iloscBohaterow; ++j) {
               
            heroWinRateListDire.set(j, heroWinRateListDire.get(j) + huskarKoop.get(j));
            
            }
            
            for (int i = 0; i < iloscBohaterow; ++i){
                
            heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - huskarAnti.get(i));
            
            }
                    
              if(direPostacA == false){
             
                direPostacA = true;
                direPostac1.setIcon(icon9);
                direPostac1.setEnabled(true);
                direPostac1.setToolTipText("Huskar");
                direNazwa1 = nazwaHuskar;
                
                
            }
              
              else if(direPostacB == false){
                  
                direPostacB = true;
                direPostac2.setIcon(icon9);
                direPostac2.setEnabled(true);
                direPostac2.setToolTipText("Huskar");
                direNazwa2 = nazwaHuskar;
                
               
              }
              
              else if(direPostacC == false){
                  
                direPostacC = true;
                direPostac3.setIcon(icon9);
                direPostac3.setEnabled(true);
                direPostac3.setToolTipText("Huskar");
                direNazwa3 = nazwaHuskar;
             
                
              }
              
              else if(direPostacD == false){
                  
                direPostacD = true;
                direPostac4.setIcon(icon9);
                direPostac4.setEnabled(true);
                direPostac4.setToolTipText("Huskar");
                direNazwa4 = nazwaHuskar;
           
                
              }
              
              else if(direPostacE == false){
                  
                direPostacE = true;
                direPostac5.setIcon(icon9);
                direPostac5.setEnabled(true);
                direPostac5.setToolTipText("Huskar"); 
                direNazwa5 = nazwaHuskar;
       
                
              }     
        }
        }
        
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
            }          
        }});
         
        }
        
    }
    
    //
    //
    //Usuwanie postaci z druzyny radiant
    //
    //
    
    class RadiantTeam{
    
        public void usunieciePostaciR1(){
            
        radiantPostac1.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent rp1){
            
            if(nazwaAbaddon.equals(radiantNazwa1)){
                
                abaddon.tworzenieAbaddon();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + abaddonAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(radiantNazwa1)){
                
                alchemist.tworzenieAlchemist();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + alchemistAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(radiantNazwa1)){
                
                ancientApparition.tworzenieAncientApparition();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(radiantNazwa1)){
                
                antiMage.tworzenieAntiMage();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + antiMageAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(radiantNazwa1)){
                
                arcWarden.tworzenieArcWarden();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(radiantNazwa1)){
                
                axe.tworzenieAxe();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + axeAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(radiantNazwa1)){
                
                bane.tworzenieBane();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + baneAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(radiantNazwa1)){
                
                batrider.tworzenieBatrider();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + batriderAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(radiantNazwa1)){
                
                beastmaster.tworzenieBeastmaster();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(radiantNazwa1)){
                
                bloodseeker.tworzenieBloodseeker();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(radiantNazwa1)){
                
                bountyHunter.tworzenieBountyHunter();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(radiantNazwa1)){
                
                brewmaster.tworzenieBrewmaster();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(radiantNazwa1)){
                
                bristleback.tworzenieBristleback();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(radiantNazwa1)){
                
                broodmother.tworzenieBroodmother();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(radiantNazwa1)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(radiantNazwa1)){
                
                chaosKnight.tworzenieChaosKnight();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(radiantNazwa1)){
                
                chen.tworzenieChen();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chenAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(radiantNazwa1)){
                
                clinkz.tworzenieClinkz();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clinkzAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(radiantNazwa1)){
                
                clockwerk.tworzenieClockwerk();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(radiantNazwa1)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(radiantNazwa1)){
                
                darkSeer.tworzenieDarkSeer();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(radiantNazwa1)){
                
                dazzle.tworzenieDazzle();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dazzleAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(radiantNazwa1)){
                
                deathProphet.tworzenieDeathProphet();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(radiantNazwa1)){
                
                disruptor.tworzenieDisruptor();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + disruptorAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(radiantNazwa1)){
                
                doom.tworzenieDoom();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + doomAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(radiantNazwa1)){
                
                drowRanger.tworzenieDrowRanger();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(radiantNazwa1)){
                
                earthSpirit.tworzenieEarthSpirit();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(radiantNazwa1)){
                
                es.tworzenieEarthShaker();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + eSAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(radiantNazwa1)){
                
                elderTitan.tworzenieElderTitan();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(radiantNazwa1)){
                
                emberSpirit.tworzenieEmberSpirit();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(radiantNazwa1)){
                
                enchantress.tworzenieEnchantress();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enchantressAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(radiantNazwa1)){
                
                enigma.tworzenieEnigma();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enigmaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(radiantNazwa1)){
                
                voidB.tworzenieVoidB();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + voidAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(radiantNazwa1)){
                
                gyrocopter.tworzenieGyrocopter();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(radiantNazwa1)){
                
                huskar.tworzenieHuskar();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + huskarAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(radiantNazwa1)){
                
                invoker.tworzenieInvoker();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + invokerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(radiantNazwa1)){
                
                io.tworzenieIo();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ioAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(radiantNazwa1)){
                
                jakiro.tworzenieJakiro();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + jakiroAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(radiantNazwa1)){
                
                juggernaut.tworzenieJuggernaut();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + juggernautAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(radiantNazwa1)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(radiantNazwa1)){
                
                kunkka.tworzenieKunkka();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(radiantNazwa1)){
                
                legionCommander.tworzenieLegionCommander();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(radiantNazwa1)){
                
                leshrac.tworzenieLeshrac();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + leshracAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(radiantNazwa1)){
                
                lich.tworzenieLich();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lichAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(radiantNazwa1)){
                
                lifeStealer.tworzenieLifeStealer();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(radiantNazwa1)){
                
                lina.tworzenieLina();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + linaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(radiantNazwa1)){
                
                lion.tworzenieLion();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lionAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(radiantNazwa1)){
                
                loneDruid.tworzenieLoneDruid();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(radiantNazwa1)){
                
                luna.tworzenieLuna();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lunaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(radiantNazwa1)){
                
                lycan.tworzenieLycan();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lycanAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(radiantNazwa1)){
                
                magnus.tworzenieMagnus();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + magnusAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(radiantNazwa1)){
                
                medusa.tworzenieMedusa();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + medusaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(radiantNazwa1)){
                
                meepo.tworzenieMeepo();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + meepoAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(radiantNazwa1)){
                
                mirana.tworzenieMirana();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + miranaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(radiantNazwa1)){
                
                morphling.tworzenieMorphling();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + morphlingAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(radiantNazwa1)){
                
                nagaSiren.tworzenieNagaSiren();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(radiantNazwa1)){
                
                naturesProphet.tworzenieNaturesProphet();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(radiantNazwa1)){
                
                necrophos.tworzenieNecrophos();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + necrophosAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(radiantNazwa1)){
                
                nightStalker.tworzenieNightStalker();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(radiantNazwa1)){
                
                nyxAssassin.tworzenieNyxAssassin();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(radiantNazwa1)){
                
                ogreMagi.tworzenieOgreMagi();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(radiantNazwa1)){
                
                oracle.tworzenieOracle();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + oracleAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(radiantNazwa1)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(radiantNazwa1)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(radiantNazwa1)){
                
                phantomLancer.tworzeniePhantomLancer();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(radiantNazwa1)){
                
                phoenix.tworzeniePhoenix();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phoenixAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(radiantNazwa1)){
                
                puck.tworzeniePuck();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + puckAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(radiantNazwa1)){
                
                pudge.tworzeniePudge();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pudgeAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(radiantNazwa1)){
                
                pugna.tworzeniePugna();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pugnaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(radiantNazwa1)){
                
                queenOfPain.tworzenieQueenOfPain();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(radiantNazwa1)){
                
                razor.tworzenieRazor();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + razorAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(radiantNazwa1)){
                
                riki.tworzenieRiki();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rikiAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(radiantNazwa1)){
                
                rubick.tworzenieRubick();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rubickAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(radiantNazwa1)){
                
                sandKing.tworzenieSandKing();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sandKingAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(radiantNazwa1)){
                
                shadowDemon.tworzenieShadowDemon();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(radiantNazwa1)){
                
                shadowFiend.tworzenieShadowFiend();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(radiantNazwa1)){
                
                shadowShaman.tworzenieShadowShaman();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(radiantNazwa1)){
                
                silencer.tworzenieSilencer();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + silencerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(radiantNazwa1)){
                
                skywrathMage.tworzenieSkywrathMage();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(radiantNazwa1)){
                
                slardar.tworzenieSlardar();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slardarAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(radiantNazwa1)){
                
                slark.tworzenieSlark();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slarkAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(radiantNazwa1)){
                
                sniper.tworzenieSniper();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sniperAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(radiantNazwa1)){
                
                spectre.tworzenieSpectre();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spectreAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(radiantNazwa1)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(radiantNazwa1)){
                
                stormSpirit.tworzenieStormSpirit();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(radiantNazwa1)){
                
                techies.tworzenieTechies();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + techiesAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(radiantNazwa1)){
                
                templarAssassin.tworzenieTemplarAssassin();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(radiantNazwa1)){
                
                terrorblade.tworzenieTerrorblade();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(radiantNazwa1)){
                
                tidehunter.tworzenieTidehunter();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(radiantNazwa1)){
                
                timbersaw.tworzenieTimbersaw();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + timbersawAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(radiantNazwa1)){
                
                tinker.tworzenieTinker();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinkerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(radiantNazwa1)){
                
                treantProtector.tworzenieTreantProtector();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(radiantNazwa1)){
                
                trollWarlord.tworzenieTrollWarlord();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(radiantNazwa1)){
                
                tusk.tworzenieTusk();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tuskAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(radiantNazwa1)){
                
                undying.tworzenieUndying();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + undyingAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(radiantNazwa1)){
                
                ursa.tworzenieUrsa();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ursaAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(radiantNazwa1)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(radiantNazwa1)){
                
                venomancer.tworzenieVenomancer();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + venomancerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(radiantNazwa1)){
                
                viper.tworzenieViper();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + viperAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(radiantNazwa1)){
                
                visage.tworzenieVisage();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + visageAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(radiantNazwa1)){
                
                warlock.tworzenieWarlock();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + warlockAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(radiantNazwa1)){
                
                weaver.tworzenieWeaver();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + weaverAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(radiantNazwa1)){
                
                windranger.tworzenieWindranger();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + windrangerAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(radiantNazwa1)){
                
                winterWyvern.tworzenieWinterWyvern();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(radiantNazwa1)){
                
                witchDoctor.tworzenieWitchDoctor();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(radiantNazwa1)){
                
                wraithKing.tworzenieWraithKing();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(radiantNazwa1)){
                
                zeus.tworzenieZeus();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + zeusAnti.get(j));
                
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(radiantNazwa1)){
                
                sven.tworzenieSven();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + svenAnti.get(j));
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(radiantNazwa1)){
                
                tiny.tworzenieTiny();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinyAnti.get(j));
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(radiantNazwa1)){
                
                dragonKnight.tworzenieDragonKnight();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dKAnti.get(j));
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(radiantNazwa1)){
                
                omni.tworzenieOmni();
                radiantPostac1.tworzenieRadiantPostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + omniKnightAnti.get(j));
                
                }
                
                rH1 = 0;
                radiantNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent rp1) {
            
                radiantPostac1.setRolloverIcon(iconRU);
                radiantPostac1.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciR2(){
            
        radiantPostac2.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent rp2){
            
            if(nazwaAbaddon.equals(radiantNazwa2)){
                
                abaddon.tworzenieAbaddon();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + abaddonAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(radiantNazwa2)){
                
                alchemist.tworzenieAlchemist();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + alchemistAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(radiantNazwa2)){
                
                ancientApparition.tworzenieAncientApparition();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(radiantNazwa2)){
                
                antiMage.tworzenieAntiMage();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + antiMageAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(radiantNazwa2)){
                
                arcWarden.tworzenieArcWarden();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(radiantNazwa2)){
                
                axe.tworzenieAxe();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + axeAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(radiantNazwa2)){
                
                bane.tworzenieBane();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + baneAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(radiantNazwa2)){
                
                batrider.tworzenieBatrider();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + batriderAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(radiantNazwa2)){
                
                beastmaster.tworzenieBeastmaster();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(radiantNazwa2)){
                
                bloodseeker.tworzenieBloodseeker();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(radiantNazwa2)){
                
                bountyHunter.tworzenieBountyHunter();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(radiantNazwa2)){
                
                brewmaster.tworzenieBrewmaster();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(radiantNazwa2)){
                
                bristleback.tworzenieBristleback();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(radiantNazwa2)){
                
                broodmother.tworzenieBroodmother();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(radiantNazwa2)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(radiantNazwa2)){
                
                chaosKnight.tworzenieChaosKnight();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(radiantNazwa2)){
                
                chen.tworzenieChen();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chenAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(radiantNazwa2)){
                
                clinkz.tworzenieClinkz();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clinkzAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(radiantNazwa2)){
                
                clockwerk.tworzenieClockwerk();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(radiantNazwa2)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(radiantNazwa2)){
                
                darkSeer.tworzenieDarkSeer();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(radiantNazwa2)){
                
                dazzle.tworzenieDazzle();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dazzleAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(radiantNazwa2)){
                
                deathProphet.tworzenieDeathProphet();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(radiantNazwa2)){
                
                disruptor.tworzenieDisruptor();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + disruptorAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(radiantNazwa2)){
                
                doom.tworzenieDoom();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + doomAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(radiantNazwa2)){
                
                drowRanger.tworzenieDrowRanger();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(radiantNazwa2)){
                
                earthSpirit.tworzenieEarthSpirit();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(radiantNazwa2)){
                
                es.tworzenieEarthShaker();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + eSAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(radiantNazwa2)){
                
                elderTitan.tworzenieElderTitan();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(radiantNazwa2)){
                
                emberSpirit.tworzenieEmberSpirit();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(radiantNazwa2)){
                
                enchantress.tworzenieEnchantress();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enchantressAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(radiantNazwa2)){
                
                enigma.tworzenieEnigma();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enigmaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(radiantNazwa2)){
                
                voidB.tworzenieVoidB();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + voidAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(radiantNazwa2)){
                
                gyrocopter.tworzenieGyrocopter();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(radiantNazwa2)){
                
                huskar.tworzenieHuskar();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + huskarAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
             if(nazwaInvoker.equals(radiantNazwa2)){
                
                invoker.tworzenieInvoker();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + invokerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(radiantNazwa2)){
                
                io.tworzenieIo();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ioAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(radiantNazwa2)){
                
                jakiro.tworzenieJakiro();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + jakiroAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(radiantNazwa2)){
                
                juggernaut.tworzenieJuggernaut();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + juggernautAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(radiantNazwa2)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(radiantNazwa2)){
                
                kunkka.tworzenieKunkka();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(radiantNazwa2)){
                
                legionCommander.tworzenieLegionCommander();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(radiantNazwa2)){
                
                leshrac.tworzenieLeshrac();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + leshracAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(radiantNazwa2)){
                
                lich.tworzenieLich();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lichAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(radiantNazwa2)){
                
                lifeStealer.tworzenieLifeStealer();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(radiantNazwa2)){
                
                lina.tworzenieLina();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + linaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(radiantNazwa2)){
                
                lion.tworzenieLion();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lionAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(radiantNazwa2)){
                
                loneDruid.tworzenieLoneDruid();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(radiantNazwa2)){
                
                luna.tworzenieLuna();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lunaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(radiantNazwa2)){
                
                lycan.tworzenieLycan();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lycanAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(radiantNazwa2)){
                
                magnus.tworzenieMagnus();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + magnusAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(radiantNazwa2)){
                
                medusa.tworzenieMedusa();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + medusaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(radiantNazwa2)){
                
                meepo.tworzenieMeepo();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + meepoAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(radiantNazwa2)){
                
                mirana.tworzenieMirana();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + miranaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(radiantNazwa2)){
                
                morphling.tworzenieMorphling();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + morphlingAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(radiantNazwa2)){
                
                nagaSiren.tworzenieNagaSiren();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(radiantNazwa2)){
                
                naturesProphet.tworzenieNaturesProphet();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(radiantNazwa2)){
                
                necrophos.tworzenieNecrophos();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + necrophosAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(radiantNazwa2)){
                
                nightStalker.tworzenieNightStalker();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(radiantNazwa2)){
                
                nyxAssassin.tworzenieNyxAssassin();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(radiantNazwa2)){
                
                ogreMagi.tworzenieOgreMagi();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(radiantNazwa2)){
                
                oracle.tworzenieOracle();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + oracleAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(radiantNazwa2)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(radiantNazwa2)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(radiantNazwa2)){
                
                phantomLancer.tworzeniePhantomLancer();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(radiantNazwa2)){
                
                phoenix.tworzeniePhoenix();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phoenixAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(radiantNazwa2)){
                
                puck.tworzeniePuck();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + puckAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(radiantNazwa2)){
                
                pudge.tworzeniePudge();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pudgeAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(radiantNazwa2)){
                
                pugna.tworzeniePugna();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pugnaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(radiantNazwa2)){
                
                queenOfPain.tworzenieQueenOfPain();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(radiantNazwa2)){
                
                razor.tworzenieRazor();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + razorAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(radiantNazwa2)){
                
                riki.tworzenieRiki();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rikiAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(radiantNazwa2)){
                
                rubick.tworzenieRubick();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rubickAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(radiantNazwa2)){
                
                sandKing.tworzenieSandKing();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sandKingAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(radiantNazwa2)){
                
                shadowDemon.tworzenieShadowDemon();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(radiantNazwa2)){
                
                shadowFiend.tworzenieShadowFiend();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(radiantNazwa2)){
                
                shadowShaman.tworzenieShadowShaman();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(radiantNazwa2)){
                
                silencer.tworzenieSilencer();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + silencerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(radiantNazwa2)){
                
                skywrathMage.tworzenieSkywrathMage();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(radiantNazwa2)){
                
                slardar.tworzenieSlardar();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slardarAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(radiantNazwa2)){
                
                slark.tworzenieSlark();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slarkAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(radiantNazwa2)){
                
                sniper.tworzenieSniper();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sniperAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(radiantNazwa2)){
                
                spectre.tworzenieSpectre();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spectreAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(radiantNazwa2)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(radiantNazwa2)){
                
                stormSpirit.tworzenieStormSpirit();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(radiantNazwa2)){
                
                techies.tworzenieTechies();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + techiesAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(radiantNazwa2)){
                
                templarAssassin.tworzenieTemplarAssassin();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(radiantNazwa2)){
                
                terrorblade.tworzenieTerrorblade();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(radiantNazwa2)){
                
                tidehunter.tworzenieTidehunter();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(radiantNazwa2)){
                
                timbersaw.tworzenieTimbersaw();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + timbersawAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(radiantNazwa2)){
                
                tinker.tworzenieTinker();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinkerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(radiantNazwa2)){
                
                treantProtector.tworzenieTreantProtector();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(radiantNazwa2)){
                
                trollWarlord.tworzenieTrollWarlord();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(radiantNazwa2)){
                
                tusk.tworzenieTusk();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tuskAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(radiantNazwa2)){
                
                undying.tworzenieUndying();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + undyingAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(radiantNazwa2)){
                
                ursa.tworzenieUrsa();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ursaAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(radiantNazwa2)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(radiantNazwa2)){
                
                venomancer.tworzenieVenomancer();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + venomancerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(radiantNazwa2)){
                
                viper.tworzenieViper();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + viperAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(radiantNazwa2)){
                
                visage.tworzenieVisage();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + visageAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(radiantNazwa2)){
                
                warlock.tworzenieWarlock();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + warlockAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(radiantNazwa2)){
                
                weaver.tworzenieWeaver();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + weaverAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(radiantNazwa2)){
                
                windranger.tworzenieWindranger();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + windrangerAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(radiantNazwa2)){
                
                winterWyvern.tworzenieWinterWyvern();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(radiantNazwa2)){
                
                witchDoctor.tworzenieWitchDoctor();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(radiantNazwa2)){
                
                wraithKing.tworzenieWraithKing();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(radiantNazwa2)){
                
                zeus.tworzenieZeus();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + zeusAnti.get(j));
                
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(radiantNazwa2)){
                
                sven.tworzenieSven();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + svenAnti.get(j));
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(radiantNazwa2)){
                
                tiny.tworzenieTiny();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinyAnti.get(j));
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(radiantNazwa2)){
                
                dragonKnight.tworzenieDragonKnight();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dKAnti.get(j));
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(radiantNazwa2)){
                
                omni.tworzenieOmni();
                radiantPostac2.tworzenieRadiantPostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + omniKnightAnti.get(j));
                
                }
                
                rH2 = 0;
                radiantNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent rp2) {
            
                radiantPostac2.setRolloverIcon(iconRU);
                radiantPostac2.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciR3(){
            
        radiantPostac3.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent rp3){
            
            if(nazwaAbaddon.equals(radiantNazwa3)){
                
                abaddon.tworzenieAbaddon();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + abaddonAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(radiantNazwa3)){
                
                alchemist.tworzenieAlchemist();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + alchemistAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(radiantNazwa3)){
                
                ancientApparition.tworzenieAncientApparition();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(radiantNazwa3)){
                
                antiMage.tworzenieAntiMage();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + antiMageAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(radiantNazwa3)){
                
                arcWarden.tworzenieArcWarden();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(radiantNazwa3)){
                
                axe.tworzenieAxe();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + axeAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(radiantNazwa3)){
                
                bane.tworzenieBane();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + baneAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(radiantNazwa3)){
                
                batrider.tworzenieBatrider();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + batriderAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(radiantNazwa3)){
                
                beastmaster.tworzenieBeastmaster();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(radiantNazwa3)){
                
                bloodseeker.tworzenieBloodseeker();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(radiantNazwa3)){
                
                bountyHunter.tworzenieBountyHunter();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(radiantNazwa3)){
                
                brewmaster.tworzenieBrewmaster();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(radiantNazwa3)){
                
                bristleback.tworzenieBristleback();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(radiantNazwa3)){
                
                broodmother.tworzenieBroodmother();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(radiantNazwa3)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(radiantNazwa3)){
                
                chaosKnight.tworzenieChaosKnight();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(radiantNazwa3)){
                
                chen.tworzenieChen();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chenAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(radiantNazwa3)){
                
                clinkz.tworzenieClinkz();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clinkzAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(radiantNazwa3)){
                
                clockwerk.tworzenieClockwerk();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(radiantNazwa3)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(radiantNazwa3)){
                
                darkSeer.tworzenieDarkSeer();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(radiantNazwa3)){
                
                dazzle.tworzenieDazzle();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dazzleAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(radiantNazwa3)){
                
                deathProphet.tworzenieDeathProphet();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(radiantNazwa3)){
                
                disruptor.tworzenieDisruptor();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + disruptorAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(radiantNazwa3)){
                
                doom.tworzenieDoom();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + doomAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(radiantNazwa3)){
                
                drowRanger.tworzenieDrowRanger();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(radiantNazwa3)){
                
                earthSpirit.tworzenieEarthSpirit();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(radiantNazwa3)){
                
                es.tworzenieEarthShaker();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + eSAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(radiantNazwa3)){
                
                elderTitan.tworzenieElderTitan();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(radiantNazwa3)){
                
                emberSpirit.tworzenieEmberSpirit();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(radiantNazwa3)){
                
                enchantress.tworzenieEnchantress();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enchantressAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(radiantNazwa3)){
                
                enigma.tworzenieEnigma();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enigmaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(radiantNazwa3)){
                
                voidB.tworzenieVoidB();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + voidAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(radiantNazwa3)){
                
                gyrocopter.tworzenieGyrocopter();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(radiantNazwa3)){
                
                huskar.tworzenieHuskar();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + huskarAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(radiantNazwa3)){
                
                invoker.tworzenieInvoker();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + invokerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(radiantNazwa3)){
                
                io.tworzenieIo();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ioAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(radiantNazwa3)){
                
                jakiro.tworzenieJakiro();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + jakiroAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(radiantNazwa3)){
                
                juggernaut.tworzenieJuggernaut();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + juggernautAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(radiantNazwa3)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(radiantNazwa3)){
                
                kunkka.tworzenieKunkka();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(radiantNazwa3)){
                
                legionCommander.tworzenieLegionCommander();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(radiantNazwa3)){
                
                leshrac.tworzenieLeshrac();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + leshracAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(radiantNazwa3)){
                
                lich.tworzenieLich();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lichAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(radiantNazwa3)){
                
                lifeStealer.tworzenieLifeStealer();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(radiantNazwa3)){
                
                lina.tworzenieLina();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + linaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(radiantNazwa3)){
                
                lion.tworzenieLion();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lionAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(radiantNazwa3)){
                
                loneDruid.tworzenieLoneDruid();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(radiantNazwa3)){
                
                luna.tworzenieLuna();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lunaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(radiantNazwa3)){
                
                lycan.tworzenieLycan();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lycanAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(radiantNazwa3)){
                
                magnus.tworzenieMagnus();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + magnusAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(radiantNazwa3)){
                
                medusa.tworzenieMedusa();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + medusaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(radiantNazwa3)){
                
                meepo.tworzenieMeepo();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + meepoAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(radiantNazwa3)){
                
                mirana.tworzenieMirana();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + miranaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(radiantNazwa3)){
                
                morphling.tworzenieMorphling();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + morphlingAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(radiantNazwa3)){
                
                nagaSiren.tworzenieNagaSiren();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(radiantNazwa3)){
                
                naturesProphet.tworzenieNaturesProphet();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(radiantNazwa3)){
                
                necrophos.tworzenieNecrophos();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + necrophosAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(radiantNazwa3)){
                
                nightStalker.tworzenieNightStalker();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(radiantNazwa3)){
                
                nyxAssassin.tworzenieNyxAssassin();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(radiantNazwa3)){
                
                ogreMagi.tworzenieOgreMagi();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(radiantNazwa3)){
                
                oracle.tworzenieOracle();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + oracleAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(radiantNazwa3)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(radiantNazwa3)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(radiantNazwa3)){
                
                phantomLancer.tworzeniePhantomLancer();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(radiantNazwa3)){
                
                phoenix.tworzeniePhoenix();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phoenixAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(radiantNazwa3)){
                
                puck.tworzeniePuck();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + puckAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(radiantNazwa3)){
                
                pudge.tworzeniePudge();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pudgeAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(radiantNazwa3)){
                
                pugna.tworzeniePugna();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pugnaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(radiantNazwa3)){
                
                queenOfPain.tworzenieQueenOfPain();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(radiantNazwa3)){
                
                razor.tworzenieRazor();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + razorAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(radiantNazwa3)){
                
                riki.tworzenieRiki();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rikiAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(radiantNazwa3)){
                
                rubick.tworzenieRubick();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rubickAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(radiantNazwa3)){
                
                sandKing.tworzenieSandKing();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sandKingAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(radiantNazwa3)){
                
                shadowDemon.tworzenieShadowDemon();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(radiantNazwa3)){
                
                shadowFiend.tworzenieShadowFiend();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(radiantNazwa3)){
                
                shadowShaman.tworzenieShadowShaman();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(radiantNazwa3)){
                
                silencer.tworzenieSilencer();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + silencerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(radiantNazwa3)){
                
                skywrathMage.tworzenieSkywrathMage();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(radiantNazwa3)){
                
                slardar.tworzenieSlardar();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slardarAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(radiantNazwa3)){
                
                slark.tworzenieSlark();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slarkAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(radiantNazwa3)){
                
                sniper.tworzenieSniper();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sniperAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(radiantNazwa3)){
                
                spectre.tworzenieSpectre();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spectreAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(radiantNazwa3)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(radiantNazwa3)){
                
                stormSpirit.tworzenieStormSpirit();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(radiantNazwa3)){
                
                techies.tworzenieTechies();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + techiesAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(radiantNazwa3)){
                
                templarAssassin.tworzenieTemplarAssassin();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(radiantNazwa3)){
                
                terrorblade.tworzenieTerrorblade();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(radiantNazwa3)){
                
                tidehunter.tworzenieTidehunter();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(radiantNazwa3)){
                
                timbersaw.tworzenieTimbersaw();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + timbersawAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(radiantNazwa3)){
                
                tinker.tworzenieTinker();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinkerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(radiantNazwa3)){
                
                treantProtector.tworzenieTreantProtector();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(radiantNazwa3)){
                
                trollWarlord.tworzenieTrollWarlord();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(radiantNazwa3)){
                
                tusk.tworzenieTusk();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tuskAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(radiantNazwa3)){
                
                undying.tworzenieUndying();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + undyingAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(radiantNazwa3)){
                
                ursa.tworzenieUrsa();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ursaAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(radiantNazwa3)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(radiantNazwa3)){
                
                venomancer.tworzenieVenomancer();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + venomancerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(radiantNazwa3)){
                
                viper.tworzenieViper();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + viperAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(radiantNazwa3)){
                
                visage.tworzenieVisage();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + visageAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(radiantNazwa3)){
                
                warlock.tworzenieWarlock();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + warlockAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(radiantNazwa3)){
                
                weaver.tworzenieWeaver();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + weaverAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(radiantNazwa3)){
                
                windranger.tworzenieWindranger();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + windrangerAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(radiantNazwa3)){
                
                winterWyvern.tworzenieWinterWyvern();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(radiantNazwa3)){
                
                witchDoctor.tworzenieWitchDoctor();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(radiantNazwa3)){
                
                wraithKing.tworzenieWraithKing();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(radiantNazwa3)){
                
                zeus.tworzenieZeus();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + zeusAnti.get(j));
                
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(radiantNazwa3)){
                
                sven.tworzenieSven();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + svenAnti.get(j));
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(radiantNazwa3)){
                
                tiny.tworzenieTiny();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinyAnti.get(j));
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(radiantNazwa3)){
                
                dragonKnight.tworzenieDragonKnight();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dKAnti.get(j));
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(radiantNazwa3)){
                
                omni.tworzenieOmni();
                radiantPostac3.tworzenieRadiantPostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + omniKnightAnti.get(j));
                
                }
                
                rH3 = 0;
                radiantNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent rp3) {
            
                radiantPostac3.setRolloverIcon(iconRU);
                radiantPostac3.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciR4(){
            
        radiantPostac4.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent rp4){
            
            if(nazwaAbaddon.equals(radiantNazwa4)){
                
                abaddon.tworzenieAbaddon();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + abaddonAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(radiantNazwa4)){
                
                alchemist.tworzenieAlchemist();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + alchemistAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(radiantNazwa4)){
                
                ancientApparition.tworzenieAncientApparition();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(radiantNazwa4)){
                
                antiMage.tworzenieAntiMage();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + antiMageAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(radiantNazwa4)){
                
                arcWarden.tworzenieArcWarden();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(radiantNazwa4)){
                
                axe.tworzenieAxe();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + axeAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(radiantNazwa4)){
                
                bane.tworzenieBane();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + baneAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(radiantNazwa4)){
                
                batrider.tworzenieBatrider();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + batriderAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(radiantNazwa4)){
                
                beastmaster.tworzenieBeastmaster();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(radiantNazwa4)){
                
                bloodseeker.tworzenieBloodseeker();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(radiantNazwa4)){
                
                bountyHunter.tworzenieBountyHunter();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(radiantNazwa4)){
                
                brewmaster.tworzenieBrewmaster();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(radiantNazwa4)){
                
                bristleback.tworzenieBristleback();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(radiantNazwa4)){
                
                broodmother.tworzenieBroodmother();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(radiantNazwa4)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(radiantNazwa4)){
                
                chaosKnight.tworzenieChaosKnight();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(radiantNazwa4)){
                
                chen.tworzenieChen();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chenAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(radiantNazwa4)){
                
                clinkz.tworzenieClinkz();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clinkzAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(radiantNazwa4)){
                
                clockwerk.tworzenieClockwerk();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(radiantNazwa4)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(radiantNazwa4)){
                
                darkSeer.tworzenieDarkSeer();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(radiantNazwa4)){
                
                dazzle.tworzenieDazzle();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dazzleAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(radiantNazwa4)){
                
                deathProphet.tworzenieDeathProphet();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(radiantNazwa4)){
                
                disruptor.tworzenieDisruptor();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + disruptorAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(radiantNazwa4)){
                
                doom.tworzenieDoom();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + doomAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(radiantNazwa4)){
                
                drowRanger.tworzenieDrowRanger();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(radiantNazwa4)){
                
                earthSpirit.tworzenieEarthSpirit();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(radiantNazwa4)){
                
                es.tworzenieEarthShaker();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + eSAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(radiantNazwa4)){
                
                elderTitan.tworzenieElderTitan();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(radiantNazwa4)){
                
                emberSpirit.tworzenieEmberSpirit();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(radiantNazwa4)){
                
                enchantress.tworzenieEnchantress();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enchantressAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(radiantNazwa4)){
                
                enigma.tworzenieEnigma();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enigmaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(radiantNazwa4)){
                
                voidB.tworzenieVoidB();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + voidAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(radiantNazwa4)){
                
                gyrocopter.tworzenieGyrocopter();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(radiantNazwa4)){
                
                huskar.tworzenieHuskar();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + huskarAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(radiantNazwa4)){
                
                invoker.tworzenieInvoker();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + invokerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(radiantNazwa4)){
                
                io.tworzenieIo();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ioAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(radiantNazwa4)){
                
                jakiro.tworzenieJakiro();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + jakiroAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(radiantNazwa4)){
                
                juggernaut.tworzenieJuggernaut();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + juggernautAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(radiantNazwa4)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(radiantNazwa4)){
                
                kunkka.tworzenieKunkka();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(radiantNazwa4)){
                
                legionCommander.tworzenieLegionCommander();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(radiantNazwa4)){
                
                leshrac.tworzenieLeshrac();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + leshracAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(radiantNazwa4)){
                
                lich.tworzenieLich();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lichAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(radiantNazwa4)){
                
                lifeStealer.tworzenieLifeStealer();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(radiantNazwa4)){
                
                lina.tworzenieLina();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + linaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(radiantNazwa4)){
                
                lion.tworzenieLion();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lionAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(radiantNazwa4)){
                
                loneDruid.tworzenieLoneDruid();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(radiantNazwa4)){
                
                luna.tworzenieLuna();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lunaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(radiantNazwa4)){
                
                lycan.tworzenieLycan();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lycanAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(radiantNazwa4)){
                
                magnus.tworzenieMagnus();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + magnusAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(radiantNazwa4)){
                
                medusa.tworzenieMedusa();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + medusaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(radiantNazwa4)){
                
                meepo.tworzenieMeepo();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + meepoAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(radiantNazwa4)){
                
                mirana.tworzenieMirana();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + miranaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(radiantNazwa4)){
                
                morphling.tworzenieMorphling();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + morphlingAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(radiantNazwa4)){
                
                nagaSiren.tworzenieNagaSiren();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(radiantNazwa4)){
                
                naturesProphet.tworzenieNaturesProphet();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(radiantNazwa4)){
                
                necrophos.tworzenieNecrophos();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + necrophosAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(radiantNazwa4)){
                
                nightStalker.tworzenieNightStalker();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(radiantNazwa4)){
                
                nyxAssassin.tworzenieNyxAssassin();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(radiantNazwa4)){
                
                ogreMagi.tworzenieOgreMagi();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(radiantNazwa4)){
                
                oracle.tworzenieOracle();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + oracleAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(radiantNazwa4)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(radiantNazwa4)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(radiantNazwa4)){
                
                phantomLancer.tworzeniePhantomLancer();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(radiantNazwa4)){
                
                phoenix.tworzeniePhoenix();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phoenixAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(radiantNazwa4)){
                
                puck.tworzeniePuck();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + puckAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(radiantNazwa4)){
                
                pudge.tworzeniePudge();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pudgeAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(radiantNazwa4)){
                
                pugna.tworzeniePugna();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pugnaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(radiantNazwa4)){
                
                queenOfPain.tworzenieQueenOfPain();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(radiantNazwa4)){
                
                razor.tworzenieRazor();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + razorAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(radiantNazwa4)){
                
                riki.tworzenieRiki();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rikiAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(radiantNazwa4)){
                
                rubick.tworzenieRubick();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rubickAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(radiantNazwa4)){
                
                sandKing.tworzenieSandKing();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sandKingAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(radiantNazwa4)){
                
                shadowDemon.tworzenieShadowDemon();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(radiantNazwa4)){
                
                shadowFiend.tworzenieShadowFiend();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(radiantNazwa4)){
                
                shadowShaman.tworzenieShadowShaman();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(radiantNazwa4)){
                
                silencer.tworzenieSilencer();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + silencerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(radiantNazwa4)){
                
                skywrathMage.tworzenieSkywrathMage();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(radiantNazwa4)){
                
                slardar.tworzenieSlardar();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slardarAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(radiantNazwa4)){
                
                slark.tworzenieSlark();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slarkAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(radiantNazwa4)){
                
                sniper.tworzenieSniper();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sniperAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(radiantNazwa4)){
                
                spectre.tworzenieSpectre();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spectreAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(radiantNazwa4)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(radiantNazwa4)){
                
                stormSpirit.tworzenieStormSpirit();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(radiantNazwa4)){
                
                techies.tworzenieTechies();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + techiesAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(radiantNazwa4)){
                
                templarAssassin.tworzenieTemplarAssassin();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(radiantNazwa4)){
                
                terrorblade.tworzenieTerrorblade();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(radiantNazwa4)){
                
                tidehunter.tworzenieTidehunter();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(radiantNazwa4)){
                
                timbersaw.tworzenieTimbersaw();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + timbersawAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(radiantNazwa4)){
                
                tinker.tworzenieTinker();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinkerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(radiantNazwa4)){
                
                treantProtector.tworzenieTreantProtector();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(radiantNazwa4)){
                
                trollWarlord.tworzenieTrollWarlord();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(radiantNazwa4)){
                
                tusk.tworzenieTusk();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tuskAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(radiantNazwa4)){
                
                undying.tworzenieUndying();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + undyingAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(radiantNazwa4)){
                
                ursa.tworzenieUrsa();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ursaAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(radiantNazwa4)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(radiantNazwa4)){
                
                venomancer.tworzenieVenomancer();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + venomancerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(radiantNazwa4)){
                
                viper.tworzenieViper();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + viperAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(radiantNazwa4)){
                
                visage.tworzenieVisage();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + visageAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(radiantNazwa4)){
                
                warlock.tworzenieWarlock();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + warlockAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(radiantNazwa4)){
                
                weaver.tworzenieWeaver();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + weaverAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(radiantNazwa4)){
                
                windranger.tworzenieWindranger();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + windrangerAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(radiantNazwa4)){
                
                winterWyvern.tworzenieWinterWyvern();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(radiantNazwa4)){
                
                witchDoctor.tworzenieWitchDoctor();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(radiantNazwa4)){
                
                wraithKing.tworzenieWraithKing();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(radiantNazwa4)){
                
                zeus.tworzenieZeus();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + zeusAnti.get(j));
                
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(radiantNazwa4)){
                
                sven.tworzenieSven();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + svenAnti.get(j));
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(radiantNazwa4)){
                
                tiny.tworzenieTiny();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinyAnti.get(j));
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(radiantNazwa4)){
                
                dragonKnight.tworzenieDragonKnight();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dKAnti.get(j));
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(radiantNazwa4)){
                
                omni.tworzenieOmni();
                radiantPostac4.tworzenieRadiantPostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + omniKnightAnti.get(j));
                
                }
                
                rH4 = 0;
                radiantNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent rp4) {
            
                radiantPostac4.setRolloverIcon(iconRU);
                radiantPostac4.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciR5(){
            
        radiantPostac5.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent rp5){
            
            if(nazwaAbaddon.equals(radiantNazwa5)){
                
                abaddon.tworzenieAbaddon();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + abaddonAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(radiantNazwa5)){
                
                alchemist.tworzenieAlchemist();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + alchemistAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(radiantNazwa5)){
                
                ancientApparition.tworzenieAncientApparition();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(radiantNazwa5)){
                
                antiMage.tworzenieAntiMage();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + antiMageAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(radiantNazwa5)){
                
                arcWarden.tworzenieArcWarden();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(radiantNazwa5)){
                
                axe.tworzenieAxe();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + axeAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(radiantNazwa5)){
                
                bane.tworzenieBane();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + baneAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(radiantNazwa5)){
                
                batrider.tworzenieBatrider();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + batriderAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(radiantNazwa5)){
                
                beastmaster.tworzenieBeastmaster();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(radiantNazwa5)){
                
                bloodseeker.tworzenieBloodseeker();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(radiantNazwa5)){
                
                bountyHunter.tworzenieBountyHunter();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(radiantNazwa5)){
                
                brewmaster.tworzenieBrewmaster();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(radiantNazwa5)){
                
                bristleback.tworzenieBristleback();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(radiantNazwa5)){
                
                broodmother.tworzenieBroodmother();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(radiantNazwa5)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(radiantNazwa5)){
                
                chaosKnight.tworzenieChaosKnight();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(radiantNazwa5)){
                
                chen.tworzenieChen();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + chenAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(radiantNazwa5)){
                
                clinkz.tworzenieClinkz();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clinkzAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(radiantNazwa5)){
                
                clockwerk.tworzenieClockwerk();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(radiantNazwa5)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(radiantNazwa5)){
                
                darkSeer.tworzenieDarkSeer();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(radiantNazwa5)){
                
                dazzle.tworzenieDazzle();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dazzleAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(radiantNazwa5)){
                
                deathProphet.tworzenieDeathProphet();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(radiantNazwa5)){
                
                disruptor.tworzenieDisruptor();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + disruptorAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(radiantNazwa5)){
                
                doom.tworzenieDoom();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + doomAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(radiantNazwa5)){
                
                drowRanger.tworzenieDrowRanger();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(radiantNazwa5)){
                
                earthSpirit.tworzenieEarthSpirit();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(radiantNazwa5)){
                
                es.tworzenieEarthShaker();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + eSAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(radiantNazwa5)){
                
                elderTitan.tworzenieElderTitan();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(radiantNazwa5)){
                
                emberSpirit.tworzenieEmberSpirit();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(radiantNazwa5)){
                
                enchantress.tworzenieEnchantress();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enchantressAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(radiantNazwa5)){
                
                enigma.tworzenieEnigma();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + enigmaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(radiantNazwa5)){
                
                voidB.tworzenieVoidB();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + voidAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(radiantNazwa5)){
                
                gyrocopter.tworzenieGyrocopter();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(radiantNazwa5)){
                
                huskar.tworzenieHuskar();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + huskarAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(radiantNazwa5)){
                
                invoker.tworzenieInvoker();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + invokerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(radiantNazwa5)){
                
                io.tworzenieIo();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ioAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(radiantNazwa5)){
                
                jakiro.tworzenieJakiro();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + jakiroAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(radiantNazwa5)){
                
                juggernaut.tworzenieJuggernaut();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + juggernautAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(radiantNazwa5)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(radiantNazwa5)){
                
                kunkka.tworzenieKunkka();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(radiantNazwa5)){
                
                legionCommander.tworzenieLegionCommander();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(radiantNazwa5)){
                
                leshrac.tworzenieLeshrac();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + leshracAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(radiantNazwa5)){
                
                lich.tworzenieLich();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lichAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(radiantNazwa5)){
                
                lifeStealer.tworzenieLifeStealer();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(radiantNazwa5)){
                
                lina.tworzenieLina();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + linaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(radiantNazwa5)){
                
                lion.tworzenieLion();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lionAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(radiantNazwa5)){
                
                loneDruid.tworzenieLoneDruid();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(radiantNazwa5)){
                
                luna.tworzenieLuna();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lunaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(radiantNazwa5)){
                
                lycan.tworzenieLycan();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + lycanAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(radiantNazwa5)){
                
                magnus.tworzenieMagnus();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + magnusAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(radiantNazwa5)){
                
                medusa.tworzenieMedusa();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + medusaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(radiantNazwa5)){
                
                meepo.tworzenieMeepo();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + meepoAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(radiantNazwa5)){
                
                mirana.tworzenieMirana();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + miranaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(radiantNazwa5)){
                
                morphling.tworzenieMorphling();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + morphlingAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(radiantNazwa5)){
                
                nagaSiren.tworzenieNagaSiren();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(radiantNazwa5)){
                
                naturesProphet.tworzenieNaturesProphet();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(radiantNazwa5)){
                
                necrophos.tworzenieNecrophos();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + necrophosAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(radiantNazwa5)){
                
                nightStalker.tworzenieNightStalker();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(radiantNazwa5)){
                
                nyxAssassin.tworzenieNyxAssassin();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(radiantNazwa5)){
                
                ogreMagi.tworzenieOgreMagi();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(radiantNazwa5)){
                
                oracle.tworzenieOracle();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + oracleAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(radiantNazwa5)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(radiantNazwa5)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(radiantNazwa5)){
                
                phantomLancer.tworzeniePhantomLancer();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(radiantNazwa5)){
                
                phoenix.tworzeniePhoenix();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + phoenixAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(radiantNazwa5)){
                
                puck.tworzeniePuck();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + puckAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(radiantNazwa5)){
                
                pudge.tworzeniePudge();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pudgeAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(radiantNazwa5)){
                
                pugna.tworzeniePugna();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + pugnaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(radiantNazwa5)){
                
                queenOfPain.tworzenieQueenOfPain();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(radiantNazwa5)){
                
                razor.tworzenieRazor();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + razorAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(radiantNazwa5)){
                
                riki.tworzenieRiki();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rikiAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(radiantNazwa5)){
                
                rubick.tworzenieRubick();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + rubickAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(radiantNazwa5)){
                
                sandKing.tworzenieSandKing();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sandKingAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(radiantNazwa5)){
                
                shadowDemon.tworzenieShadowDemon();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(radiantNazwa5)){
                
                shadowFiend.tworzenieShadowFiend();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(radiantNazwa5)){
                
                shadowShaman.tworzenieShadowShaman();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(radiantNazwa5)){
                
                silencer.tworzenieSilencer();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + silencerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(radiantNazwa5)){
                
                skywrathMage.tworzenieSkywrathMage();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(radiantNazwa5)){
                
                slardar.tworzenieSlardar();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slardarAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(radiantNazwa5)){
                
                slark.tworzenieSlark();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + slarkAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(radiantNazwa5)){
                
                sniper.tworzenieSniper();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + sniperAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(radiantNazwa5)){
                
                spectre.tworzenieSpectre();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spectreAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(radiantNazwa5)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(radiantNazwa5)){
                
                stormSpirit.tworzenieStormSpirit();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(radiantNazwa5)){
                
                techies.tworzenieTechies();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + techiesAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(radiantNazwa5)){
                
                templarAssassin.tworzenieTemplarAssassin();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(radiantNazwa5)){
                
                terrorblade.tworzenieTerrorblade();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(radiantNazwa5)){
                
                tidehunter.tworzenieTidehunter();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(radiantNazwa5)){
                
                timbersaw.tworzenieTimbersaw();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + timbersawAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(radiantNazwa5)){
                
                tinker.tworzenieTinker();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinkerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(radiantNazwa5)){
                
                treantProtector.tworzenieTreantProtector();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(radiantNazwa5)){
                
                trollWarlord.tworzenieTrollWarlord();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(radiantNazwa5)){
                
                tusk.tworzenieTusk();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tuskAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(radiantNazwa5)){
                
                undying.tworzenieUndying();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + undyingAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(radiantNazwa5)){
                
                ursa.tworzenieUrsa();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + ursaAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(radiantNazwa5)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(radiantNazwa5)){
                
                venomancer.tworzenieVenomancer();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + venomancerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(radiantNazwa5)){
                
                viper.tworzenieViper();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + viperAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(radiantNazwa5)){
                
                visage.tworzenieVisage();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + visageAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(radiantNazwa5)){
                
                warlock.tworzenieWarlock();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + warlockAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(radiantNazwa5)){
                
                weaver.tworzenieWeaver();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + weaverAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(radiantNazwa5)){
                
                windranger.tworzenieWindranger();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + windrangerAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(radiantNazwa5)){
                
                winterWyvern.tworzenieWinterWyvern();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(radiantNazwa5)){
                
                witchDoctor.tworzenieWitchDoctor();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(radiantNazwa5)){
                
                wraithKing.tworzenieWraithKing();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(radiantNazwa5)){
                
                zeus.tworzenieZeus();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + zeusAnti.get(j));
                
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(radiantNazwa5)){
                
                sven.tworzenieSven();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + svenAnti.get(j));
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(radiantNazwa5)){
                
                tiny.tworzenieTiny();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + tinyAnti.get(j));
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(radiantNazwa5)){
                
                dragonKnight.tworzenieDragonKnight();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + dKAnti.get(j));
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(radiantNazwa5)){
                
                omni.tworzenieOmni();
                radiantPostac5.tworzenieRadiantPostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListRadiant.set(i, heroWinRateListRadiant.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListDire.set(j, heroWinRateListDire.get(j) + omniKnightAnti.get(j));
                
                }
                
                rH5 = 0;
                radiantNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent rp5) {
            
                radiantPostac5.setRolloverIcon(iconRU);
                radiantPostac5.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
    }
    
    class DireTeam{
    
     public void usunieciePostaciD1(){
            
        direPostac1.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent dp1){
            
            if(nazwaAbaddon.equals(direNazwa1)){
                
                abaddon.tworzenieAbaddon();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + abaddonAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(direNazwa1)){
                
                alchemist.tworzenieAlchemist();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + alchemistAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(direNazwa1)){
                
                ancientApparition.tworzenieAncientApparition();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(direNazwa1)){
                
                antiMage.tworzenieAntiMage();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + antiMageAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(direNazwa1)){
                
                arcWarden.tworzenieArcWarden();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(direNazwa1)){
                
                axe.tworzenieAxe();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + axeAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(direNazwa1)){
                
                bane.tworzenieBane();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + baneAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(direNazwa1)){
                
                batrider.tworzenieBatrider();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + batriderAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(direNazwa1)){
                
                beastmaster.tworzenieBeastmaster();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(direNazwa1)){
                
                bloodseeker.tworzenieBloodseeker();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(direNazwa1)){
                
                bountyHunter.tworzenieBountyHunter();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(direNazwa1)){
                
                brewmaster.tworzenieBrewmaster();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(direNazwa1)){
                
                bristleback.tworzenieBristleback();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(direNazwa1)){
                
                broodmother.tworzenieBroodmother();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(direNazwa1)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(direNazwa1)){
                
                chaosKnight.tworzenieChaosKnight();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(direNazwa1)){
                
                chen.tworzenieChen();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chenAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(direNazwa1)){
                
                clinkz.tworzenieClinkz();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clinkzAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(direNazwa1)){
                
                clockwerk.tworzenieClockwerk();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(direNazwa1)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(direNazwa1)){
                
                darkSeer.tworzenieDarkSeer();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(direNazwa1)){
                
                dazzle.tworzenieDazzle();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dazzleAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(direNazwa1)){
                
                deathProphet.tworzenieDeathProphet();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(direNazwa1)){
                
                disruptor.tworzenieDisruptor();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + disruptorAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(direNazwa1)){
                
                doom.tworzenieDoom();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + doomAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(direNazwa1)){
                
                drowRanger.tworzenieDrowRanger();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(direNazwa1)){
                
                earthSpirit.tworzenieEarthSpirit();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(direNazwa1)){
                
                es.tworzenieEarthShaker();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + eSAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(direNazwa1)){
                
                elderTitan.tworzenieElderTitan();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(direNazwa1)){
                
                emberSpirit.tworzenieEmberSpirit();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(direNazwa1)){
                
                enchantress.tworzenieEnchantress();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enchantressAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(direNazwa1)){
                
                enigma.tworzenieEnigma();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enigmaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(direNazwa1)){
                
                voidB.tworzenieVoidB();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + voidAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(direNazwa1)){
                
                gyrocopter.tworzenieGyrocopter();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(direNazwa1)){
                
                huskar.tworzenieHuskar();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + huskarAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(direNazwa1)){
                
                invoker.tworzenieInvoker();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + invokerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(direNazwa1)){
                
                io.tworzenieIo();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ioAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(direNazwa1)){
                
                jakiro.tworzenieJakiro();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + jakiroAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(direNazwa1)){
                
                juggernaut.tworzenieJuggernaut();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + juggernautAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(direNazwa1)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(direNazwa1)){
                
                kunkka.tworzenieKunkka();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(direNazwa1)){
                
                legionCommander.tworzenieLegionCommander();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(direNazwa1)){
                
                leshrac.tworzenieLeshrac();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + leshracAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(direNazwa1)){
                
                lich.tworzenieLich();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lichAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(direNazwa1)){
                
                lifeStealer.tworzenieLifeStealer();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(direNazwa1)){
                
                lina.tworzenieLina();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + linaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(direNazwa1)){
                
                lion.tworzenieLion();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lionAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(direNazwa1)){
                
                loneDruid.tworzenieLoneDruid();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(direNazwa1)){
                
                luna.tworzenieLuna();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lunaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(direNazwa1)){
                
                lycan.tworzenieLycan();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lycanAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(direNazwa1)){
                
                magnus.tworzenieMagnus();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + magnusAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(direNazwa1)){
                
                medusa.tworzenieMedusa();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + medusaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(direNazwa1)){
                
                meepo.tworzenieMeepo();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + meepoAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(direNazwa1)){
                
                mirana.tworzenieMirana();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + miranaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(direNazwa1)){
                
                morphling.tworzenieMorphling();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + morphlingAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(direNazwa1)){
                
                nagaSiren.tworzenieNagaSiren();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(direNazwa1)){
                
                naturesProphet.tworzenieNaturesProphet();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(direNazwa1)){
                
                necrophos.tworzenieNecrophos();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + necrophosAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(direNazwa1)){
                
                nightStalker.tworzenieNightStalker();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(direNazwa1)){
                
                nyxAssassin.tworzenieNyxAssassin();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(direNazwa1)){
                
                ogreMagi.tworzenieOgreMagi();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(direNazwa1)){
                
                oracle.tworzenieOracle();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + oracleAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(direNazwa1)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(direNazwa1)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(direNazwa1)){
                
                phantomLancer.tworzeniePhantomLancer();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(direNazwa1)){
                
                phoenix.tworzeniePhoenix();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phoenixAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(direNazwa1)){
                
                puck.tworzeniePuck();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + puckAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(direNazwa1)){
                
                pudge.tworzeniePudge();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pudgeAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(direNazwa1)){
                
                pugna.tworzeniePugna();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pugnaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(direNazwa1)){
                
                queenOfPain.tworzenieQueenOfPain();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(direNazwa1)){
                
                razor.tworzenieRazor();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + razorAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(direNazwa1)){
                
                riki.tworzenieRiki();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rikiAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(direNazwa1)){
                
                rubick.tworzenieRubick();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rubickAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(direNazwa1)){
                
                sandKing.tworzenieSandKing();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sandKingAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(direNazwa1)){
                
                shadowDemon.tworzenieShadowDemon();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(direNazwa1)){
                
                shadowFiend.tworzenieShadowFiend();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(direNazwa1)){
                
                shadowShaman.tworzenieShadowShaman();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(direNazwa1)){
                
                silencer.tworzenieSilencer();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + silencerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(direNazwa1)){
                
                skywrathMage.tworzenieSkywrathMage();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(direNazwa1)){
                
                slardar.tworzenieSlardar();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slardarAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(direNazwa1)){
                
                slark.tworzenieSlark();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slarkAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(direNazwa1)){
                
                sniper.tworzenieSniper();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sniperAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(direNazwa1)){
                
                spectre.tworzenieSpectre();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spectreAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(direNazwa1)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(direNazwa1)){
                
                stormSpirit.tworzenieStormSpirit();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(direNazwa1)){
                
                techies.tworzenieTechies();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + techiesAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(direNazwa1)){
                
                templarAssassin.tworzenieTemplarAssassin();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(direNazwa1)){
                
                terrorblade.tworzenieTerrorblade();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(direNazwa1)){
                
                tidehunter.tworzenieTidehunter();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(direNazwa1)){
                
                timbersaw.tworzenieTimbersaw();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + timbersawAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(direNazwa1)){
                
                tinker.tworzenieTinker();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinkerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(direNazwa1)){
                
                treantProtector.tworzenieTreantProtector();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(direNazwa1)){
                
                trollWarlord.tworzenieTrollWarlord();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(direNazwa1)){
                
                tusk.tworzenieTusk();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tuskAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(direNazwa1)){
                
                undying.tworzenieUndying();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + undyingAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(direNazwa1)){
                
                ursa.tworzenieUrsa();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ursaAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(direNazwa1)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(direNazwa1)){
                
                venomancer.tworzenieVenomancer();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + venomancerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(direNazwa1)){
                
                viper.tworzenieViper();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + viperAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(direNazwa1)){
                
                visage.tworzenieVisage();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + visageAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(direNazwa1)){
                
                warlock.tworzenieWarlock();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + warlockAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(direNazwa1)){
                
                weaver.tworzenieWeaver();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + weaverAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(direNazwa1)){
                
                windranger.tworzenieWindranger();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + windrangerAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(direNazwa1)){
                
                winterWyvern.tworzenieWinterWyvern();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(direNazwa1)){
                
                witchDoctor.tworzenieWitchDoctor();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(direNazwa1)){
                
                wraithKing.tworzenieWraithKing();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(direNazwa1)){
                
                zeus.tworzenieZeus();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + zeusAnti.get(j));
                
                
                }
                
                dH1 = 0;
                direNazwa1 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(direNazwa1)){
                
                sven.tworzenieSven();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + svenAnti.get(j));
                
                }
                
                dH1 = 0;
                direNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(direNazwa1)){
                
                tiny.tworzenieTiny();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinyAnti.get(j));
                
                }
                
                dH1 = 0;
                direNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(direNazwa1)){
                
                dragonKnight.tworzenieDragonKnight();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dKAnti.get(j));
                
                }
                
                dH1 = 0;
                direNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(direNazwa1)){
                
                omni.tworzenieOmni();
                direPostac1.tworzenieDirePostac1();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + omniKnightAnti.get(j));
                
                }
                
                dH1 = 0;
                direNazwa1 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent dp1) {
            
                direPostac1.setRolloverIcon(iconDU);
                direPostac1.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciD2(){
            
        direPostac2.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent dp2){
            
            if(nazwaAbaddon.equals(direNazwa2)){
                
                abaddon.tworzenieAbaddon();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + abaddonAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(direNazwa2)){
                
                alchemist.tworzenieAlchemist();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + alchemistAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(direNazwa2)){
                
                ancientApparition.tworzenieAncientApparition();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(direNazwa2)){
                
                antiMage.tworzenieAntiMage();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + antiMageAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(direNazwa2)){
                
                arcWarden.tworzenieArcWarden();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(direNazwa2)){
                
                axe.tworzenieAxe();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + axeAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(direNazwa2)){
                
                bane.tworzenieBane();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + baneAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(direNazwa2)){
                
                batrider.tworzenieBatrider();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + batriderAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(direNazwa2)){
                
                beastmaster.tworzenieBeastmaster();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(direNazwa2)){
                
                bloodseeker.tworzenieBloodseeker();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(direNazwa2)){
                
                bountyHunter.tworzenieBountyHunter();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(direNazwa2)){
                
                brewmaster.tworzenieBrewmaster();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(direNazwa2)){
                
                bristleback.tworzenieBristleback();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(direNazwa2)){
                
                broodmother.tworzenieBroodmother();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(direNazwa2)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(direNazwa2)){
                
                chaosKnight.tworzenieChaosKnight();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(direNazwa2)){
                
                chen.tworzenieChen();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chenAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(direNazwa2)){
                
                clinkz.tworzenieClinkz();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clinkzAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(direNazwa2)){
                
                clockwerk.tworzenieClockwerk();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(direNazwa2)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(direNazwa2)){
                
                darkSeer.tworzenieDarkSeer();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(direNazwa2)){
                
                dazzle.tworzenieDazzle();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dazzleAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(direNazwa2)){
                
                deathProphet.tworzenieDeathProphet();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(direNazwa2)){
                
                disruptor.tworzenieDisruptor();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + disruptorAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(direNazwa2)){
                
                doom.tworzenieDoom();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + doomAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(direNazwa2)){
                
                drowRanger.tworzenieDrowRanger();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(direNazwa2)){
                
                earthSpirit.tworzenieEarthSpirit();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(direNazwa2)){
                
                es.tworzenieEarthShaker();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + eSAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(direNazwa2)){
                
                elderTitan.tworzenieElderTitan();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(direNazwa2)){
                
                emberSpirit.tworzenieEmberSpirit();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(direNazwa2)){
                
                enchantress.tworzenieEnchantress();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enchantressAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(direNazwa2)){
                
                enigma.tworzenieEnigma();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enigmaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(direNazwa2)){
                
                voidB.tworzenieVoidB();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + voidAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(direNazwa2)){
                
                gyrocopter.tworzenieGyrocopter();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(direNazwa2)){
                
                huskar.tworzenieHuskar();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + huskarAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
             if(nazwaInvoker.equals(direNazwa2)){
                
                invoker.tworzenieInvoker();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + invokerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(direNazwa2)){
                
                io.tworzenieIo();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ioAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(direNazwa2)){
                
                jakiro.tworzenieJakiro();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + jakiroAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(direNazwa2)){
                
                juggernaut.tworzenieJuggernaut();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + juggernautAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(direNazwa2)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(direNazwa2)){
                
                kunkka.tworzenieKunkka();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(direNazwa2)){
                
                legionCommander.tworzenieLegionCommander();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(direNazwa2)){
                
                leshrac.tworzenieLeshrac();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + leshracAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(direNazwa2)){
                
                lich.tworzenieLich();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lichAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(direNazwa2)){
                
                lifeStealer.tworzenieLifeStealer();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(direNazwa2)){
                
                lina.tworzenieLina();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + linaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(direNazwa2)){
                
                lion.tworzenieLion();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lionAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(direNazwa2)){
                
                loneDruid.tworzenieLoneDruid();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(direNazwa2)){
                
                luna.tworzenieLuna();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lunaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(direNazwa2)){
                
                lycan.tworzenieLycan();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lycanAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(direNazwa2)){
                
                magnus.tworzenieMagnus();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + magnusAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(direNazwa2)){
                
                medusa.tworzenieMedusa();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + medusaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(direNazwa2)){
                
                meepo.tworzenieMeepo();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + meepoAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(direNazwa2)){
                
                mirana.tworzenieMirana();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + miranaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(direNazwa2)){
                
                morphling.tworzenieMorphling();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + morphlingAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(direNazwa2)){
                
                nagaSiren.tworzenieNagaSiren();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(direNazwa2)){
                
                naturesProphet.tworzenieNaturesProphet();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(direNazwa2)){
                
                necrophos.tworzenieNecrophos();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + necrophosAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(direNazwa2)){
                
                nightStalker.tworzenieNightStalker();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(direNazwa2)){
                
                nyxAssassin.tworzenieNyxAssassin();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(direNazwa2)){
                
                ogreMagi.tworzenieOgreMagi();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(direNazwa2)){
                
                oracle.tworzenieOracle();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + oracleAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(direNazwa2)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(direNazwa2)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(direNazwa2)){
                
                phantomLancer.tworzeniePhantomLancer();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(direNazwa2)){
                
                phoenix.tworzeniePhoenix();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phoenixAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(direNazwa2)){
                
                puck.tworzeniePuck();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + puckAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(direNazwa2)){
                
                pudge.tworzeniePudge();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pudgeAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(direNazwa2)){
                
                pugna.tworzeniePugna();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pugnaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(direNazwa2)){
                
                queenOfPain.tworzenieQueenOfPain();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(direNazwa2)){
                
                razor.tworzenieRazor();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + razorAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(direNazwa2)){
                
                riki.tworzenieRiki();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rikiAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(direNazwa2)){
                
                rubick.tworzenieRubick();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rubickAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(direNazwa2)){
                
                sandKing.tworzenieSandKing();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sandKingAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(direNazwa2)){
                
                shadowDemon.tworzenieShadowDemon();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(direNazwa2)){
                
                shadowFiend.tworzenieShadowFiend();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(direNazwa2)){
                
                shadowShaman.tworzenieShadowShaman();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(direNazwa2)){
                
                silencer.tworzenieSilencer();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + silencerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(direNazwa2)){
                
                skywrathMage.tworzenieSkywrathMage();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(direNazwa2)){
                
                slardar.tworzenieSlardar();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slardarAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(direNazwa2)){
                
                slark.tworzenieSlark();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slarkAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(direNazwa2)){
                
                sniper.tworzenieSniper();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sniperAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(direNazwa2)){
                
                spectre.tworzenieSpectre();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spectreAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(direNazwa2)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(direNazwa2)){
                
                stormSpirit.tworzenieStormSpirit();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(direNazwa2)){
                
                techies.tworzenieTechies();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + techiesAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(direNazwa2)){
                
                templarAssassin.tworzenieTemplarAssassin();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(direNazwa2)){
                
                terrorblade.tworzenieTerrorblade();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(direNazwa2)){
                
                tidehunter.tworzenieTidehunter();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(direNazwa2)){
                
                timbersaw.tworzenieTimbersaw();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + timbersawAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(direNazwa2)){
                
                tinker.tworzenieTinker();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinkerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(direNazwa2)){
                
                treantProtector.tworzenieTreantProtector();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(direNazwa2)){
                
                trollWarlord.tworzenieTrollWarlord();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(direNazwa2)){
                
                tusk.tworzenieTusk();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tuskAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(direNazwa2)){
                
                undying.tworzenieUndying();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + undyingAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(direNazwa2)){
                
                ursa.tworzenieUrsa();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ursaAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(direNazwa2)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(direNazwa2)){
                
                venomancer.tworzenieVenomancer();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + venomancerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(direNazwa2)){
                
                viper.tworzenieViper();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + viperAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(direNazwa2)){
                
                visage.tworzenieVisage();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + visageAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(direNazwa2)){
                
                warlock.tworzenieWarlock();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + warlockAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(direNazwa2)){
                
                weaver.tworzenieWeaver();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + weaverAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(direNazwa2)){
                
                windranger.tworzenieWindranger();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + windrangerAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(direNazwa2)){
                
                winterWyvern.tworzenieWinterWyvern();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(direNazwa2)){
                
                witchDoctor.tworzenieWitchDoctor();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(direNazwa2)){
                
                wraithKing.tworzenieWraithKing();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(direNazwa2)){
                
                zeus.tworzenieZeus();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + zeusAnti.get(j));
                
                
                }
                
                dH2 = 0;
                direNazwa2 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(direNazwa2)){
                
                sven.tworzenieSven();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + svenAnti.get(j));
                
                }
                
                dH2 = 0;
                direNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(direNazwa2)){
                
                tiny.tworzenieTiny();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinyAnti.get(j));
                
                }
                
                dH2 = 0;
                direNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(direNazwa2)){
                
                dragonKnight.tworzenieDragonKnight();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dKAnti.get(j));
                
                }
                
                dH2 = 0;
                direNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(direNazwa2)){
                
                omni.tworzenieOmni();
                direPostac2.tworzenieDirePostac2();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + omniKnightAnti.get(j));
                
                }
                
                dH2 = 0;
                direNazwa2 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent dp2) {
            
                direPostac2.setRolloverIcon(iconDU);
                direPostac2.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciD3(){
            
        direPostac3.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent dp3){
            
            if(nazwaAbaddon.equals(direNazwa3)){
                
                abaddon.tworzenieAbaddon();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + abaddonAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(direNazwa3)){
                
                alchemist.tworzenieAlchemist();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + alchemistAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(direNazwa3)){
                
                ancientApparition.tworzenieAncientApparition();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(direNazwa3)){
                
                antiMage.tworzenieAntiMage();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + antiMageAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(direNazwa3)){
                
                arcWarden.tworzenieArcWarden();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(direNazwa3)){
                
                axe.tworzenieAxe();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + axeAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(direNazwa3)){
                
                bane.tworzenieBane();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + baneAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(direNazwa3)){
                
                batrider.tworzenieBatrider();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + batriderAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(direNazwa3)){
                
                beastmaster.tworzenieBeastmaster();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(direNazwa3)){
                
                bloodseeker.tworzenieBloodseeker();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(direNazwa3)){
                
                bountyHunter.tworzenieBountyHunter();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(direNazwa3)){
                
                brewmaster.tworzenieBrewmaster();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(direNazwa3)){
                
                bristleback.tworzenieBristleback();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(direNazwa3)){
                
                broodmother.tworzenieBroodmother();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(direNazwa3)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(direNazwa3)){
                
                chaosKnight.tworzenieChaosKnight();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(direNazwa3)){
                
                chen.tworzenieChen();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chenAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(direNazwa3)){
                
                clinkz.tworzenieClinkz();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clinkzAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(direNazwa3)){
                
                clockwerk.tworzenieClockwerk();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(direNazwa3)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(direNazwa3)){
                
                darkSeer.tworzenieDarkSeer();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(direNazwa3)){
                
                dazzle.tworzenieDazzle();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dazzleAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(direNazwa3)){
                
                deathProphet.tworzenieDeathProphet();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(direNazwa3)){
                
                disruptor.tworzenieDisruptor();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + disruptorAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(direNazwa3)){
                
                doom.tworzenieDoom();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + doomAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(direNazwa3)){
                
                drowRanger.tworzenieDrowRanger();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(direNazwa3)){
                
                earthSpirit.tworzenieEarthSpirit();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(direNazwa3)){
                
                es.tworzenieEarthShaker();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + eSAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(direNazwa3)){
                
                elderTitan.tworzenieElderTitan();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(direNazwa3)){
                
                emberSpirit.tworzenieEmberSpirit();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(direNazwa3)){
                
                enchantress.tworzenieEnchantress();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enchantressAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(direNazwa3)){
                
                enigma.tworzenieEnigma();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enigmaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(direNazwa3)){
                
                voidB.tworzenieVoidB();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + voidAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(direNazwa3)){
                
                gyrocopter.tworzenieGyrocopter();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(direNazwa3)){
                
                huskar.tworzenieHuskar();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + huskarAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(direNazwa3)){
                
                invoker.tworzenieInvoker();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + invokerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(direNazwa3)){
                
                io.tworzenieIo();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ioAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(direNazwa3)){
                
                jakiro.tworzenieJakiro();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + jakiroAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(direNazwa3)){
                
                juggernaut.tworzenieJuggernaut();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + juggernautAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(direNazwa3)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(direNazwa3)){
                
                kunkka.tworzenieKunkka();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(direNazwa3)){
                
                legionCommander.tworzenieLegionCommander();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(direNazwa3)){
                
                leshrac.tworzenieLeshrac();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + leshracAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(direNazwa3)){
                
                lich.tworzenieLich();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lichAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(direNazwa3)){
                
                lifeStealer.tworzenieLifeStealer();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(direNazwa3)){
                
                lina.tworzenieLina();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + linaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(direNazwa3)){
                
                lion.tworzenieLion();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lionAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(direNazwa3)){
                
                loneDruid.tworzenieLoneDruid();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(direNazwa3)){
                
                luna.tworzenieLuna();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lunaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(direNazwa3)){
                
                lycan.tworzenieLycan();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lycanAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(direNazwa3)){
                
                magnus.tworzenieMagnus();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + magnusAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(direNazwa3)){
                
                medusa.tworzenieMedusa();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + medusaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(direNazwa3)){
                
                meepo.tworzenieMeepo();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + meepoAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(direNazwa3)){
                
                mirana.tworzenieMirana();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + miranaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(direNazwa3)){
                
                morphling.tworzenieMorphling();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + morphlingAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(direNazwa3)){
                
                nagaSiren.tworzenieNagaSiren();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(direNazwa3)){
                
                naturesProphet.tworzenieNaturesProphet();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(direNazwa3)){
                
                necrophos.tworzenieNecrophos();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + necrophosAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(direNazwa3)){
                
                nightStalker.tworzenieNightStalker();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(direNazwa3)){
                
                nyxAssassin.tworzenieNyxAssassin();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(direNazwa3)){
                
                ogreMagi.tworzenieOgreMagi();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(direNazwa3)){
                
                oracle.tworzenieOracle();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + oracleAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(direNazwa3)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(direNazwa3)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(direNazwa3)){
                
                phantomLancer.tworzeniePhantomLancer();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(direNazwa3)){
                
                phoenix.tworzeniePhoenix();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phoenixAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(direNazwa3)){
                
                puck.tworzeniePuck();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + puckAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(direNazwa3)){
                
                pudge.tworzeniePudge();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pudgeAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(direNazwa3)){
                
                pugna.tworzeniePugna();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pugnaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(direNazwa3)){
                
                queenOfPain.tworzenieQueenOfPain();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(direNazwa3)){
                
                razor.tworzenieRazor();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + razorAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(direNazwa3)){
                
                riki.tworzenieRiki();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rikiAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(direNazwa3)){
                
                rubick.tworzenieRubick();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rubickAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(direNazwa3)){
                
                sandKing.tworzenieSandKing();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sandKingAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(direNazwa3)){
                
                shadowDemon.tworzenieShadowDemon();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(direNazwa3)){
                
                shadowFiend.tworzenieShadowFiend();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(direNazwa3)){
                
                shadowShaman.tworzenieShadowShaman();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(direNazwa3)){
                
                silencer.tworzenieSilencer();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + silencerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(direNazwa3)){
                
                skywrathMage.tworzenieSkywrathMage();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(direNazwa3)){
                
                slardar.tworzenieSlardar();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slardarAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(direNazwa3)){
                
                slark.tworzenieSlark();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slarkAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(direNazwa3)){
                
                sniper.tworzenieSniper();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sniperAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(direNazwa3)){
                
                spectre.tworzenieSpectre();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spectreAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(direNazwa3)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(direNazwa3)){
                
                stormSpirit.tworzenieStormSpirit();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(direNazwa3)){
                
                techies.tworzenieTechies();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + techiesAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(direNazwa3)){
                
                templarAssassin.tworzenieTemplarAssassin();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(direNazwa3)){
                
                terrorblade.tworzenieTerrorblade();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(direNazwa3)){
                
                tidehunter.tworzenieTidehunter();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(direNazwa3)){
                
                timbersaw.tworzenieTimbersaw();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + timbersawAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(direNazwa3)){
                
                tinker.tworzenieTinker();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinkerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(direNazwa3)){
                
                treantProtector.tworzenieTreantProtector();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(direNazwa3)){
                
                trollWarlord.tworzenieTrollWarlord();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(direNazwa3)){
                
                tusk.tworzenieTusk();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tuskAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(direNazwa3)){
                
                undying.tworzenieUndying();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + undyingAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(direNazwa3)){
                
                ursa.tworzenieUrsa();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ursaAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(direNazwa3)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(direNazwa3)){
                
                venomancer.tworzenieVenomancer();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + venomancerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(direNazwa3)){
                
                viper.tworzenieViper();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + viperAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(direNazwa3)){
                
                visage.tworzenieVisage();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + visageAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(direNazwa3)){
                
                warlock.tworzenieWarlock();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + warlockAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(direNazwa3)){
                
                weaver.tworzenieWeaver();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + weaverAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(direNazwa3)){
                
                windranger.tworzenieWindranger();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + windrangerAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(direNazwa3)){
                
                winterWyvern.tworzenieWinterWyvern();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(direNazwa3)){
                
                witchDoctor.tworzenieWitchDoctor();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(direNazwa3)){
                
                wraithKing.tworzenieWraithKing();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(direNazwa3)){
                
                zeus.tworzenieZeus();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + zeusAnti.get(j));
                
                
                }
                
                dH3 = 0;
                direNazwa3 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(direNazwa3)){
                
                sven.tworzenieSven();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + svenAnti.get(j));
                
                }
                
                dH3 = 0;
                direNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(direNazwa3)){
                
                tiny.tworzenieTiny();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinyAnti.get(j));
                
                }
                
                dH3 = 0;
                direNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(direNazwa3)){
                
                dragonKnight.tworzenieDragonKnight();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dKAnti.get(j));
                
                }
                
                dH3 = 0;
                direNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(direNazwa3)){
                
                omni.tworzenieOmni();
                direPostac3.tworzenieDirePostac3();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + omniKnightAnti.get(j));
                
                }
                
                dH3 = 0;
                direNazwa3 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent dp3) {
            
                direPostac3.setRolloverIcon(iconDU);
                direPostac3.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciD4(){
            
        direPostac4.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent dp4){
            
            if(nazwaAbaddon.equals(direNazwa4)){
                
                abaddon.tworzenieAbaddon();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + abaddonAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(direNazwa4)){
                
                alchemist.tworzenieAlchemist();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + alchemistAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(direNazwa4)){
                
                ancientApparition.tworzenieAncientApparition();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(direNazwa4)){
                
                antiMage.tworzenieAntiMage();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + antiMageAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(direNazwa4)){
                
                arcWarden.tworzenieArcWarden();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(direNazwa4)){
                
                axe.tworzenieAxe();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + axeAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(direNazwa4)){
                
                bane.tworzenieBane();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + baneAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(direNazwa4)){
                
                batrider.tworzenieBatrider();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + batriderAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(direNazwa4)){
                
                beastmaster.tworzenieBeastmaster();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(direNazwa4)){
                
                bloodseeker.tworzenieBloodseeker();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(direNazwa4)){
                
                bountyHunter.tworzenieBountyHunter();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(direNazwa4)){
                
                brewmaster.tworzenieBrewmaster();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(direNazwa4)){
                
                bristleback.tworzenieBristleback();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(direNazwa4)){
                
                broodmother.tworzenieBroodmother();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(direNazwa4)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(direNazwa4)){
                
                chaosKnight.tworzenieChaosKnight();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(direNazwa4)){
                
                chen.tworzenieChen();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chenAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(direNazwa4)){
                
                clinkz.tworzenieClinkz();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clinkzAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(direNazwa4)){
                
                clockwerk.tworzenieClockwerk();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(direNazwa4)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(direNazwa4)){
                
                darkSeer.tworzenieDarkSeer();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(direNazwa4)){
                
                dazzle.tworzenieDazzle();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dazzleAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(direNazwa4)){
                
                deathProphet.tworzenieDeathProphet();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(direNazwa4)){
                
                disruptor.tworzenieDisruptor();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + disruptorAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(direNazwa4)){
                
                doom.tworzenieDoom();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + doomAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(direNazwa4)){
                
                drowRanger.tworzenieDrowRanger();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(direNazwa4)){
                
                earthSpirit.tworzenieEarthSpirit();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(direNazwa4)){
                
                es.tworzenieEarthShaker();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + eSAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(direNazwa4)){
                
                elderTitan.tworzenieElderTitan();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(direNazwa4)){
                
                emberSpirit.tworzenieEmberSpirit();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(direNazwa4)){
                
                enchantress.tworzenieEnchantress();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enchantressAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(direNazwa4)){
                
                enigma.tworzenieEnigma();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enigmaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(direNazwa4)){
                
                voidB.tworzenieVoidB();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + voidAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(direNazwa4)){
                
                gyrocopter.tworzenieGyrocopter();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(direNazwa4)){
                
                huskar.tworzenieHuskar();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + huskarAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(direNazwa4)){
                
                invoker.tworzenieInvoker();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + invokerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(direNazwa4)){
                
                io.tworzenieIo();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ioAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(direNazwa4)){
                
                jakiro.tworzenieJakiro();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + jakiroAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(direNazwa4)){
                
                juggernaut.tworzenieJuggernaut();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + juggernautAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(direNazwa4)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(direNazwa4)){
                
                kunkka.tworzenieKunkka();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(direNazwa4)){
                
                legionCommander.tworzenieLegionCommander();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(direNazwa4)){
                
                leshrac.tworzenieLeshrac();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + leshracAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(direNazwa4)){
                
                lich.tworzenieLich();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lichAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(direNazwa4)){
                
                lifeStealer.tworzenieLifeStealer();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(direNazwa4)){
                
                lina.tworzenieLina();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + linaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(direNazwa4)){
                
                lion.tworzenieLion();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lionAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(direNazwa4)){
                
                loneDruid.tworzenieLoneDruid();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(direNazwa4)){
                
                luna.tworzenieLuna();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lunaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(direNazwa4)){
                
                lycan.tworzenieLycan();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lycanAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(direNazwa4)){
                
                magnus.tworzenieMagnus();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + magnusAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(direNazwa4)){
                
                medusa.tworzenieMedusa();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + medusaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(direNazwa4)){
                
                meepo.tworzenieMeepo();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + meepoAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(direNazwa4)){
                
                mirana.tworzenieMirana();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + miranaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(direNazwa4)){
                
                morphling.tworzenieMorphling();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + morphlingAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(direNazwa4)){
                
                nagaSiren.tworzenieNagaSiren();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(direNazwa4)){
                
                naturesProphet.tworzenieNaturesProphet();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(direNazwa4)){
                
                necrophos.tworzenieNecrophos();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + necrophosAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(direNazwa4)){
                
                nightStalker.tworzenieNightStalker();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(direNazwa4)){
                
                nyxAssassin.tworzenieNyxAssassin();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(direNazwa4)){
                
                ogreMagi.tworzenieOgreMagi();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(direNazwa4)){
                
                oracle.tworzenieOracle();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + oracleAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(direNazwa4)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(direNazwa4)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(direNazwa4)){
                
                phantomLancer.tworzeniePhantomLancer();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(direNazwa4)){
                
                phoenix.tworzeniePhoenix();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phoenixAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(direNazwa4)){
                
                puck.tworzeniePuck();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + puckAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(direNazwa4)){
                
                pudge.tworzeniePudge();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pudgeAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(direNazwa4)){
                
                pugna.tworzeniePugna();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pugnaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(direNazwa4)){
                
                queenOfPain.tworzenieQueenOfPain();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(direNazwa4)){
                
                razor.tworzenieRazor();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + razorAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(direNazwa4)){
                
                riki.tworzenieRiki();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rikiAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(direNazwa4)){
                
                rubick.tworzenieRubick();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rubickAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(direNazwa4)){
                
                sandKing.tworzenieSandKing();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sandKingAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(direNazwa4)){
                
                shadowDemon.tworzenieShadowDemon();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(direNazwa4)){
                
                shadowFiend.tworzenieShadowFiend();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(direNazwa4)){
                
                shadowShaman.tworzenieShadowShaman();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(direNazwa4)){
                
                silencer.tworzenieSilencer();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + silencerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(direNazwa4)){
                
                skywrathMage.tworzenieSkywrathMage();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(direNazwa4)){
                
                slardar.tworzenieSlardar();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slardarAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(direNazwa4)){
                
                slark.tworzenieSlark();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slarkAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(direNazwa4)){
                
                sniper.tworzenieSniper();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sniperAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(direNazwa4)){
                
                spectre.tworzenieSpectre();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spectreAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(direNazwa4)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(direNazwa4)){
                
                stormSpirit.tworzenieStormSpirit();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(direNazwa4)){
                
                techies.tworzenieTechies();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + techiesAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(direNazwa4)){
                
                templarAssassin.tworzenieTemplarAssassin();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(direNazwa4)){
                
                terrorblade.tworzenieTerrorblade();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(direNazwa4)){
                
                tidehunter.tworzenieTidehunter();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(direNazwa4)){
                
                timbersaw.tworzenieTimbersaw();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + timbersawAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(direNazwa4)){
                
                tinker.tworzenieTinker();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinkerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(direNazwa4)){
                
                treantProtector.tworzenieTreantProtector();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(direNazwa4)){
                
                trollWarlord.tworzenieTrollWarlord();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(direNazwa4)){
                
                tusk.tworzenieTusk();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tuskAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(direNazwa4)){
                
                undying.tworzenieUndying();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + undyingAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(direNazwa4)){
                
                ursa.tworzenieUrsa();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ursaAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(direNazwa4)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(direNazwa4)){
                
                venomancer.tworzenieVenomancer();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + venomancerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(direNazwa4)){
                
                viper.tworzenieViper();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + viperAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(direNazwa4)){
                
                visage.tworzenieVisage();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + visageAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(direNazwa4)){
                
                warlock.tworzenieWarlock();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + warlockAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(direNazwa4)){
                
                weaver.tworzenieWeaver();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + weaverAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(direNazwa4)){
                
                windranger.tworzenieWindranger();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + windrangerAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(direNazwa4)){
                
                winterWyvern.tworzenieWinterWyvern();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(direNazwa4)){
                
                witchDoctor.tworzenieWitchDoctor();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(direNazwa4)){
                
                wraithKing.tworzenieWraithKing();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(direNazwa4)){
                
                zeus.tworzenieZeus();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + zeusAnti.get(j));
                
                
                }
                
                dH4 = 0;
                direNazwa4 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(direNazwa4)){
                
                sven.tworzenieSven();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + svenAnti.get(j));
                
                }
                
                dH4 = 0;
                direNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(direNazwa4)){
                
                tiny.tworzenieTiny();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinyAnti.get(j));
                
                }
                
                dH4 = 0;
                direNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(direNazwa4)){
                
                dragonKnight.tworzenieDragonKnight();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dKAnti.get(j));
                
                }
                
                dH4 = 0;
                direNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(direNazwa4)){
                
                omni.tworzenieOmni();
                direPostac4.tworzenieDirePostac4();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + omniKnightAnti.get(j));
                
                }
                
                dH4 = 0;
                direNazwa4 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent dp4) {
            
                direPostac4.setRolloverIcon(iconDU);
                direPostac4.setRolloverEnabled(true);
    
        }
        
         });
         
        }
        
        public void usunieciePostaciD5(){
            
        direPostac5.addMouseListener(new MouseAdapter(){
             
        @Override
        public void mousePressed(MouseEvent dp5){
            
            if(nazwaAbaddon.equals(direNazwa5)){
                
                abaddon.tworzenieAbaddon();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - abaddonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + abaddonAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAlchemist.equals(direNazwa5)){
                
                alchemist.tworzenieAlchemist();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - alchemistKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + alchemistAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAncientApparition.equals(direNazwa5)){
                
                ancientApparition.tworzenieAncientApparition();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ancientApparitionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ancientApparitionAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAntiMage.equals(direNazwa5)){
                
                antiMage.tworzenieAntiMage();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - antiMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + antiMageAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaArcWarden.equals(direNazwa5)){
                
                arcWarden.tworzenieArcWarden();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - arcWardenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + arcWardenAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaAxe.equals(direNazwa5)){
                
                axe.tworzenieAxe();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - axeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + axeAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBane.equals(direNazwa5)){
                
                bane.tworzenieBane();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - baneKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + baneAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBatrider.equals(direNazwa5)){
                
                batrider.tworzenieBatrider();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - batriderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + batriderAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBeastmaster.equals(direNazwa5)){
                
                beastmaster.tworzenieBeastmaster();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - beastmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + beastmasterAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBloodseeker.equals(direNazwa5)){
                
                bloodseeker.tworzenieBloodseeker();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bloodseekerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bloodseekerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBountyHunter.equals(direNazwa5)){
                
                bountyHunter.tworzenieBountyHunter();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bountyHunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bountyHunterAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBrewmaster.equals(direNazwa5)){
                
                brewmaster.tworzenieBrewmaster();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - brewmasterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + brewmasterAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBristleback.equals(direNazwa5)){
                
                bristleback.tworzenieBristleback();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - bristlebackKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + bristlebackAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaBroodmother.equals(direNazwa5)){
                
                broodmother.tworzenieBroodmother();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - broodmotherKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + broodmotherAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCentaurWarrunner.equals(direNazwa5)){
                
                centaurWarrunner.tworzenieCentaurWarrunner();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - centaurWarrunnerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + centaurWarrunnerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChaosKnight.equals(direNazwa5)){
                
                chaosKnight.tworzenieChaosKnight();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chaosKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chaosKnightAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaChen.equals(direNazwa5)){
                
                chen.tworzenieChen();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - chenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + chenAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClinkz.equals(direNazwa5)){
                
                clinkz.tworzenieClinkz();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clinkzKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clinkzAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaClockwerk.equals(direNazwa5)){
                
                clockwerk.tworzenieClockwerk();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - clockwerkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + clockwerkAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaCrystalMaiden.equals(direNazwa5)){
                
                crystalMaiden.tworzenieCrystalMaiden();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - crystalMaidenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + crystalMaidenAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDarkSeer.equals(direNazwa5)){
                
                darkSeer.tworzenieDarkSeer();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - darkSeerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + darkSeerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDazzle.equals(direNazwa5)){
                
                dazzle.tworzenieDazzle();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dazzleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dazzleAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDeathProphet.equals(direNazwa5)){
                
                deathProphet.tworzenieDeathProphet();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - deathProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + deathProphetAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDisruptor.equals(direNazwa5)){
                
                disruptor.tworzenieDisruptor();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - disruptorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + disruptorAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDoom.equals(direNazwa5)){
                
                doom.tworzenieDoom();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - doomKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + doomAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaDrowRanger.equals(direNazwa5)){
                
                drowRanger.tworzenieDrowRanger();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - drowRangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + drowRangerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEarthSpirit.equals(direNazwa5)){
                
                earthSpirit.tworzenieEarthSpirit();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - earthSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + earthSpiritAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEs.equals(direNazwa5)){
                
                es.tworzenieEarthShaker();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - eSKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + eSAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaElderTitan.equals(direNazwa5)){
                
                elderTitan.tworzenieElderTitan();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - elderTitanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + elderTitanAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEmberSpirit.equals(direNazwa5)){
                
                emberSpirit.tworzenieEmberSpirit();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - emberSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + emberSpiritAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnchantress.equals(direNazwa5)){
                
                enchantress.tworzenieEnchantress();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enchantressKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enchantressAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaEnigma.equals(direNazwa5)){
                
                enigma.tworzenieEnigma();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - enigmaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + enigmaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVoid.equals(direNazwa5)){
                
                voidB.tworzenieVoidB();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - voidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + voidAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaGyrocopter.equals(direNazwa5)){
                
                gyrocopter.tworzenieGyrocopter();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - gyrocopterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + gyrocopterAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaHuskar.equals(direNazwa5)){
                
                huskar.tworzenieHuskar();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - huskarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + huskarAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaInvoker.equals(direNazwa5)){
                
                invoker.tworzenieInvoker();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - invokerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + invokerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaIo.equals(direNazwa5)){
                
                io.tworzenieIo();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ioKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ioAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJakiro.equals(direNazwa5)){
                
                jakiro.tworzenieJakiro();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - jakiroKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + jakiroAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaJuggernaut.equals(direNazwa5)){
                
                juggernaut.tworzenieJuggernaut();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - juggernautKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + juggernautAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKeeperOfTheLight.equals(direNazwa5)){
                
                keeperOfTheLight.tworzenieKeeperOfTheLight();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - keeperOfTheLightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + keeperOfTheLightAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaKunkka.equals(direNazwa5)){
                
                kunkka.tworzenieKunkka();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - kunkkaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + kunkkaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLegionCommander.equals(direNazwa5)){
                
                legionCommander.tworzenieLegionCommander();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - legionCommanderKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + legionCommanderAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLeshrac.equals(direNazwa5)){
                
                leshrac.tworzenieLeshrac();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - leshracKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + leshracAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLich.equals(direNazwa5)){
                
                lich.tworzenieLich();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lichKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lichAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLifeStealer.equals(direNazwa5)){
                
                lifeStealer.tworzenieLifeStealer();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lifeStealerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lifeStealerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLina.equals(direNazwa5)){
                
                lina.tworzenieLina();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - linaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + linaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLion.equals(direNazwa5)){
                
                lion.tworzenieLion();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lionKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lionAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLoneDruid.equals(direNazwa5)){
                
                loneDruid.tworzenieLoneDruid();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - loneDruidKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + loneDruidAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLuna.equals(direNazwa5)){
                
                luna.tworzenieLuna();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lunaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lunaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaLycan.equals(direNazwa5)){
                
                lycan.tworzenieLycan();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - lycanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + lycanAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMagnus.equals(direNazwa5)){
                
                magnus.tworzenieMagnus();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - magnusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + magnusAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMedusa.equals(direNazwa5)){
                
                medusa.tworzenieMedusa();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - medusaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + medusaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMeepo.equals(direNazwa5)){
                
                meepo.tworzenieMeepo();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - meepoKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + meepoAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMirana.equals(direNazwa5)){
                
                mirana.tworzenieMirana();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - miranaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + miranaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaMorphling.equals(direNazwa5)){
                
                morphling.tworzenieMorphling();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - morphlingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + morphlingAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNagaSiren.equals(direNazwa5)){
                
                nagaSiren.tworzenieNagaSiren();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nagaSirenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nagaSirenAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNaturesProphet.equals(direNazwa5)){
                
                naturesProphet.tworzenieNaturesProphet();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - naturesProphetKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + naturesProphetAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNecrophos.equals(direNazwa5)){
                
                necrophos.tworzenieNecrophos();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - necrophosKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + necrophosAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNightStalker.equals(direNazwa5)){
                
                nightStalker.tworzenieNightStalker();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nightStalkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nightStalkerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaNyxAssassin.equals(direNazwa5)){
                
                nyxAssassin.tworzenieNyxAssassin();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - nyxAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + nyxAssassinAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOgreMagi.equals(direNazwa5)){
                
                ogreMagi.tworzenieOgreMagi();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ogreMagiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ogreMagiAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOracle.equals(direNazwa5)){
                
                oracle.tworzenieOracle();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - oracleKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + oracleAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaOutworldDevourer.equals(direNazwa5)){
                
                outworldDevourer.tworzenieOutworldDevourer();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - outworldDevourerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + outworldDevourerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomAssassin.equals(direNazwa5)){
                
                phantomAssassin.tworzeniePhantomAssassin();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomAssassinAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhantomLancer.equals(direNazwa5)){
                
                phantomLancer.tworzeniePhantomLancer();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phantomLancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phantomLancerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPhoenix.equals(direNazwa5)){
                
                phoenix.tworzeniePhoenix();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - phoenixKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + phoenixAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPuck.equals(direNazwa5)){
                
                puck.tworzeniePuck();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - puckKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + puckAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPudge.equals(direNazwa5)){
                
                pudge.tworzeniePudge();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pudgeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pudgeAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaPugna.equals(direNazwa5)){
                
                pugna.tworzeniePugna();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - pugnaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + pugnaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaQueenOfPain.equals(direNazwa5)){
                
                queenOfPain.tworzenieQueenOfPain();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - queenOfPainKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + queenOfPainAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRazor.equals(direNazwa5)){
                
                razor.tworzenieRazor();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - razorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + razorAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRiki.equals(direNazwa5)){
                
                riki.tworzenieRiki();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rikiKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rikiAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaRubick.equals(direNazwa5)){
                
                rubick.tworzenieRubick();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - rubickKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + rubickAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSandKing.equals(direNazwa5)){
                
                sandKing.tworzenieSandKing();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sandKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sandKingAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowDemon.equals(direNazwa5)){
                
                shadowDemon.tworzenieShadowDemon();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowDemonKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowDemonAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowFiend.equals(direNazwa5)){
                
                shadowFiend.tworzenieShadowFiend();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowFiendKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowFiendAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaShadowShaman.equals(direNazwa5)){
                
                shadowShaman.tworzenieShadowShaman();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - shadowShamanKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + shadowShamanAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSilencer.equals(direNazwa5)){
                
                silencer.tworzenieSilencer();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - silencerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + silencerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSkywrathMage.equals(direNazwa5)){
                
                skywrathMage.tworzenieSkywrathMage();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - skywrathMageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + skywrathMageAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlardar.equals(direNazwa5)){
                
                slardar.tworzenieSlardar();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slardarKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slardarAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSlark.equals(direNazwa5)){
                
                slark.tworzenieSlark();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - slarkKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + slarkAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSniper.equals(direNazwa5)){
                
                sniper.tworzenieSniper();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - sniperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + sniperAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpectre.equals(direNazwa5)){
                
                spectre.tworzenieSpectre();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spectreKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spectreAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSpiritBreaker.equals(direNazwa5)){
                
                spiritBreaker.tworzenieSpiritBreaker();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - spiritBreakerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + spiritBreakerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaStormSpirit.equals(direNazwa5)){
                
                stormSpirit.tworzenieStormSpirit();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - stormSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + stormSpiritAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTechies.equals(direNazwa5)){
                
                techies.tworzenieTechies();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - techiesKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + techiesAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTemplarAssassin.equals(direNazwa5)){
                
                templarAssassin.tworzenieTemplarAssassin();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - templarAssassinKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + templarAssassinAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTerrorblade.equals(direNazwa5)){
                
                terrorblade.tworzenieTerrorblade();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - terrorbladeKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + terrorbladeAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTidehunter.equals(direNazwa5)){
                
                tidehunter.tworzenieTidehunter();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tidehunterKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tidehunterAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTimbersaw.equals(direNazwa5)){
                
                timbersaw.tworzenieTimbersaw();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - timbersawKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + timbersawAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTinker.equals(direNazwa5)){
                
                tinker.tworzenieTinker();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinkerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinkerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTreantProtector.equals(direNazwa5)){
                
                treantProtector.tworzenieTreantProtector();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - treantProtectorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + treantProtectorAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTrollWarlord.equals(direNazwa5)){
                
                trollWarlord.tworzenieTrollWarlord();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - trollWarlordKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + trollWarlordAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaTusk.equals(direNazwa5)){
                
                tusk.tworzenieTusk();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tuskKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tuskAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUndying.equals(direNazwa5)){
                
                undying.tworzenieUndying();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - undyingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + undyingAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaUrsa.equals(direNazwa5)){
                
                ursa.tworzenieUrsa();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - ursaKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + ursaAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVengefulSpirit.equals(direNazwa5)){
                
                vengefulSpirit.tworzenieVengefulSpirit();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - vengefulSpiritKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + vengefulSpiritAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVenomancer.equals(direNazwa5)){
                
                venomancer.tworzenieVenomancer();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - venomancerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + venomancerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaViper.equals(direNazwa5)){
                
                viper.tworzenieViper();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - viperKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + viperAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaVisage.equals(direNazwa5)){
                
                visage.tworzenieVisage();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - visageKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + visageAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWarlock.equals(direNazwa5)){
                
                warlock.tworzenieWarlock();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - warlockKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + warlockAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWeaver.equals(direNazwa5)){
                
                weaver.tworzenieWeaver();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - weaverKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + weaverAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWindranger.equals(direNazwa5)){
                
                windranger.tworzenieWindranger();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - windrangerKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + windrangerAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWinterWyvern.equals(direNazwa5)){
                
                winterWyvern.tworzenieWinterWyvern();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - winterWyvernKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + winterWyvernAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWitchDoctor.equals(direNazwa5)){
                
                witchDoctor.tworzenieWitchDoctor();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - witchDoctorKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + witchDoctorAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaWraithKing.equals(direNazwa5)){
                
                wraithKing.tworzenieWraithKing();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - wraithKingKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + wraithKingAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaZeus.equals(direNazwa5)){
                
                zeus.tworzenieZeus();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - zeusKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + zeusAnti.get(j));
                
                
                }
                
                dH5 = 0;
                direNazwa5 = "";   
                bestToPickAvoidList.sortowanieListyRadiantDire();
            
                
            }
            
            if(nazwaSven.equals(direNazwa5)){
                
                sven.tworzenieSven();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - svenKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + svenAnti.get(j));
                
                }
                
                dH5 = 0;
                direNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            if(nazwaTiny.equals(direNazwa5)){
                
                tiny.tworzenieTiny();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - tinyKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + tinyAnti.get(j));
                
                }
                
                dH5 = 0;
                direNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
         
                   
            }
            
            
          
            if(nazwaDk.equals(direNazwa5)){
                
                dragonKnight.tworzenieDragonKnight();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - dKKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + dKAnti.get(j));
                
                }
                
                dH5 = 0;
                direNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
           
            if(nazwaOmniknight.equals(direNazwa5)){
                
                omni.tworzenieOmni();
                direPostac5.tworzenieDirePostac5();
                
                
                for (int i = 0; i < iloscBohaterow; ++i) {
                    
                heroWinRateListDire.set(i, heroWinRateListDire.get(i) - omniKnightKoop.get(i));
                
                }
                
                for (int j = 0; j < iloscBohaterow; ++j){
                    
                heroWinRateListRadiant.set(j, heroWinRateListRadiant.get(j) + omniKnightAnti.get(j));
                
                }
                
                dH5 = 0;
                direNazwa5 = "";  
                bestToPickAvoidList.sortowanieListyRadiantDire();
           
                   
            }
        }
        
        @Override
        public void mouseEntered(MouseEvent dp5) {
            
                direPostac5.setRolloverIcon(iconDU);
                direPostac5.setRolloverEnabled(true);
    
        }
        
         });
         
        }   
        
    } 
    //
    //
    // pobieranie wartosci win rate bohaterow z pliku txt w formacie double
    //
    //
    
    class ListaWartosciBohaterow{
        
         public void addWinRates () throws FileNotFoundException {
         
            InputStream p1  = getClass().getResourceAsStream("addWinRate.txt");
         
            Scanner scannerWinRatesA = new Scanner(p1);
           
            while (scannerWinRatesA.hasNextDouble()) {

            double valueWinRatesA = scannerWinRatesA.nextDouble();

            addWinRates.add(valueWinRatesA);
            
            }   
        }
        
        public void tworzenieListaWartosciBohaterowRadiant ()throws FileNotFoundException {
            
            InputStream p2  = getClass().getResourceAsStream("HeroWinRatesRadiant.txt");
            
            Scanner scannerHWRR = new Scanner(p2);
           
            while (scannerHWRR.hasNextDouble()) {

            double valueHWRR = scannerHWRR.nextDouble();

            heroWinRateListRadiant.add(valueHWRR);

            }
        }
        
        public void tworzenieListaWartosciBohaterowRadiantCopy ()throws FileNotFoundException {
            
            InputStream p3  = getClass().getResourceAsStream("HeroWinRatesRadiantCopy.txt");
            
            Scanner scannerHWRRC = new Scanner(p3);
           
            while (scannerHWRRC.hasNextDouble()) {

            double valueHWRRC = scannerHWRRC.nextDouble();

            heroWinRateListRadiantCopy.add(valueHWRRC);

            }
        }
        
         public void tworzenieListaWartosciBohaterowRadiantRound ()throws FileNotFoundException {
             
            InputStream p4  = getClass().getResourceAsStream("HeroWinRatesRadiantRound.txt");
            
            Scanner scannerHWRRCR = new Scanner(p4);
           
            while (scannerHWRRCR.hasNextDouble()) {

            double valueHWRRCR = scannerHWRRCR.nextDouble();

            heroWinRateListRadiantRound.add(valueHWRRCR);

            }
        }
        
        public void tworzenieListaWartosciBohaterowDire ()throws FileNotFoundException {
            
            InputStream p5  = getClass().getResourceAsStream("HeroWinRatesDire.txt");
            
            Scanner scannerHWRD = new Scanner(p5);
           
            while (scannerHWRD.hasNextDouble()) {

            double valueHWRD = scannerHWRD.nextDouble();

            heroWinRateListDire.add(valueHWRD);

            }
        }
        
        public void tworzenieListaWartosciBohaterowDireCopy ()throws FileNotFoundException {
            
            InputStream p6  = getClass().getResourceAsStream("HeroWinRatesDireCopy.txt");
            
            Scanner scannerHWRDC = new Scanner(p6);
           
            while (scannerHWRDC.hasNextDouble()) {

            double valueHWRDC = scannerHWRDC.nextDouble();

            heroWinRateListDireCopy.add(valueHWRDC);

            }
        }
        
        public void tworzenieListaWartosciBohaterowDireRound ()throws FileNotFoundException {
            
            InputStream p7  = getClass().getResourceAsStream("HeroWinRatesDireRound.txt");
            
            Scanner scannerHWRDCR = new Scanner(p7);
           
            while (scannerHWRDCR.hasNextDouble()) {

            double valueHWRDCR = scannerHWRDCR.nextDouble();

            heroWinRateListDireRound.add(valueHWRDCR);

            }
        }
        
        public void tworzeniesorotwaneListaWartosciBohaterowRadiantNazwyHerosow ()throws FileNotFoundException {
            
            InputStream p8  = getClass().getResourceAsStream("nazwyHerosow.txt");
            
            Scanner scannerHWRRSNH = new Scanner(p8);
           
            while (scannerHWRRSNH.hasNext()) {

            String valueHWRRSNH = scannerHWRRSNH.next();

            sortowanieWinRateListRadiantNazwyHerosow.add(valueHWRRSNH);

            }
        }
        
        public void tworzeniesorotwaneListaWartosciBohaterowDireNazwyHerosow ()throws FileNotFoundException {
            
            InputStream p9  = getClass().getResourceAsStream("nazwyHerosow.txt");
            
            Scanner scannerHWRDSNH = new Scanner(p9);
           
            while (scannerHWRDSNH.hasNext()) {

                String valueHWRDSNH = scannerHWRDSNH.next();

            sortowanieWinRateListDireNazwyHerosow.add(valueHWRDSNH);

            }
        }
        
        public void tworzeniesorotwaneListaRadiantWartosciNazwy ()throws FileNotFoundException {
            
            InputStream p10  = getClass().getResourceAsStream("nazwyHerosow.txt");
            
            Scanner scannerHWRRSNHN = new Scanner(p10);
           
            while (scannerHWRRSNHN.hasNext()) {

                String valueHWRRSNHN = scannerHWRRSNHN.next();

            sortowanieWinRateListRadiantWartosciNazwy.add(valueHWRRSNHN);

            }
        }
        
        public void tworzeniesorotwaneListaDireWartosciNazwy ()throws FileNotFoundException {
            
            InputStream p11  = getClass().getResourceAsStream("nazwyHerosow.txt");
            
            Scanner scannerHWRRSNHND = new Scanner(p11);
           
            while (scannerHWRRSNHND.hasNext()) {

                String valueHWRRSNHND = scannerHWRRSNHND.next();

            sortowanieWinRateListDireWartosciNazwy.add(valueHWRRSNHND);

            }
        }
        
         public void tworzeniesorotwaneListaRadiantNazwy ()throws FileNotFoundException {
             
             InputStream p12  = getClass().getResourceAsStream("nazwy.txt");
            
            Scanner scannerHWRRSNHNZ = new Scanner(p12);
           
            while (scannerHWRRSNHNZ.hasNext()) {

                String valueHWRRSNHNZ = scannerHWRRSNHNZ.next();

            sortowanieWinRateListRadiantNazwy.add(valueHWRRSNHNZ);

            }
        }
        
        public void tworzeniesorotwaneListaDireNazwy ()throws FileNotFoundException {
            
            InputStream p13  = getClass().getResourceAsStream("nazwy.txt");
            
            Scanner scannerHWRRSNHNDZ = new Scanner(p13);
           
            while (scannerHWRRSNHNDZ.hasNext()) {

                String valueHWRRSNHNDZ = scannerHWRRSNHNDZ.next();

            sortowanieWinRateListDireNazwy.add(valueHWRRSNHNDZ);

            }
        }
        
        public void tworzeniesorotwaneListaBestToPickRadiant ()throws FileNotFoundException {
            
            InputStream p14  = getClass().getResourceAsStream("bestToPickRadiant.txt");
            
            Scanner scannerBTPR = new Scanner(p14);
           
            while (scannerBTPR.hasNext()) {

                String valueBTPR = scannerBTPR.next();

            bestToPickRadiant.add(valueBTPR);

            }
        }
        
        public void tworzeniesorotwaneListaBestToAvoidRadiant ()throws FileNotFoundException {
            
            InputStream p15  = getClass().getResourceAsStream("bestToAvoidRadiant.txt");
            
            Scanner scannerBTAR = new Scanner(p15);
           
            while (scannerBTAR.hasNext()) {

                String valueBTAR = scannerBTAR.next();

            bestToAvoidRadiant.add(valueBTAR);

            }
        }
        
         public void tworzeniesorotwaneListaBestToPickDire ()throws FileNotFoundException {
             
             InputStream p16  = getClass().getResourceAsStream("bestToPickDire.txt");
            
            Scanner scannerBTPD = new Scanner(p16);
           
            while (scannerBTPD.hasNext()) {

                String valueBTPD = scannerBTPD.next();

            bestToPickDire.add(valueBTPD);

            }
        }
        
        public void tworzeniesorotwaneListaBestToAvoidDire ()throws FileNotFoundException {
            
            InputStream p17  = getClass().getResourceAsStream("bestToAvoidDire.txt");
            
            Scanner scannerBTAD = new Scanner(p17);
           
            while (scannerBTAD.hasNext()) {

                String valueBTAD = scannerBTAD.next();

            bestToAvoidDire.add(valueBTAD);

            }
        }
    }
    
    //
    //
    // pobiernie wartosci anti z pliku txt w formacie double
    //
    //
    
    class ListaAntiIndexBohaterow{
        
        
        
        public void abaddonAntiIndex() throws FileNotFoundException{
            
            InputStream p18  = getClass().getResourceAsStream("abaddonAnti.txt");
            
         Scanner scannerAbaddonA = new Scanner(p18);
           
            while (scannerAbaddonA.hasNextDouble()) {

            double valueAbaddonA = scannerAbaddonA.nextDouble();

            abaddonAnti.add(valueAbaddonA);
            
            }   
        }
        
        public void alchemistAntiIndex() throws FileNotFoundException{
            
            InputStream p19  = getClass().getResourceAsStream("alchemistAnti.txt");
            
         Scanner scannerAlchemistA = new Scanner(p19);
           
            while (scannerAlchemistA.hasNextDouble()) {

            double valueAlchemistA = scannerAlchemistA.nextDouble();

            alchemistAnti.add(valueAlchemistA);
            
            }   
        }
        
        public void ancientApparitionAntiIndex() throws FileNotFoundException{
            
            InputStream p20  = getClass().getResourceAsStream("ancientApparitionAnti.txt");
            
         Scanner scannerAncientApparitionA = new Scanner(p20);
           
            while (scannerAncientApparitionA.hasNextDouble()) {

            double valueAncientApparitionA = scannerAncientApparitionA.nextDouble();

            ancientApparitionAnti.add(valueAncientApparitionA);
            
            }   
        }
        
        public void antiMageAntiIndex() throws FileNotFoundException{
            
            InputStream p21  = getClass().getResourceAsStream("antiMageAnti.txt");
            
         Scanner scannerAntiMageA = new Scanner(p21);
           
            while (scannerAntiMageA.hasNextDouble()) {

            double valueAntiMageA = scannerAntiMageA.nextDouble();

            antiMageAnti.add(valueAntiMageA);
            
            }   
        }
        
        public void arcWardenAntiIndex() throws FileNotFoundException{
            
            InputStream p22  = getClass().getResourceAsStream("arcWardenAnti.txt");
            
         Scanner scannerArcWardenA = new Scanner(p22);
           
            while (scannerArcWardenA.hasNextDouble()) {

            double valueArcWardenA = scannerArcWardenA.nextDouble();

            arcWardenAnti.add(valueArcWardenA);
            
            }   
        }
        
        public void axeAntiIndex() throws FileNotFoundException{
            
            InputStream p23  = getClass().getResourceAsStream("axeAnti.txt");
            
         Scanner scannerAxeA = new Scanner(p23);
           
            while (scannerAxeA.hasNextDouble()) {

            double valueAxeA = scannerAxeA.nextDouble();

            axeAnti.add(valueAxeA);
            
            }   
        }
        
        public void baneAntiIndex() throws FileNotFoundException{
            
            InputStream p24  = getClass().getResourceAsStream("baneAnti.txt");
            
         Scanner scannerBaneA = new Scanner(p24);
           
            while (scannerBaneA.hasNextDouble()) {

            double valueBaneA = scannerBaneA.nextDouble();

            baneAnti.add(valueBaneA);
            
            }   
        }
        
        public void batriderAntiIndex() throws FileNotFoundException{
            
            InputStream p25 = getClass().getResourceAsStream("batriderAnti.txt");
            
         Scanner scannerBatriderA = new Scanner(p25);
           
            while (scannerBatriderA.hasNextDouble()) {

            double valueBatriderA = scannerBatriderA.nextDouble();

            batriderAnti.add(valueBatriderA);
            
            }   
        }
        
        public void beastmasterAntiIndex() throws FileNotFoundException{
            
            InputStream p26  = getClass().getResourceAsStream("beastmasterAnti.txt");
            
         Scanner scannerBeastmasterA = new Scanner(p26);
           
            while (scannerBeastmasterA.hasNextDouble()) {

            double valueBeastmasterA = scannerBeastmasterA.nextDouble();

            beastmasterAnti.add(valueBeastmasterA);
            
            }   
        }
        
        public void bloodseekerAntiIndex() throws FileNotFoundException{
            
            InputStream p27  = getClass().getResourceAsStream("bloodseekerAnti.txt");
            
         Scanner scannerBloodseekerA = new Scanner(p27);
           
            while (scannerBloodseekerA.hasNextDouble()) {

            double valueBloodseekerA = scannerBloodseekerA.nextDouble();

            bloodseekerAnti.add(valueBloodseekerA);
            
            }   
        }
        
        public void bountyHunterAntiIndex() throws FileNotFoundException{
            
            InputStream p28  = getClass().getResourceAsStream("bountyHunterAnti.txt");
            
         Scanner scannerBountyHunterA = new Scanner(p28);
           
            while (scannerBountyHunterA.hasNextDouble()) {

            double valueBountyHunterA = scannerBountyHunterA.nextDouble();

            bountyHunterAnti.add(valueBountyHunterA);
            
            }   
        }
        
        public void brewmasterAntiIndex() throws FileNotFoundException{
            
            InputStream p29  = getClass().getResourceAsStream("brewmasterAnti.txt");
            
         Scanner scannerBrewmasterA = new Scanner(p29);
           
            while (scannerBrewmasterA.hasNextDouble()) {

            double valueBrewmasterA = scannerBrewmasterA.nextDouble();

            brewmasterAnti.add(valueBrewmasterA);
            
            }   
        }
        
        public void bristlebackAntiIndex() throws FileNotFoundException{
            
            InputStream p30  = getClass().getResourceAsStream("bristlebackAnti.txt");
            
         Scanner scannerBristlebackA = new Scanner(p30);
           
            while (scannerBristlebackA.hasNextDouble()) {

            double valueBristlebackA = scannerBristlebackA.nextDouble();

            bristlebackAnti.add(valueBristlebackA);
            
            }   
        }
        
        public void broodmotherAntiIndex() throws FileNotFoundException{
            
            InputStream p31  = getClass().getResourceAsStream("broodmotherAnti.txt");
            
         Scanner scannerBroodmotherA = new Scanner(p31);
           
            while (scannerBroodmotherA.hasNextDouble()) {

            double valueBroodmotherA = scannerBroodmotherA.nextDouble();

            broodmotherAnti.add(valueBroodmotherA);
            
            }   
        }
        
        public void centaurWarrunnerAntiIndex() throws FileNotFoundException{
            
            InputStream p32  = getClass().getResourceAsStream("centaurWarrunnerAnti.txt");
            
         Scanner scannerCentaurWarrunnerA = new Scanner(p32);
           
            while (scannerCentaurWarrunnerA.hasNextDouble()) {

            double valueCentaurWarrunnerA = scannerCentaurWarrunnerA.nextDouble();

            centaurWarrunnerAnti.add(valueCentaurWarrunnerA);
            
            }   
        }
        
        public void chaosKnightAntiIndex() throws FileNotFoundException{
            
            InputStream p33  = getClass().getResourceAsStream("chaosKnightAnti.txt");
            
         Scanner scannerChaosKnightA = new Scanner(p33);
           
            while (scannerChaosKnightA.hasNextDouble()) {

            double valueChaosKnightA = scannerChaosKnightA.nextDouble();

            chaosKnightAnti.add(valueChaosKnightA);
            
            }   
        }
        
        public void chenAntiIndex() throws FileNotFoundException{
            
            InputStream p34 = getClass().getResourceAsStream("chenAnti.txt");
            
         Scanner scannerChenA = new Scanner(p34);
           
            while (scannerChenA.hasNextDouble()) {

            double valueChenA = scannerChenA.nextDouble();

            chenAnti.add(valueChenA);
            
            }   
        }
        
        public void clinkzAntiIndex() throws FileNotFoundException{
            
            InputStream p35  = getClass().getResourceAsStream("clinkzAnti.txt");
            
         Scanner scannerClinkzA = new Scanner(p35);
           
            while (scannerClinkzA.hasNextDouble()) {

            double valueClinkzA = scannerClinkzA.nextDouble();

            clinkzAnti.add(valueClinkzA);
            
            }   
        }
        
        public void clockwerkAntiIndex() throws FileNotFoundException{
            
            InputStream p36  = getClass().getResourceAsStream("clockwerkAnti.txt");
            
         Scanner scannerClockwerkA = new Scanner(p36);
           
            while (scannerClockwerkA.hasNextDouble()) {

            double valueClockwerkA = scannerClockwerkA.nextDouble();

            clockwerkAnti.add(valueClockwerkA);
            
            }   
        }
        
        public void crystalMaidenAntiIndex() throws FileNotFoundException{
            
            InputStream p37  = getClass().getResourceAsStream("crystalMaidenAnti.txt");
            
         Scanner scannerCrystalMaidenA = new Scanner(p37);
           
            while (scannerCrystalMaidenA.hasNextDouble()) {

            double valueCrystalMaidenA = scannerCrystalMaidenA.nextDouble();

            crystalMaidenAnti.add(valueCrystalMaidenA);
            
            }   
        }
        
        public void darkSeerAntiIndex() throws FileNotFoundException{
            
            InputStream p38  = getClass().getResourceAsStream("darkSeerAnti.txt");
            
         Scanner scannerDarkSeerA = new Scanner(p38);
           
            while (scannerDarkSeerA.hasNextDouble()) {

            double valueDarkSeerA = scannerDarkSeerA.nextDouble();

            darkSeerAnti.add(valueDarkSeerA);
            
            }   
        }
        
        public void dazzleAntiIndex() throws FileNotFoundException{
            
            InputStream p39  = getClass().getResourceAsStream("dazzleAnti.txt");
            
         Scanner scannerDazzleA = new Scanner(p39);
           
            while (scannerDazzleA.hasNextDouble()) {

            double valueDazzleA = scannerDazzleA.nextDouble();

            dazzleAnti.add(valueDazzleA);
            
            }   
        }
        
        public void deathProphetAntiIndex() throws FileNotFoundException{
            
            InputStream p40  = getClass().getResourceAsStream("deathProphetAnti.txt");
            
         Scanner scannerDeathProphetA = new Scanner(p40);
           
            while (scannerDeathProphetA.hasNextDouble()) {

            double valueDeathProphetA = scannerDeathProphetA.nextDouble();

            deathProphetAnti.add(valueDeathProphetA);
            
            }   
        }
        
        public void disruptorAntiIndex() throws FileNotFoundException{
            
            InputStream p41  = getClass().getResourceAsStream("disruptorAnti.txt");
            
         Scanner scannerDisruptorA = new Scanner(p41);
           
            while (scannerDisruptorA.hasNextDouble()) {

            double valueDisruptorA = scannerDisruptorA.nextDouble();

            disruptorAnti.add(valueDisruptorA);
            
            }   
        }
        
        public void doomAntiIndex() throws FileNotFoundException{
            
            InputStream p42  = getClass().getResourceAsStream("doomAnti.txt");
            
         Scanner scannerDoomA = new Scanner(p42);
           
            while (scannerDoomA.hasNextDouble()) {

            double valueDoomA = scannerDoomA.nextDouble();

            doomAnti.add(valueDoomA);
            
            }   
        }
        
        public void dragonKnightAntiIndex() throws FileNotFoundException{
            
            InputStream p43  = getClass().getResourceAsStream("dKAnti.txt");
            
         Scanner scannerDkA = new Scanner(p43);
           
            while (scannerDkA.hasNextDouble()) {

            double valueDkA = scannerDkA.nextDouble();

            dKAnti.add(valueDkA);
            
            }   
        }
        
        public void drowRangerAntiIndex() throws FileNotFoundException{
            
            InputStream p44  = getClass().getResourceAsStream("drowRangerAnti.txt");
            
         Scanner scannerDrowRangerA = new Scanner(p44);
           
            while (scannerDrowRangerA.hasNextDouble()) {

            double valueDrowRangerA = scannerDrowRangerA.nextDouble();

            drowRangerAnti.add(valueDrowRangerA);
            
            }   
        }
        
        public void earthSpiritAntiIndex() throws FileNotFoundException{
            
            
            InputStream p45  = getClass().getResourceAsStream("earthSpiritAnti.txt");
            
         Scanner scannerEarthSpiritA = new Scanner(p45);
           
            while (scannerEarthSpiritA.hasNextDouble()) {

            double valueEarthSpiritA = scannerEarthSpiritA.nextDouble();

            earthSpiritAnti.add(valueEarthSpiritA);
            
            }   
        }
        
         public void eSAntiIndex() throws FileNotFoundException{
             
             InputStream p46  = getClass().getResourceAsStream("eSAnti.txt");
            
         Scanner scannereSA = new Scanner(p46);
           
            while (scannereSA.hasNextDouble()) {

            double valueeSA = scannereSA.nextDouble();

            eSAnti.add(valueeSA);
            
            }   
        }
        
        public void elderTitanAntiIndex() throws FileNotFoundException{
            
            InputStream p47  = getClass().getResourceAsStream("elderTitanAnti.txt");
            
         Scanner scannerElderTitanA = new Scanner(p47);
           
            while (scannerElderTitanA.hasNextDouble()) {

            double valueElderTitanA = scannerElderTitanA.nextDouble();

            elderTitanAnti.add(valueElderTitanA);
            
            }   
        }
         
        public void emberSpiritAntiIndex() throws FileNotFoundException{
            
            InputStream p48  = getClass().getResourceAsStream("emberSpiritAnti.txt");
            
         Scanner scannerEmberSpiritA = new Scanner(p48);
           
            while (scannerEmberSpiritA.hasNextDouble()) {

            double valueEmberSpiritA = scannerEmberSpiritA.nextDouble();

            emberSpiritAnti.add(valueEmberSpiritA);
            
            }   
        }
        
        public void enchantressAntiIndex() throws FileNotFoundException{
            
            InputStream p49  = getClass().getResourceAsStream("enchantressAnti.txt");
            
         Scanner scannerEnchantressA = new Scanner(p49);
           
            while (scannerEnchantressA.hasNextDouble()) {

            double valueEnchantressA = scannerEnchantressA.nextDouble();

            enchantressAnti.add(valueEnchantressA);
            
            }   
        }
        
        public void enigmaAntiIndex() throws FileNotFoundException{
            
            InputStream p50  = getClass().getResourceAsStream("enigmaAnti.txt");
            
         Scanner scannerEnigmaA = new Scanner(p50);
           
            while (scannerEnigmaA.hasNextDouble()) {

            double valueEnigmaA = scannerEnigmaA.nextDouble();

            enigmaAnti.add(valueEnigmaA);
            
            }   
        }
        
        public void facelessVoidAntiIndex() throws FileNotFoundException{
            
            InputStream p51  = getClass().getResourceAsStream("voidAnti.txt");
            
         Scanner scannerFacelessVoidA = new Scanner(p51);
           
            while (scannerFacelessVoidA.hasNextDouble()) {

            double valueFacelessVoidA = scannerFacelessVoidA.nextDouble();

            voidAnti.add(valueFacelessVoidA);
            
            }   
        }
        
        public void gyrocopterAntiIndex() throws FileNotFoundException{
            
            InputStream p52  = getClass().getResourceAsStream("gyrocopterAnti.txt");
            
         Scanner scannerGyrocopterA = new Scanner(p52);
           
            while (scannerGyrocopterA.hasNextDouble()) {

            double valueGyrocopterA = scannerGyrocopterA.nextDouble();

            gyrocopterAnti.add(valueGyrocopterA);
            
            }   
        }
        
         public void huskarAntiIndex() throws FileNotFoundException{
             
             InputStream p53  = getClass().getResourceAsStream("huskarAnti.txt");
            
         Scanner scannerHuskarA = new Scanner(p53);
           
            while (scannerHuskarA.hasNextDouble()) {

            double valueHuskarA = scannerHuskarA.nextDouble();

           huskarAnti.add(valueHuskarA);
            
            }   
        }
        
        public void invokerAntiIndex() throws FileNotFoundException{
            
            InputStream p54  = getClass().getResourceAsStream("invokerAnti.txt");
            
         Scanner scannerInvokerA = new Scanner(p54);
           
            while (scannerInvokerA.hasNextDouble()) {

            double valueInvokerA = scannerInvokerA.nextDouble();

            invokerAnti.add(valueInvokerA);
            
            }   
        }
        
        public void ioAntiIndex() throws FileNotFoundException{
            
            InputStream p55  = getClass().getResourceAsStream("ioAnti.txt");
            
         Scanner scannerIoA = new Scanner(p55);
           
            while (scannerIoA.hasNextDouble()) {

            double valueIoA = scannerIoA.nextDouble();

            ioAnti.add(valueIoA);
            
            }   
        }
        
        public void jakiroAntiIndex() throws FileNotFoundException{
            
            InputStream p56  = getClass().getResourceAsStream("jakiroAnti.txt");
            
         Scanner scannerJakiroA = new Scanner(p56);
           
            while (scannerJakiroA.hasNextDouble()) {

            double valueJakiroA = scannerJakiroA.nextDouble();

            jakiroAnti.add(valueJakiroA);
            
            }   
        }
        
        public void juggernautAntiIndex() throws FileNotFoundException{
            
            InputStream p57  = getClass().getResourceAsStream("juggernautAnti.txt");
            
         Scanner scannerJuggernautA = new Scanner(p57);
           
            while (scannerJuggernautA.hasNextDouble()) {

            double valueJuggernautA = scannerJuggernautA.nextDouble();

            juggernautAnti.add(valueJuggernautA);
            
            }   
        }
        
        public void keeperOfTheLightAntiIndex() throws FileNotFoundException{
            
            InputStream p58  = getClass().getResourceAsStream("keeperOfTheLightAnti.txt");
            
         Scanner scannerKeeperOfTheLightA = new Scanner(p58);
           
            while (scannerKeeperOfTheLightA.hasNextDouble()) {

            double valueKeeperOfTheLightA = scannerKeeperOfTheLightA.nextDouble();

            keeperOfTheLightAnti.add(valueKeeperOfTheLightA);
            
            }   
        }
        
        public void kunkkaAntiIndex() throws FileNotFoundException{
            
            InputStream p59  = getClass().getResourceAsStream("kunkkaAnti.txt");
            
         Scanner scannerKunkkaA = new Scanner(p59);
           
            while (scannerKunkkaA.hasNextDouble()) {

            double valueKunkkaA = scannerKunkkaA.nextDouble();

            kunkkaAnti.add(valueKunkkaA);
            
            }   
        }
        
        public void legionCommanderAntiIndex() throws FileNotFoundException{
            
            InputStream p60  = getClass().getResourceAsStream("legionCommanderAnti.txt");
            
         Scanner scannerLegionCommanderA = new Scanner(p60);
           
            while (scannerLegionCommanderA.hasNextDouble()) {

            double valueLegionCommanderA = scannerLegionCommanderA.nextDouble();

            legionCommanderAnti.add(valueLegionCommanderA);
            
            }   
        }
        
        public void leshracAntiIndex() throws FileNotFoundException{
            
            InputStream p61  = getClass().getResourceAsStream("leshracAnti.txt");
            
         Scanner scannerLeshracA = new Scanner(p61);
           
            while (scannerLeshracA.hasNextDouble()) {

            double valueLeshracA = scannerLeshracA.nextDouble();

            leshracAnti.add(valueLeshracA);
            
            }   
        }
        
        public void lichAntiIndex() throws FileNotFoundException{
            
            InputStream p62  = getClass().getResourceAsStream("lichAnti.txt");
            
         Scanner scannerLichA = new Scanner(p62);
           
            while (scannerLichA.hasNextDouble()) {

            double valueLichA = scannerLichA.nextDouble();

            lichAnti.add(valueLichA);
            
            }   
        }
        
        public void lifestealerAntiIndex() throws FileNotFoundException{
            
            InputStream p63  = getClass().getResourceAsStream("lifestealerAnti.txt");
            
         Scanner scannerLifestealerA = new Scanner(p63);
           
            while (scannerLifestealerA.hasNextDouble()) {

            double valueLifestealerA = scannerLifestealerA.nextDouble();

            lifeStealerAnti.add(valueLifestealerA);
            
            }   
        }
        
        public void linaAntiIndex() throws FileNotFoundException{
            
            InputStream p64  = getClass().getResourceAsStream("linaAnti.txt");
            
         Scanner scannerLinaA = new Scanner(p64);
           
            while (scannerLinaA.hasNextDouble()) {

            double valueLinaA = scannerLinaA.nextDouble();

            linaAnti.add(valueLinaA);
            
            }   
        }
        
        public void lionAntiIndex() throws FileNotFoundException{
            
            InputStream p65  = getClass().getResourceAsStream("lionAnti.txt");
            
         Scanner scannerLionA = new Scanner(p65);
           
            while (scannerLionA.hasNextDouble()) {

            double valueLionA = scannerLionA.nextDouble();

            lionAnti.add(valueLionA);
            
            }   
        }
        
        public void loneDruidAntiIndex() throws FileNotFoundException{
            
            InputStream p66  = getClass().getResourceAsStream("loneDruidAnti.txt");
            
         Scanner scannerLoneDruidA = new Scanner(p66);
           
            while (scannerLoneDruidA.hasNextDouble()) {

            double valueLoneDruidA = scannerLoneDruidA.nextDouble();

            loneDruidAnti.add(valueLoneDruidA);
            
            }   
        }
        
        public void lunaAntiIndex() throws FileNotFoundException{
            
            InputStream p67  = getClass().getResourceAsStream("lunaAnti.txt");
            
         Scanner scannerLunaA = new Scanner(p67);
           
            while (scannerLunaA.hasNextDouble()) {

            double valueLunaA = scannerLunaA.nextDouble();

            lunaAnti.add(valueLunaA);
            
            }   
        }
        
        public void lycanAntiIndex() throws FileNotFoundException{
            
            InputStream p68  = getClass().getResourceAsStream("lycanAnti.txt");
            
         Scanner scannerLycanA = new Scanner(p68);
           
            while (scannerLycanA.hasNextDouble()) {

            double valueLycanA = scannerLycanA.nextDouble();

            lycanAnti.add(valueLycanA);
            
            }   
        }
        
        public void magnusAntiIndex() throws FileNotFoundException{
            
            InputStream p69  = getClass().getResourceAsStream("magnusAnti.txt");
            
         Scanner scannerMagnusA = new Scanner(p69);
           
            while (scannerMagnusA.hasNextDouble()) {

            double valueMagnusA = scannerMagnusA.nextDouble();

            magnusAnti.add(valueMagnusA);
            
            }   
        }
        
        public void medusaAntiIndex() throws FileNotFoundException{
            
            InputStream p70  = getClass().getResourceAsStream("medusaAnti.txt");
            
         Scanner scannerMedusaA = new Scanner(p70);
           
            while (scannerMedusaA.hasNextDouble()) {

            double valueMedusaA = scannerMedusaA.nextDouble();

            medusaAnti.add(valueMedusaA);
            
            }   
        }
        
        public void meepoAntiIndex() throws FileNotFoundException{
            
            InputStream p71  = getClass().getResourceAsStream("meepoAnti.txt");
            
         Scanner scannerMeepoA = new Scanner(p71);
           
            while (scannerMeepoA.hasNextDouble()) {

            double valueMeepoA = scannerMeepoA.nextDouble();

            meepoAnti.add(valueMeepoA);
            
            }   
        }
        
        public void miranaAntiIndex() throws FileNotFoundException{
            
            InputStream p72  = getClass().getResourceAsStream("miranaAnti.txt");
            
         Scanner scannerMiranaA = new Scanner(p72);
           
            while (scannerMiranaA.hasNextDouble()) {

            double valueMiranaA = scannerMiranaA.nextDouble();

            miranaAnti.add(valueMiranaA);
            
            }   
        }
        
        public void morphlingAntiIndex() throws FileNotFoundException{
            
            InputStream p73  = getClass().getResourceAsStream("morphlingAnti.txt");
            
         Scanner scannerMorphlingA = new Scanner(p73);
           
            while (scannerMorphlingA.hasNextDouble()) {

            double valueMorphlingA = scannerMorphlingA.nextDouble();

            morphlingAnti.add(valueMorphlingA);
            
            }   
        }
        
        public void nagaSirenAntiIndex() throws FileNotFoundException{
            
            InputStream p74  = getClass().getResourceAsStream("nagaSirenAnti.txt");
            
         Scanner scannerNagaSirenA = new Scanner(p74);
           
            while (scannerNagaSirenA.hasNextDouble()) {

            double valueNagaSirenA = scannerNagaSirenA.nextDouble();

            nagaSirenAnti.add(valueNagaSirenA);
            
            }   
        }
        
        public void naturesProphetAntiIndex() throws FileNotFoundException{
            
            InputStream p75  = getClass().getResourceAsStream("naturesProphetAnti.txt");
            
         Scanner scannerNaturesProphetA = new Scanner(p75);
           
            while (scannerNaturesProphetA.hasNextDouble()) {

            double valueNaturesProphetA = scannerNaturesProphetA.nextDouble();

            naturesProphetAnti.add(valueNaturesProphetA);
            
            }   
        }
        
        public void necrophosAntiIndex() throws FileNotFoundException{
            
            InputStream p76  = getClass().getResourceAsStream("necrophosAnti.txt");
            
         Scanner scannerNecrophosA = new Scanner(p76);
           
            while (scannerNecrophosA.hasNextDouble()) {

            double valueNecrophosA = scannerNecrophosA.nextDouble();

            necrophosAnti.add(valueNecrophosA);
            
            }   
        }
        
        public void nightStalkerAntiIndex() throws FileNotFoundException{
            
            InputStream p77  = getClass().getResourceAsStream("nightStalkerAnti.txt");
            
         Scanner scannerNightStalkerA = new Scanner(p77);
           
            while (scannerNightStalkerA.hasNextDouble()) {

            double valueNightStalkerA = scannerNightStalkerA.nextDouble();

            nightStalkerAnti.add(valueNightStalkerA);
            
            }   
        }
        
        public void nyxAssassinAntiIndex() throws FileNotFoundException{
            
            InputStream p78  = getClass().getResourceAsStream("nyxAssassinAnti.txt");
            
         Scanner scannerNyxAssassinA = new Scanner(p78);
           
            while (scannerNyxAssassinA.hasNextDouble()) {

            double valueNyxAssassinA = scannerNyxAssassinA.nextDouble();

            nyxAssassinAnti.add(valueNyxAssassinA);
            
            }   
        }
        
        public void ogreMagiAntiIndex() throws FileNotFoundException{
            
            InputStream p79  = getClass().getResourceAsStream("ogreMagiAnti.txt");
            
         Scanner scannerOgreMagiA = new Scanner(p79);
           
            while (scannerOgreMagiA.hasNextDouble()) {

            double valueOgreMagiA = scannerOgreMagiA.nextDouble();

            ogreMagiAnti.add(valueOgreMagiA);
            
            }   
        }
        
        public void omniknightAntiIndex() throws FileNotFoundException{
            
            InputStream p80  = getClass().getResourceAsStream("omniknightAnti.txt");
            
         Scanner scannerOmniknightA = new Scanner(p80);
           
            while (scannerOmniknightA.hasNextDouble()) {

            double valueOmniknightA = scannerOmniknightA.nextDouble();

            omniKnightAnti.add(valueOmniknightA);
            
            }   
        }
        
        public void oracleAntiIndex() throws FileNotFoundException{
            
            InputStream p81  = getClass().getResourceAsStream("oracleAnti.txt");
            
         Scanner scannerOracleA = new Scanner(p81);
           
            while (scannerOracleA.hasNextDouble()) {

            double valueOracleA = scannerOracleA.nextDouble();

            oracleAnti.add(valueOracleA);
            
            }   
        }
        
        public void outworldDevourerAntiIndex() throws FileNotFoundException{
            
            InputStream p82  = getClass().getResourceAsStream("outworldDevourerAnti.txt");
            
         Scanner scannerOutworldDevourerA = new Scanner(p82);
           
            while (scannerOutworldDevourerA.hasNextDouble()) {

            double valueOutworldDevourerA = scannerOutworldDevourerA.nextDouble();

            outworldDevourerAnti.add(valueOutworldDevourerA);
            
            }   
        }
        
        public void phantomAssassinAntiIndex() throws FileNotFoundException{
            
            InputStream p83  = getClass().getResourceAsStream("phantomAssassinAnti.txt");
            
         Scanner scannerPhantomAssassinA = new Scanner(p83);
           
            while (scannerPhantomAssassinA.hasNextDouble()) {

            double valuePhantomAssassinA = scannerPhantomAssassinA.nextDouble();

            phantomAssassinAnti.add(valuePhantomAssassinA);
            
            }   
        }
        
        public void phantomLancerAntiIndex() throws FileNotFoundException{
            
            InputStream p84  = getClass().getResourceAsStream("phantomLancerAnti.txt");
            
         Scanner scannerPhantomLancerA = new Scanner(p84);
           
            while (scannerPhantomLancerA.hasNextDouble()) {

            double valuePhantomLancerA = scannerPhantomLancerA.nextDouble();

            phantomLancerAnti.add(valuePhantomLancerA);
            
            }   
        }
        
        public void phoenixAntiIndex() throws FileNotFoundException{
            
            InputStream p85  = getClass().getResourceAsStream("phoenixAnti.txt");
            
         Scanner scannerPhoenixA = new Scanner(p85);
           
            while (scannerPhoenixA.hasNextDouble()) {

            double valuePhoenixA = scannerPhoenixA.nextDouble();

            phoenixAnti.add(valuePhoenixA);
            
            }   
        }
        
        public void puckAntiIndex() throws FileNotFoundException{
            
            InputStream p86  = getClass().getResourceAsStream("puckAnti.txt");
            
         Scanner scannerPuckA = new Scanner(p86);
           
            while (scannerPuckA.hasNextDouble()) {

            double valuePuckA = scannerPuckA.nextDouble();

            puckAnti.add(valuePuckA);
            
            }   
        }
        
        public void pudgeAntiIndex() throws FileNotFoundException{
            
            InputStream p87  = getClass().getResourceAsStream("pudgeAnti.txt");
            
         Scanner scannerPudgeA = new Scanner(p87);
           
            while (scannerPudgeA.hasNextDouble()) {

            double valuePudgeA = scannerPudgeA.nextDouble();

            pudgeAnti.add(valuePudgeA);
            
            }   
        }
        
        public void pugnaAntiIndex() throws FileNotFoundException{
            
            InputStream p88  = getClass().getResourceAsStream("pugnaAnti.txt");
            
         Scanner scannerPugnaA = new Scanner(p88);
           
            while (scannerPugnaA.hasNextDouble()) {

            double valuePugnaA = scannerPugnaA.nextDouble();

            pugnaAnti.add(valuePugnaA);
            
            }   
        }
        
        public void queenOfPainAntiIndex() throws FileNotFoundException{
            
            InputStream p89  = getClass().getResourceAsStream("queenOfPainAnti.txt");
            
         Scanner scannerQueenOfPainA = new Scanner(p89);
           
            while (scannerQueenOfPainA.hasNextDouble()) {

            double valueQueenOfPainA = scannerQueenOfPainA.nextDouble();

            queenOfPainAnti.add(valueQueenOfPainA);
            
            }   
        }
        
        public void razorAntiIndex() throws FileNotFoundException{
            
            InputStream p90  = getClass().getResourceAsStream("razorAnti.txt");
            
         Scanner scannerRazorA = new Scanner(p90);
           
            while (scannerRazorA.hasNextDouble()) {

            double valueRazorA = scannerRazorA.nextDouble();

            razorAnti.add(valueRazorA);
            
            }   
        }
        
        public void rikiAntiIndex() throws FileNotFoundException{
            
            InputStream p91  = getClass().getResourceAsStream("rikiAnti.txt");
            
         Scanner scannerRikiA = new Scanner(p91);
           
            while (scannerRikiA.hasNextDouble()) {

            double valueRikiA = scannerRikiA.nextDouble();

            rikiAnti.add(valueRikiA);
            
            }   
        }
        
        public void rubickAntiIndex() throws FileNotFoundException{
            
            InputStream p92  = getClass().getResourceAsStream("rubickAnti.txt");
            
         Scanner scannerRubickA = new Scanner(p92);
           
            while (scannerRubickA.hasNextDouble()) {

            double valueRubickA = scannerRubickA.nextDouble();

            rubickAnti.add(valueRubickA);
            
            }   
        }
        
        public void sandKingAntiIndex() throws FileNotFoundException{
            
            InputStream p93  = getClass().getResourceAsStream("sandKingAnti.txt");
            
         Scanner scannerSandKingA = new Scanner(p93);
           
            while (scannerSandKingA.hasNextDouble()) {

            double valueSandKingA = scannerSandKingA.nextDouble();

            sandKingAnti.add(valueSandKingA);
            
            }   
        }
        
        public void shadowDemonAntiIndex() throws FileNotFoundException{
            
            InputStream p94  = getClass().getResourceAsStream("shadowDemonAnti.txt");
            
         Scanner scannerShadowDemonA = new Scanner(p94);
           
            while (scannerShadowDemonA.hasNextDouble()) {

            double valueShadowDemonA = scannerShadowDemonA.nextDouble();

            shadowDemonAnti.add(valueShadowDemonA);
            
            }   
        }
        
        public void shadowFiendAntiIndex() throws FileNotFoundException{
            
            InputStream p95  = getClass().getResourceAsStream("shadowFiendAnti.txt");
            
         Scanner scannerShadowFiendA = new Scanner(p95);
           
            while (scannerShadowFiendA.hasNextDouble()) {

            double valueShadowFiendA = scannerShadowFiendA.nextDouble();

            shadowFiendAnti.add(valueShadowFiendA);
            
            }   
        }
        
        public void shadowShamanAntiIndex() throws FileNotFoundException{
            
            InputStream p96  = getClass().getResourceAsStream("shadowShamanAnti.txt");
            
         Scanner scannerShadowShamanA = new Scanner(p96);
           
            while (scannerShadowShamanA.hasNextDouble()) {

            double valueShadowShamanA = scannerShadowShamanA.nextDouble();

            shadowShamanAnti.add(valueShadowShamanA);
            
            }   
        }
        
        public void silencerAntiIndex() throws FileNotFoundException{
            
            InputStream p97  = getClass().getResourceAsStream("silencerAnti.txt");
            
         Scanner scannerSilencerA = new Scanner(p97);
           
            while (scannerSilencerA.hasNextDouble()) {

            double valueSilencerA = scannerSilencerA.nextDouble();

            silencerAnti.add(valueSilencerA);
            
            }   
        }
        
        public void skywrathMageAntiIndex() throws FileNotFoundException{
            
            InputStream p98  = getClass().getResourceAsStream("skywrathMageAnti.txt");
            
         Scanner scannerSkywrathMageA = new Scanner(p98);
           
            while (scannerSkywrathMageA.hasNextDouble()) {

            double valueSkywrathMageA = scannerSkywrathMageA.nextDouble();

            skywrathMageAnti.add(valueSkywrathMageA);
            
            }   
        }
        
        public void slardarAntiIndex() throws FileNotFoundException{
            
            InputStream p99  = getClass().getResourceAsStream("slardarAnti.txt");
            
         Scanner scannerSlardarA = new Scanner(p99);
           
            while (scannerSlardarA.hasNextDouble()) {

            double valueSlardarA = scannerSlardarA.nextDouble();

            slardarAnti.add(valueSlardarA);
            
            }   
        }
        
        public void slarkAntiIndex() throws FileNotFoundException{
            
            InputStream p100  = getClass().getResourceAsStream("slarkAnti.txt");
            
         Scanner scannerSlarkA = new Scanner(p100);
           
            while (scannerSlarkA.hasNextDouble()) {

            double valueSlarkA = scannerSlarkA.nextDouble();

            slarkAnti.add(valueSlarkA);
            
            }   
        }
        
        public void sniperAntiIndex() throws FileNotFoundException{
            
            InputStream p101  = getClass().getResourceAsStream("sniperAnti.txt");
            
         Scanner scannerSniperA = new Scanner(p101);
           
            while (scannerSniperA.hasNextDouble()) {

            double valueSniperA = scannerSniperA.nextDouble();

            sniperAnti.add(valueSniperA);
            
            }   
        }
        
        public void spectreAntiIndex() throws FileNotFoundException{
            
            InputStream p102  = getClass().getResourceAsStream("spectreAnti.txt");
            
         Scanner scannerSpectreA = new Scanner(p102);
           
            while (scannerSpectreA.hasNextDouble()) {

            double valueSpectreA = scannerSpectreA.nextDouble();

            spectreAnti.add(valueSpectreA);
            
            }   
        }
        
        public void spiritBreakerAntiIndex() throws FileNotFoundException{
            
            InputStream p103  = getClass().getResourceAsStream("spiritBreakerAnti.txt");
            
         Scanner scannerSpiritBreakerA = new Scanner(p103);
           
            while (scannerSpiritBreakerA.hasNextDouble()) {

            double valueSpiritBreakerA = scannerSpiritBreakerA.nextDouble();

            spiritBreakerAnti.add(valueSpiritBreakerA);
            
            }   
        }
        
        public void stormSpiritAntiIndex() throws FileNotFoundException{
            
            InputStream p104  = getClass().getResourceAsStream("stormSpiritAnti.txt");
            
         Scanner scannerStormSpiritA = new Scanner(p104);
           
            while (scannerStormSpiritA.hasNextDouble()) {

            double valueStormSpiritA = scannerStormSpiritA.nextDouble();

            stormSpiritAnti.add(valueStormSpiritA);
            
            }   
        }
        
        public void svenAntiIndex() throws FileNotFoundException{
            
            InputStream p105  = getClass().getResourceAsStream("svenAnti.txt");
           
         Scanner scannerSvenA = new Scanner(p105);
           
            while (scannerSvenA.hasNextDouble()) {

            double valueSvenA = scannerSvenA.nextDouble();

            svenAnti.add(valueSvenA);
            
            }   
        }
        
        public void techiesAntiIndex() throws FileNotFoundException{
            
            InputStream p106  = getClass().getResourceAsStream("techiesAnti.txt");
            
         Scanner scannerTechiesA = new Scanner(p106);
           
            while (scannerTechiesA.hasNextDouble()) {

            double valueTechiesA = scannerTechiesA.nextDouble();

            techiesAnti.add(valueTechiesA);
            
            }   
        }
        
        public void templarAssassinAntiIndex() throws FileNotFoundException{
            
            InputStream p107  = getClass().getResourceAsStream("templarAssassinAnti.txt");
            
         Scanner scannerTemplarAssassinA = new Scanner(p107);
           
            while (scannerTemplarAssassinA.hasNextDouble()) {

            double valueTemplarAssassinA = scannerTemplarAssassinA.nextDouble();

            templarAssassinAnti.add(valueTemplarAssassinA);
            
            }   
        }
        
        public void terrorbladeAntiIndex() throws FileNotFoundException{
            
            InputStream p108  = getClass().getResourceAsStream("terrorbladeAnti.txt");
            
         Scanner scannerTerrorbladeA = new Scanner(p108);
           
            while (scannerTerrorbladeA.hasNextDouble()) {

            double valueTerrorbladeA = scannerTerrorbladeA.nextDouble();

            terrorbladeAnti.add(valueTerrorbladeA);
            
            }   
        }
        
        public void tidehunterAntiIndex() throws FileNotFoundException{
            
            InputStream p109  = getClass().getResourceAsStream("tidehunterAnti.txt");
            
         Scanner scannerTidehunterA = new Scanner(p109);
           
            while (scannerTidehunterA.hasNextDouble()) {

            double valueTidehunterA = scannerTidehunterA.nextDouble();

            tidehunterAnti.add(valueTidehunterA);
            
            }   
        }
        
        public void timbersawAntiIndex() throws FileNotFoundException{
            
            InputStream p110  = getClass().getResourceAsStream("timbersawAnti.txt");
            
         Scanner scannerTimbersawA = new Scanner(p110);
           
            while (scannerTimbersawA.hasNextDouble()) {

            double valueTimbersawA = scannerTimbersawA.nextDouble();

            timbersawAnti.add(valueTimbersawA);
            
            }   
        }
        
        public void tinkerAntiIndex() throws FileNotFoundException{
            
            InputStream p111  = getClass().getResourceAsStream("tinkerAnti.txt");
            
         Scanner scannerTinkerA = new Scanner(p111);
           
            while (scannerTinkerA.hasNextDouble()) {

            double valueTinkerA = scannerTinkerA.nextDouble();

            tinkerAnti.add(valueTinkerA);
            
            }   
        }
        
        public void tinyAntiIndex() throws FileNotFoundException{
            
            InputStream p112  = getClass().getResourceAsStream("tinyAnti.txt");
            
         Scanner scannerTinyA = new Scanner(p112);
           
            while (scannerTinyA.hasNextDouble()) {

            double valueTinyA = scannerTinyA.nextDouble();

            tinyAnti.add(valueTinyA);
            
            }   
        }
        
        public void treantProtectorAntiIndex() throws FileNotFoundException{
            
            InputStream p113  = getClass().getResourceAsStream("treantProtectorAnti.txt");
            
         Scanner scannerTreantProtectorA = new Scanner(p113);
           
            while (scannerTreantProtectorA.hasNextDouble()) {

            double valueTreantProtectorA = scannerTreantProtectorA.nextDouble();

            treantProtectorAnti.add(valueTreantProtectorA);
            
            }   
        }
        
        public void trollWarlordAntiIndex() throws FileNotFoundException{
            
            InputStream p114  = getClass().getResourceAsStream("trollWarlordAnti.txt");
            
         Scanner scannerTrollWarlordA = new Scanner(p114);
           
            while (scannerTrollWarlordA.hasNextDouble()) {

            double valueTrollWarlordA = scannerTrollWarlordA.nextDouble();

            trollWarlordAnti.add(valueTrollWarlordA);
            
            }   
        }
        
        public void tuskAntiIndex() throws FileNotFoundException{
            
            InputStream p115  = getClass().getResourceAsStream("tuskAnti.txt");
            
         Scanner scannerTuskA = new Scanner(p115);
           
            while (scannerTuskA.hasNextDouble()) {

            double valueTuskA = scannerTuskA.nextDouble();

            tuskAnti.add(valueTuskA);
            
            }   
        }
        
        public void undyingAntiIndex() throws FileNotFoundException{
            
            InputStream p116  = getClass().getResourceAsStream("undyingAnti.txt");
            
         Scanner scannerUndyingA = new Scanner(p116);
           
            while (scannerUndyingA.hasNextDouble()) {

            double valueUndyingA = scannerUndyingA.nextDouble();

            undyingAnti.add(valueUndyingA);
            
            }   
        }
        
        public void ursaAntiIndex() throws FileNotFoundException{
            
            InputStream p117  = getClass().getResourceAsStream("ursaAnti.txt");
            
         Scanner scannerUrsaA = new Scanner(p117);
           
            while (scannerUrsaA.hasNextDouble()) {

            double valueUrsaA = scannerUrsaA.nextDouble();

            ursaAnti.add(valueUrsaA);
            
            }   
        }
        
        public void vengefulSpiritAntiIndex() throws FileNotFoundException{
            
            InputStream p118  = getClass().getResourceAsStream("vengefulSpiritAnti.txt");
            
         Scanner scannerVengefulSpiritA = new Scanner(p118);
           
            while (scannerVengefulSpiritA.hasNextDouble()) {

            double valueVengefulSpiritA = scannerVengefulSpiritA.nextDouble();

            vengefulSpiritAnti.add(valueVengefulSpiritA);
            
            }   
        }
        
        public void venomancerAntiIndex() throws FileNotFoundException{
            
            InputStream p119  = getClass().getResourceAsStream("venomancerAnti.txt");
            
         Scanner scannerVenomancerA = new Scanner(p119);
           
            while (scannerVenomancerA.hasNextDouble()) {

            double valueVenomancerA = scannerVenomancerA.nextDouble();

            venomancerAnti.add(valueVenomancerA);
            
            }   
        }
        
        public void viperAntiIndex() throws FileNotFoundException{
            
            InputStream p120  = getClass().getResourceAsStream("viperAnti.txt");
            
         Scanner scannerViperA = new Scanner(p120);
           
            while (scannerViperA.hasNextDouble()) {

            double valueViperA = scannerViperA.nextDouble();

            viperAnti.add(valueViperA);
            
            }   
        }
        
        public void visageAntiIndex() throws FileNotFoundException{
            
            InputStream p121  = getClass().getResourceAsStream("visageAnti.txt");
            
         Scanner scannerVisageA = new Scanner(p121);
           
            while (scannerVisageA.hasNextDouble()) {

            double valueVisageA = scannerVisageA.nextDouble();

            visageAnti.add(valueVisageA);
            
            }   
        }
        
        public void warlockAntiIndex() throws FileNotFoundException{
            
            InputStream p122  = getClass().getResourceAsStream("warlockAnti.txt");
            
         Scanner scannerWarlockA = new Scanner(p122);
           
            while (scannerWarlockA.hasNextDouble()) {

            double valueWarlockA = scannerWarlockA.nextDouble();

            warlockAnti.add(valueWarlockA);
            
            }   
        }
        
        public void weaverAntiIndex() throws FileNotFoundException{
            
            InputStream p123  = getClass().getResourceAsStream("weaverAnti.txt");
            
         Scanner scannerWeaverA = new Scanner(p123);
           
            while (scannerWeaverA.hasNextDouble()) {

            double valueWeaverA = scannerWeaverA.nextDouble();

            weaverAnti.add(valueWeaverA);
            
            }   
        }
        
        public void windrangerAntiIndex() throws FileNotFoundException{
            
            InputStream p124  = getClass().getResourceAsStream("windrangerAnti.txt");
            
         Scanner scannerWindrangerA = new Scanner(p124);
           
            while (scannerWindrangerA.hasNextDouble()) {

            double valueWindrangerA = scannerWindrangerA.nextDouble();

            windrangerAnti.add(valueWindrangerA);
            
            }   
        }
        
        public void winterWyvernAntiIndex() throws FileNotFoundException{
            
            InputStream p125  = getClass().getResourceAsStream("winterWyvernAnti.txt");
            
         Scanner scannerWinterWyvernA = new Scanner(p125);
           
            while (scannerWinterWyvernA.hasNextDouble()) {

            double valueWinterWyvernA = scannerWinterWyvernA.nextDouble();

            winterWyvernAnti.add(valueWinterWyvernA);
            
            }   
        }
        
        public void witchDoctorAntiIndex() throws FileNotFoundException{
            
            InputStream p126  = getClass().getResourceAsStream("witchDoctorAnti.txt");
            
         Scanner scannerWitchDoctorA = new Scanner(p126);
           
            while (scannerWitchDoctorA.hasNextDouble()) {

            double valueWitchDoctorA = scannerWitchDoctorA.nextDouble();

            witchDoctorAnti.add(valueWitchDoctorA);
            
            }   
        }
        
        public void wraithKingAntiIndex() throws FileNotFoundException{
            
            InputStream p127  = getClass().getResourceAsStream("wraithKingAnti.txt");
            
         Scanner scannerWraithKingA = new Scanner(p127);
           
            while (scannerWraithKingA.hasNextDouble()) {

            double valueWraithKingA = scannerWraithKingA.nextDouble();

            wraithKingAnti.add(valueWraithKingA);
            
            }   
        }
        
        public void zeusAntiIndex() throws FileNotFoundException{
            
            InputStream p128  = getClass().getResourceAsStream("zeusAnti.txt");
            
         Scanner scannerZeusA = new Scanner(p128);
           
            while (scannerZeusA.hasNextDouble()) {

            double valueZeusA = scannerZeusA.nextDouble();

            zeusAnti.add(valueZeusA);
            
            }   
        }
            
    }
    
    //
    //
    // pobiernie wartosci kooperacja z pliku txt w formacie double
    //
    //
    
    class ListaKoopIndexBohaterow{
        
        
       public void abaddonKoopIndex() throws FileNotFoundException{
            
            InputStream l18  = getClass().getResourceAsStream("abaddonKoop.txt");
            
         Scanner scannerAbaddonK = new Scanner(l18);
           
            while (scannerAbaddonK.hasNextDouble()) {

            double valueAbaddonK = scannerAbaddonK.nextDouble();

            abaddonKoop.add(valueAbaddonK);
            
            }   
        }
        
        public void alchemistKoopIndex() throws FileNotFoundException{
            
            InputStream l19  = getClass().getResourceAsStream("alchemistKoop.txt");
            
         Scanner scannerAlchemistK = new Scanner(l19);
           
            while (scannerAlchemistK.hasNextDouble()) {

            double valueAlchemistK = scannerAlchemistK.nextDouble();

            alchemistKoop.add(valueAlchemistK);
            
            }   
        }
        
        public void ancientApparitionKoopIndex() throws FileNotFoundException{
            
            InputStream l20  = getClass().getResourceAsStream("ancientApparitionKoop.txt");
            
         Scanner scannerAncientApparitionK = new Scanner(l20);
           
            while (scannerAncientApparitionK.hasNextDouble()) {

            double valueAncientApparitionK = scannerAncientApparitionK.nextDouble();

            ancientApparitionKoop.add(valueAncientApparitionK);
            
            }   
        }
        
        public void antiMageKoopIndex() throws FileNotFoundException{
            
            InputStream l21  = getClass().getResourceAsStream("antiMageKoop.txt");
            
         Scanner scannerKoopMageK = new Scanner(l21);
           
            while (scannerKoopMageK.hasNextDouble()) {

            double valueKoopMageK = scannerKoopMageK.nextDouble();

            antiMageKoop.add(valueKoopMageK);
            
            }   
        }
        
        public void arcWardenKoopIndex() throws FileNotFoundException{
            
            InputStream l22  = getClass().getResourceAsStream("arcWardenKoop.txt");
            
         Scanner scannerArcWardenK = new Scanner(l22);
           
            while (scannerArcWardenK.hasNextDouble()) {

            double valueArcWardenK = scannerArcWardenK.nextDouble();

            arcWardenKoop.add(valueArcWardenK);
            
            }   
        }
        
        public void axeKoopIndex() throws FileNotFoundException{
            
            InputStream l23  = getClass().getResourceAsStream("axeKoop.txt");
            
         Scanner scannerAxeK = new Scanner(l23);
           
            while (scannerAxeK.hasNextDouble()) {

            double valueAxeK = scannerAxeK.nextDouble();

            axeKoop.add(valueAxeK);
            
            }   
        }
        
        public void baneKoopIndex() throws FileNotFoundException{
            
            InputStream l24  = getClass().getResourceAsStream("baneKoop.txt");
            
         Scanner scannerBaneK = new Scanner(l24);
           
            while (scannerBaneK.hasNextDouble()) {

            double valueBaneK = scannerBaneK.nextDouble();

            baneKoop.add(valueBaneK);
            
            }   
        }
        
        public void batriderKoopIndex() throws FileNotFoundException{
            
            InputStream l25 = getClass().getResourceAsStream("batriderKoop.txt");
            
         Scanner scannerBatriderK = new Scanner(l25);
           
            while (scannerBatriderK.hasNextDouble()) {

            double valueBatriderK = scannerBatriderK.nextDouble();

            batriderKoop.add(valueBatriderK);
            
            }   
        }
        
        public void beastmasterKoopIndex() throws FileNotFoundException{
            
            InputStream l26  = getClass().getResourceAsStream("beastmasterKoop.txt");
            
         Scanner scannerBeastmasterK = new Scanner(l26);
           
            while (scannerBeastmasterK.hasNextDouble()) {

            double valueBeastmasterK = scannerBeastmasterK.nextDouble();

            beastmasterKoop.add(valueBeastmasterK);
            
            }   
        }
        
        public void bloodseekerKoopIndex() throws FileNotFoundException{
            
            InputStream l27  = getClass().getResourceAsStream("bloodseekerKoop.txt");
            
         Scanner scannerBloodseekerK = new Scanner(l27);
           
            while (scannerBloodseekerK.hasNextDouble()) {

            double valueBloodseekerK = scannerBloodseekerK.nextDouble();

            bloodseekerKoop.add(valueBloodseekerK);
            
            }   
        }
        
        public void bountyHunterKoopIndex() throws FileNotFoundException{
            
            InputStream l28  = getClass().getResourceAsStream("bountyHunterKoop.txt");
            
         Scanner scannerBountyHunterK = new Scanner(l28);
           
            while (scannerBountyHunterK.hasNextDouble()) {

            double valueBountyHunterK = scannerBountyHunterK.nextDouble();

            bountyHunterKoop.add(valueBountyHunterK);
            
            }   
        }
        
        public void brewmasterKoopIndex() throws FileNotFoundException{
            
            InputStream l29  = getClass().getResourceAsStream("brewmasterKoop.txt");
            
         Scanner scannerBrewmasterK = new Scanner(l29);
           
            while (scannerBrewmasterK.hasNextDouble()) {

            double valueBrewmasterK = scannerBrewmasterK.nextDouble();

            brewmasterKoop.add(valueBrewmasterK);
            
            }   
        }
        
        public void bristlebackKoopIndex() throws FileNotFoundException{
            
            InputStream l30  = getClass().getResourceAsStream("bristlebackKoop.txt");
            
         Scanner scannerBristlebackK = new Scanner(l30);
           
            while (scannerBristlebackK.hasNextDouble()) {

            double valueBristlebackK = scannerBristlebackK.nextDouble();

            bristlebackKoop.add(valueBristlebackK);
            
            }   
        }
        
        public void broodmotherKoopIndex() throws FileNotFoundException{
            
            InputStream l31  = getClass().getResourceAsStream("broodmotherKoop.txt");
            
         Scanner scannerBroodmotherK = new Scanner(l31);
           
            while (scannerBroodmotherK.hasNextDouble()) {

            double valueBroodmotherK = scannerBroodmotherK.nextDouble();

            broodmotherKoop.add(valueBroodmotherK);
            
            }   
        }
        
        public void centaurWarrunnerKoopIndex() throws FileNotFoundException{
            
            InputStream l32  = getClass().getResourceAsStream("centaurWarrunnerKoop.txt");
            
         Scanner scannerCentaurWarrunnerK = new Scanner(l32);
           
            while (scannerCentaurWarrunnerK.hasNextDouble()) {

            double valueCentaurWarrunnerK = scannerCentaurWarrunnerK.nextDouble();

            centaurWarrunnerKoop.add(valueCentaurWarrunnerK);
            
            }   
        }
        
        public void chaosKnightKoopIndex() throws FileNotFoundException{
            
            InputStream l33  = getClass().getResourceAsStream("chaosKnightKoop.txt");
            
         Scanner scannerChaosKnightK = new Scanner(l33);
           
            while (scannerChaosKnightK.hasNextDouble()) {

            double valueChaosKnightK = scannerChaosKnightK.nextDouble();

            chaosKnightKoop.add(valueChaosKnightK);
            
            }   
        }
        
        public void chenKoopIndex() throws FileNotFoundException{
            
            InputStream l34 = getClass().getResourceAsStream("chenKoop.txt");
            
         Scanner scannerChenK = new Scanner(l34);
           
            while (scannerChenK.hasNextDouble()) {

            double valueChenK = scannerChenK.nextDouble();

            chenKoop.add(valueChenK);
            
            }   
        }
        
        public void clinkzKoopIndex() throws FileNotFoundException{
            
            InputStream l35  = getClass().getResourceAsStream("clinkzKoop.txt");
            
         Scanner scannerClinkzK = new Scanner(l35);
           
            while (scannerClinkzK.hasNextDouble()) {

            double valueClinkzK = scannerClinkzK.nextDouble();

            clinkzKoop.add(valueClinkzK);
            
            }   
        }
        
        public void clockwerkKoopIndex() throws FileNotFoundException{
            
            InputStream l36  = getClass().getResourceAsStream("clockwerkKoop.txt");
            
         Scanner scannerClockwerkK = new Scanner(l36);
           
            while (scannerClockwerkK.hasNextDouble()) {

            double valueClockwerkK = scannerClockwerkK.nextDouble();

            clockwerkKoop.add(valueClockwerkK);
            
            }   
        }
        
        public void crystalMaidenKoopIndex() throws FileNotFoundException{
            
            InputStream l37  = getClass().getResourceAsStream("crystalMaidenKoop.txt");
            
         Scanner scannerCrystalMaidenK = new Scanner(l37);
           
            while (scannerCrystalMaidenK.hasNextDouble()) {

            double valueCrystalMaidenK = scannerCrystalMaidenK.nextDouble();

            crystalMaidenKoop.add(valueCrystalMaidenK);
            
            }   
        }
        
        public void darkSeerKoopIndex() throws FileNotFoundException{
            
            InputStream l38  = getClass().getResourceAsStream("darkSeerKoop.txt");
            
         Scanner scannerDarkSeerK = new Scanner(l38);
           
            while (scannerDarkSeerK.hasNextDouble()) {

            double valueDarkSeerK = scannerDarkSeerK.nextDouble();

            darkSeerKoop.add(valueDarkSeerK);
            
            }   
        }
        
        public void dazzleKoopIndex() throws FileNotFoundException{
            
            InputStream l39  = getClass().getResourceAsStream("dazzleKoop.txt");
            
         Scanner scannerDazzleK = new Scanner(l39);
           
            while (scannerDazzleK.hasNextDouble()) {

            double valueDazzleK = scannerDazzleK.nextDouble();

            dazzleKoop.add(valueDazzleK);
            
            }   
        }
        
        public void deathProphetKoopIndex() throws FileNotFoundException{
            
            InputStream l40  = getClass().getResourceAsStream("deathProphetKoop.txt");
            
         Scanner scannerDeathProphetK = new Scanner(l40);
           
            while (scannerDeathProphetK.hasNextDouble()) {

            double valueDeathProphetK = scannerDeathProphetK.nextDouble();

            deathProphetKoop.add(valueDeathProphetK);
            
            }   
        }
        
        public void disruptorKoopIndex() throws FileNotFoundException{
            
            InputStream l41  = getClass().getResourceAsStream("disruptorKoop.txt");
            
         Scanner scannerDisruptorK = new Scanner(l41);
           
            while (scannerDisruptorK.hasNextDouble()) {

            double valueDisruptorK = scannerDisruptorK.nextDouble();

            disruptorKoop.add(valueDisruptorK);
            
            }   
        }
        
        public void doomKoopIndex() throws FileNotFoundException{
            
            InputStream l42  = getClass().getResourceAsStream("doomKoop.txt");
            
         Scanner scannerDoomK = new Scanner(l42);
           
            while (scannerDoomK.hasNextDouble()) {

            double valueDoomK = scannerDoomK.nextDouble();

            doomKoop.add(valueDoomK);
            
            }   
        }
        
        public void dragonKnightKoopIndex() throws FileNotFoundException{
            
            InputStream l43  = getClass().getResourceAsStream("dKKoop.txt");
            
         Scanner scannerDkK = new Scanner(l43);
           
            while (scannerDkK.hasNextDouble()) {

            double valueDkK = scannerDkK.nextDouble();

            dKKoop.add(valueDkK);
            
            }   
        }
        
        public void drowRangerKoopIndex() throws FileNotFoundException{
            
            InputStream l44  = getClass().getResourceAsStream("drowRangerKoop.txt");
            
         Scanner scannerDrowRangerK = new Scanner(l44);
           
            while (scannerDrowRangerK.hasNextDouble()) {

            double valueDrowRangerK = scannerDrowRangerK.nextDouble();

            drowRangerKoop.add(valueDrowRangerK);
            
            }   
        }
        
        public void earthSpiritKoopIndex() throws FileNotFoundException{
            
            
            InputStream l45  = getClass().getResourceAsStream("earthSpiritKoop.txt");
            
         Scanner scannerEarthSpiritK = new Scanner(l45);
           
            while (scannerEarthSpiritK.hasNextDouble()) {

            double valueEarthSpiritK = scannerEarthSpiritK.nextDouble();

            earthSpiritKoop.add(valueEarthSpiritK);
            
            }   
        }
        
         public void eSKoopIndex() throws FileNotFoundException{
             
             InputStream l46  = getClass().getResourceAsStream("eSKoop.txt");
            
         Scanner scannereSK = new Scanner(l46);
           
            while (scannereSK.hasNextDouble()) {

            double valueeSK = scannereSK.nextDouble();

            eSKoop.add(valueeSK);
            
            }   
        }
        
        public void elderTitanKoopIndex() throws FileNotFoundException{
            
            InputStream l47  = getClass().getResourceAsStream("elderTitanKoop.txt");
            
         Scanner scannerElderTitanK = new Scanner(l47);
           
            while (scannerElderTitanK.hasNextDouble()) {

            double valueElderTitanK = scannerElderTitanK.nextDouble();

            elderTitanKoop.add(valueElderTitanK);
            
            }   
        }
         
        public void emberSpiritKoopIndex() throws FileNotFoundException{
            
            InputStream l48  = getClass().getResourceAsStream("emberSpiritKoop.txt");
            
         Scanner scannerEmberSpiritK = new Scanner(l48);
           
            while (scannerEmberSpiritK.hasNextDouble()) {

            double valueEmberSpiritK = scannerEmberSpiritK.nextDouble();

            emberSpiritKoop.add(valueEmberSpiritK);
            
            }   
        }
        
        public void enchantressKoopIndex() throws FileNotFoundException{
            
            InputStream l49  = getClass().getResourceAsStream("enchantressKoop.txt");
            
         Scanner scannerEnchantressK = new Scanner(l49);
           
            while (scannerEnchantressK.hasNextDouble()) {

            double valueEnchantressK = scannerEnchantressK.nextDouble();

            enchantressKoop.add(valueEnchantressK);
            
            }   
        }
        
        public void enigmaKoopIndex() throws FileNotFoundException{
            
            InputStream l50  = getClass().getResourceAsStream("enigmaKoop.txt");
            
         Scanner scannerEnigmaK = new Scanner(l50);
           
            while (scannerEnigmaK.hasNextDouble()) {

            double valueEnigmaK = scannerEnigmaK.nextDouble();

            enigmaKoop.add(valueEnigmaK);
            
            }   
        }
        
        public void facelessVoidKoopIndex() throws FileNotFoundException{
            
            InputStream l51  = getClass().getResourceAsStream("voidKoop.txt");
            
         Scanner scannerFacelessVoidK = new Scanner(l51);
           
            while (scannerFacelessVoidK.hasNextDouble()) {

            double valueFacelessVoidK = scannerFacelessVoidK.nextDouble();

            voidKoop.add(valueFacelessVoidK);
            
            }   
        }
        
        public void gyrocopterKoopIndex() throws FileNotFoundException{
            
            InputStream l52  = getClass().getResourceAsStream("gyrocopterKoop.txt");
            
         Scanner scannerGyrocopterK = new Scanner(l52);
           
            while (scannerGyrocopterK.hasNextDouble()) {

            double valueGyrocopterK = scannerGyrocopterK.nextDouble();

            gyrocopterKoop.add(valueGyrocopterK);
            
            }   
        }
        
         public void huskarKoopIndex() throws FileNotFoundException{
             
             InputStream l53  = getClass().getResourceAsStream("huskarKoop.txt");
            
         Scanner scannerHuskarK = new Scanner(l53);
           
            while (scannerHuskarK.hasNextDouble()) {

            double valueHuskarK = scannerHuskarK.nextDouble();

           huskarKoop.add(valueHuskarK);
            
            }   
        }
        
        public void invokerKoopIndex() throws FileNotFoundException{
            
            InputStream l54  = getClass().getResourceAsStream("invokerKoop.txt");
            
         Scanner scannerInvokerK = new Scanner(l54);
           
            while (scannerInvokerK.hasNextDouble()) {

            double valueInvokerK = scannerInvokerK.nextDouble();

            invokerKoop.add(valueInvokerK);
            
            }   
        }
        
        public void ioKoopIndex() throws FileNotFoundException{
            
            InputStream l55  = getClass().getResourceAsStream("ioKoop.txt");
            
         Scanner scannerIoK = new Scanner(l55);
           
            while (scannerIoK.hasNextDouble()) {

            double valueIoK = scannerIoK.nextDouble();

            ioKoop.add(valueIoK);
            
            }   
        }
        
        public void jakiroKoopIndex() throws FileNotFoundException{
            
            InputStream l56  = getClass().getResourceAsStream("jakiroKoop.txt");
            
         Scanner scannerJakiroK = new Scanner(l56);
           
            while (scannerJakiroK.hasNextDouble()) {

            double valueJakiroK = scannerJakiroK.nextDouble();

            jakiroKoop.add(valueJakiroK);
            
            }   
        }
        
        public void juggernautKoopIndex() throws FileNotFoundException{
            
            InputStream l57  = getClass().getResourceAsStream("juggernautKoop.txt");
            
         Scanner scannerJuggernautK = new Scanner(l57);
           
            while (scannerJuggernautK.hasNextDouble()) {

            double valueJuggernautK = scannerJuggernautK.nextDouble();

            juggernautKoop.add(valueJuggernautK);
            
            }   
        }
        
        public void keeperOfTheLightKoopIndex() throws FileNotFoundException{
            
            InputStream l58  = getClass().getResourceAsStream("keeperOfTheLightKoop.txt");
            
         Scanner scannerKeeperOfTheLightK = new Scanner(l58);
           
            while (scannerKeeperOfTheLightK.hasNextDouble()) {

            double valueKeeperOfTheLightK = scannerKeeperOfTheLightK.nextDouble();

            keeperOfTheLightKoop.add(valueKeeperOfTheLightK);
            
            }   
        }
        
        public void kunkkaKoopIndex() throws FileNotFoundException{
            
            InputStream l59  = getClass().getResourceAsStream("kunkkaKoop.txt");
            
         Scanner scannerKunkkaK = new Scanner(l59);
           
            while (scannerKunkkaK.hasNextDouble()) {

            double valueKunkkaK = scannerKunkkaK.nextDouble();

            kunkkaKoop.add(valueKunkkaK);
            
            }   
        }
        
        public void legionCommanderKoopIndex() throws FileNotFoundException{
            
            InputStream l60  = getClass().getResourceAsStream("legionCommanderKoop.txt");
            
         Scanner scannerLegionCommanderK = new Scanner(l60);
           
            while (scannerLegionCommanderK.hasNextDouble()) {

            double valueLegionCommanderK = scannerLegionCommanderK.nextDouble();

            legionCommanderKoop.add(valueLegionCommanderK);
            
            }   
        }
        
        public void leshracKoopIndex() throws FileNotFoundException{
            
            InputStream l61  = getClass().getResourceAsStream("leshracKoop.txt");
            
         Scanner scannerLeshracK = new Scanner(l61);
           
            while (scannerLeshracK.hasNextDouble()) {

            double valueLeshracK = scannerLeshracK.nextDouble();

            leshracKoop.add(valueLeshracK);
            
            }   
        }
        
        public void lichKoopIndex() throws FileNotFoundException{
            
            InputStream l62  = getClass().getResourceAsStream("lichKoop.txt");
            
         Scanner scannerLichK = new Scanner(l62);
           
            while (scannerLichK.hasNextDouble()) {

            double valueLichK = scannerLichK.nextDouble();

            lichKoop.add(valueLichK);
            
            }   
        }
        
        public void lifestealerKoopIndex() throws FileNotFoundException{
            
            InputStream l63  = getClass().getResourceAsStream("lifestealerKoop.txt");
            
         Scanner scannerLifestealerK = new Scanner(l63);
           
            while (scannerLifestealerK.hasNextDouble()) {

            double valueLifestealerK = scannerLifestealerK.nextDouble();

            lifeStealerKoop.add(valueLifestealerK);
            
            }   
        }
        
        public void linaKoopIndex() throws FileNotFoundException{
            
            InputStream l64  = getClass().getResourceAsStream("linaKoop.txt");
            
         Scanner scannerLinaK = new Scanner(l64);
           
            while (scannerLinaK.hasNextDouble()) {

            double valueLinaK = scannerLinaK.nextDouble();

            linaKoop.add(valueLinaK);
            
            }   
        }
        
        public void lionKoopIndex() throws FileNotFoundException{
            
            InputStream l65  = getClass().getResourceAsStream("lionKoop.txt");
            
         Scanner scannerLionK = new Scanner(l65);
           
            while (scannerLionK.hasNextDouble()) {

            double valueLionK = scannerLionK.nextDouble();

            lionKoop.add(valueLionK);
            
            }   
        }
        
        public void loneDruidKoopIndex() throws FileNotFoundException{
            
            InputStream l66  = getClass().getResourceAsStream("loneDruidKoop.txt");
            
         Scanner scannerLoneDruidK = new Scanner(l66);
           
            while (scannerLoneDruidK.hasNextDouble()) {

            double valueLoneDruidK = scannerLoneDruidK.nextDouble();

            loneDruidKoop.add(valueLoneDruidK);
            
            }   
        }
        
        public void lunaKoopIndex() throws FileNotFoundException{
            
            InputStream l67  = getClass().getResourceAsStream("lunaKoop.txt");
            
         Scanner scannerLunaK = new Scanner(l67);
           
            while (scannerLunaK.hasNextDouble()) {

            double valueLunaK = scannerLunaK.nextDouble();

            lunaKoop.add(valueLunaK);
            
            }   
        }
        
        public void lycanKoopIndex() throws FileNotFoundException{
            
            InputStream l68  = getClass().getResourceAsStream("lycanKoop.txt");
            
         Scanner scannerLycanK = new Scanner(l68);
           
            while (scannerLycanK.hasNextDouble()) {

            double valueLycanK = scannerLycanK.nextDouble();

            lycanKoop.add(valueLycanK);
            
            }   
        }
        
        public void magnusKoopIndex() throws FileNotFoundException{
            
            InputStream l69  = getClass().getResourceAsStream("magnusKoop.txt");
            
         Scanner scannerMagnusK = new Scanner(l69);
           
            while (scannerMagnusK.hasNextDouble()) {

            double valueMagnusK = scannerMagnusK.nextDouble();

            magnusKoop.add(valueMagnusK);
            
            }   
        }
        
        public void medusaKoopIndex() throws FileNotFoundException{
            
            InputStream l70  = getClass().getResourceAsStream("medusaKoop.txt");
            
         Scanner scannerMedusaK = new Scanner(l70);
           
            while (scannerMedusaK.hasNextDouble()) {

            double valueMedusaK = scannerMedusaK.nextDouble();

            medusaKoop.add(valueMedusaK);
            
            }   
        }
        
        public void meepoKoopIndex() throws FileNotFoundException{
            
            InputStream l71  = getClass().getResourceAsStream("meepoKoop.txt");
            
         Scanner scannerMeepoK = new Scanner(l71);
           
            while (scannerMeepoK.hasNextDouble()) {

            double valueMeepoK = scannerMeepoK.nextDouble();

            meepoKoop.add(valueMeepoK);
            
            }   
        }
        
        public void miranaKoopIndex() throws FileNotFoundException{
            
            InputStream l72  = getClass().getResourceAsStream("miranaKoop.txt");
            
         Scanner scannerMiranaK = new Scanner(l72);
           
            while (scannerMiranaK.hasNextDouble()) {

            double valueMiranaK = scannerMiranaK.nextDouble();

            miranaKoop.add(valueMiranaK);
            
            }   
        }
        
        public void morphlingKoopIndex() throws FileNotFoundException{
            
            InputStream l73  = getClass().getResourceAsStream("morphlingKoop.txt");
            
         Scanner scannerMorphlingK = new Scanner(l73);
           
            while (scannerMorphlingK.hasNextDouble()) {

            double valueMorphlingK = scannerMorphlingK.nextDouble();

            morphlingKoop.add(valueMorphlingK);
            
            }   
        }
        
        public void nagaSirenKoopIndex() throws FileNotFoundException{
            
            InputStream l74  = getClass().getResourceAsStream("nagaSirenKoop.txt");
            
         Scanner scannerNagaSirenK = new Scanner(l74);
           
            while (scannerNagaSirenK.hasNextDouble()) {

            double valueNagaSirenK = scannerNagaSirenK.nextDouble();

            nagaSirenKoop.add(valueNagaSirenK);
            
            }   
        }
        
        public void naturesProphetKoopIndex() throws FileNotFoundException{
            
            InputStream l75  = getClass().getResourceAsStream("naturesProphetKoop.txt");
            
         Scanner scannerNaturesProphetK = new Scanner(l75);
           
            while (scannerNaturesProphetK.hasNextDouble()) {

            double valueNaturesProphetK = scannerNaturesProphetK.nextDouble();

            naturesProphetKoop.add(valueNaturesProphetK);
            
            }   
        }
        
        public void necrophosKoopIndex() throws FileNotFoundException{
            
            InputStream l76  = getClass().getResourceAsStream("necrophosKoop.txt");
            
         Scanner scannerNecrophosK = new Scanner(l76);
           
            while (scannerNecrophosK.hasNextDouble()) {

            double valueNecrophosK = scannerNecrophosK.nextDouble();

            necrophosKoop.add(valueNecrophosK);
            
            }   
        }
        
        public void nightStalkerKoopIndex() throws FileNotFoundException{
            
            InputStream l77  = getClass().getResourceAsStream("nightStalkerKoop.txt");
            
         Scanner scannerNightStalkerK = new Scanner(l77);
           
            while (scannerNightStalkerK.hasNextDouble()) {

            double valueNightStalkerK = scannerNightStalkerK.nextDouble();

            nightStalkerKoop.add(valueNightStalkerK);
            
            }   
        }
        
        public void nyxAssassinKoopIndex() throws FileNotFoundException{
            
            InputStream l78  = getClass().getResourceAsStream("nyxAssassinKoop.txt");
            
         Scanner scannerNyxAssassinK = new Scanner(l78);
           
            while (scannerNyxAssassinK.hasNextDouble()) {

            double valueNyxAssassinK = scannerNyxAssassinK.nextDouble();

            nyxAssassinKoop.add(valueNyxAssassinK);
            
            }   
        }
        
        public void ogreMagiKoopIndex() throws FileNotFoundException{
            
            InputStream l79  = getClass().getResourceAsStream("ogreMagiKoop.txt");
            
         Scanner scannerOgreMagiK = new Scanner(l79);
           
            while (scannerOgreMagiK.hasNextDouble()) {

            double valueOgreMagiK = scannerOgreMagiK.nextDouble();

            ogreMagiKoop.add(valueOgreMagiK);
            
            }   
        }
        
        public void omniknightKoopIndex() throws FileNotFoundException{
            
            InputStream l80  = getClass().getResourceAsStream("omniknightKoop.txt");
            
         Scanner scannerOmniknightK = new Scanner(l80);
           
            while (scannerOmniknightK.hasNextDouble()) {

            double valueOmniknightK = scannerOmniknightK.nextDouble();

            omniKnightKoop.add(valueOmniknightK);
            
            }   
        }
        
        public void oracleKoopIndex() throws FileNotFoundException{
            
            InputStream l81  = getClass().getResourceAsStream("oracleKoop.txt");
            
         Scanner scannerOracleK = new Scanner(l81);
           
            while (scannerOracleK.hasNextDouble()) {

            double valueOracleK = scannerOracleK.nextDouble();

            oracleKoop.add(valueOracleK);
            
            }   
        }
        
        public void outworldDevourerKoopIndex() throws FileNotFoundException{
            
            InputStream l82  = getClass().getResourceAsStream("outworldDevourerKoop.txt");
            
         Scanner scannerOutworldDevourerK = new Scanner(l82);
           
            while (scannerOutworldDevourerK.hasNextDouble()) {

            double valueOutworldDevourerK = scannerOutworldDevourerK.nextDouble();

            outworldDevourerKoop.add(valueOutworldDevourerK);
            
            }   
        }
        
        public void phantomAssassinKoopIndex() throws FileNotFoundException{
            
            InputStream l83  = getClass().getResourceAsStream("phantomAssassinKoop.txt");
            
         Scanner scannerPhantomAssassinK = new Scanner(l83);
           
            while (scannerPhantomAssassinK.hasNextDouble()) {

            double valuePhantomAssassinK = scannerPhantomAssassinK.nextDouble();

            phantomAssassinKoop.add(valuePhantomAssassinK);
            
            }   
        }
        
        public void phantomLancerKoopIndex() throws FileNotFoundException{
            
            InputStream l84  = getClass().getResourceAsStream("phantomLancerKoop.txt");
            
         Scanner scannerPhantomLancerK = new Scanner(l84);
           
            while (scannerPhantomLancerK.hasNextDouble()) {

            double valuePhantomLancerK = scannerPhantomLancerK.nextDouble();

            phantomLancerKoop.add(valuePhantomLancerK);
            
            }   
        }
        
        public void phoenixKoopIndex() throws FileNotFoundException{
            
            InputStream l85  = getClass().getResourceAsStream("phoenixKoop.txt");
            
         Scanner scannerPhoenixK = new Scanner(l85);
           
            while (scannerPhoenixK.hasNextDouble()) {

            double valuePhoenixK = scannerPhoenixK.nextDouble();

            phoenixKoop.add(valuePhoenixK);
            
            }   
        }
        
        public void puckKoopIndex() throws FileNotFoundException{
            
            InputStream l86  = getClass().getResourceAsStream("puckKoop.txt");
            
         Scanner scannerPuckK = new Scanner(l86);
           
            while (scannerPuckK.hasNextDouble()) {

            double valuePuckK = scannerPuckK.nextDouble();

            puckKoop.add(valuePuckK);
            
            }   
        }
        
        public void pudgeKoopIndex() throws FileNotFoundException{
            
            InputStream l87  = getClass().getResourceAsStream("pudgeKoop.txt");
            
         Scanner scannerPudgeK = new Scanner(l87);
           
            while (scannerPudgeK.hasNextDouble()) {

            double valuePudgeK = scannerPudgeK.nextDouble();

            pudgeKoop.add(valuePudgeK);
            
            }   
        }
        
        public void pugnaKoopIndex() throws FileNotFoundException{
            
            InputStream l88  = getClass().getResourceAsStream("pugnaKoop.txt");
            
         Scanner scannerPugnaK = new Scanner(l88);
           
            while (scannerPugnaK.hasNextDouble()) {

            double valuePugnaK = scannerPugnaK.nextDouble();

            pugnaKoop.add(valuePugnaK);
            
            }   
        }
        
        public void queenOfPainKoopIndex() throws FileNotFoundException{
            
            InputStream l89  = getClass().getResourceAsStream("queenOfPainKoop.txt");
            
         Scanner scannerQueenOfPainK = new Scanner(l89);
           
            while (scannerQueenOfPainK.hasNextDouble()) {

            double valueQueenOfPainK = scannerQueenOfPainK.nextDouble();

            queenOfPainKoop.add(valueQueenOfPainK);
            
            }   
        }
        
        public void razorKoopIndex() throws FileNotFoundException{
            
            InputStream l90  = getClass().getResourceAsStream("razorKoop.txt");
            
         Scanner scannerRazorK = new Scanner(l90);
           
            while (scannerRazorK.hasNextDouble()) {

            double valueRazorK = scannerRazorK.nextDouble();

            razorKoop.add(valueRazorK);
            
            }   
        }
        
        public void rikiKoopIndex() throws FileNotFoundException{
            
            InputStream l91  = getClass().getResourceAsStream("rikiKoop.txt");
            
         Scanner scannerRikiK = new Scanner(l91);
           
            while (scannerRikiK.hasNextDouble()) {

            double valueRikiK = scannerRikiK.nextDouble();

            rikiKoop.add(valueRikiK);
            
            }   
        }
        
        public void rubickKoopIndex() throws FileNotFoundException{
            
            InputStream l92  = getClass().getResourceAsStream("rubickKoop.txt");
            
         Scanner scannerRubickK = new Scanner(l92);
           
            while (scannerRubickK.hasNextDouble()) {

            double valueRubickK = scannerRubickK.nextDouble();

            rubickKoop.add(valueRubickK);
            
            }   
        }
        
        public void sandKingKoopIndex() throws FileNotFoundException{
            
            InputStream l93  = getClass().getResourceAsStream("sandKingKoop.txt");
            
         Scanner scannerSandKingK = new Scanner(l93);
           
            while (scannerSandKingK.hasNextDouble()) {

            double valueSandKingK = scannerSandKingK.nextDouble();

            sandKingKoop.add(valueSandKingK);
            
            }   
        }
        
        public void shadowDemonKoopIndex() throws FileNotFoundException{
            
            InputStream l94  = getClass().getResourceAsStream("shadowDemonKoop.txt");
            
         Scanner scannerShadowDemonK = new Scanner(l94);
           
            while (scannerShadowDemonK.hasNextDouble()) {

            double valueShadowDemonK = scannerShadowDemonK.nextDouble();

            shadowDemonKoop.add(valueShadowDemonK);
            
            }   
        }
        
        public void shadowFiendKoopIndex() throws FileNotFoundException{
            
            InputStream l95  = getClass().getResourceAsStream("shadowFiendKoop.txt");
            
         Scanner scannerShadowFiendK = new Scanner(l95);
           
            while (scannerShadowFiendK.hasNextDouble()) {

            double valueShadowFiendK = scannerShadowFiendK.nextDouble();

            shadowFiendKoop.add(valueShadowFiendK);
            
            }   
        }
        
        public void shadowShamanKoopIndex() throws FileNotFoundException{
            
            InputStream l96  = getClass().getResourceAsStream("shadowShamanKoop.txt");
            
         Scanner scannerShadowShamanK = new Scanner(l96);
           
            while (scannerShadowShamanK.hasNextDouble()) {

            double valueShadowShamanK = scannerShadowShamanK.nextDouble();

            shadowShamanKoop.add(valueShadowShamanK);
            
            }   
        }
        
        public void silencerKoopIndex() throws FileNotFoundException{
            
            InputStream l97  = getClass().getResourceAsStream("silencerKoop.txt");
            
         Scanner scannerSilencerK = new Scanner(l97);
           
            while (scannerSilencerK.hasNextDouble()) {

            double valueSilencerK = scannerSilencerK.nextDouble();

            silencerKoop.add(valueSilencerK);
            
            }   
        }
        
        public void skywrathMageKoopIndex() throws FileNotFoundException{
            
            InputStream l98  = getClass().getResourceAsStream("skywrathMageKoop.txt");
            
         Scanner scannerSkywrathMageK = new Scanner(l98);
           
            while (scannerSkywrathMageK.hasNextDouble()) {

            double valueSkywrathMageK = scannerSkywrathMageK.nextDouble();

            skywrathMageKoop.add(valueSkywrathMageK);
            
            }   
        }
        
        public void slardarKoopIndex() throws FileNotFoundException{
            
            InputStream l99  = getClass().getResourceAsStream("slardarKoop.txt");
            
         Scanner scannerSlardarK = new Scanner(l99);
           
            while (scannerSlardarK.hasNextDouble()) {

            double valueSlardarK = scannerSlardarK.nextDouble();

            slardarKoop.add(valueSlardarK);
            
            }   
        }
        
        public void slarkKoopIndex() throws FileNotFoundException{
            
            InputStream l100  = getClass().getResourceAsStream("slarkKoop.txt");
            
         Scanner scannerSlarkK = new Scanner(l100);
           
            while (scannerSlarkK.hasNextDouble()) {

            double valueSlarkK = scannerSlarkK.nextDouble();

            slarkKoop.add(valueSlarkK);
            
            }   
        }
        
        public void sniperKoopIndex() throws FileNotFoundException{
            
            InputStream l101  = getClass().getResourceAsStream("sniperKoop.txt");
            
         Scanner scannerSniperK = new Scanner(l101);
           
            while (scannerSniperK.hasNextDouble()) {

            double valueSniperK = scannerSniperK.nextDouble();

            sniperKoop.add(valueSniperK);
            
            }   
        }
        
        public void spectreKoopIndex() throws FileNotFoundException{
            
            InputStream l102  = getClass().getResourceAsStream("spectreKoop.txt");
            
         Scanner scannerSpectreK = new Scanner(l102);
           
            while (scannerSpectreK.hasNextDouble()) {

            double valueSpectreK = scannerSpectreK.nextDouble();

            spectreKoop.add(valueSpectreK);
            
            }   
        }
        
        public void spiritBreakerKoopIndex() throws FileNotFoundException{
            
            InputStream l103  = getClass().getResourceAsStream("spiritBreakerKoop.txt");
            
         Scanner scannerSpiritBreakerK = new Scanner(l103);
           
            while (scannerSpiritBreakerK.hasNextDouble()) {

            double valueSpiritBreakerK = scannerSpiritBreakerK.nextDouble();

            spiritBreakerKoop.add(valueSpiritBreakerK);
            
            }   
        }
        
        public void stormSpiritKoopIndex() throws FileNotFoundException{
            
            InputStream l104  = getClass().getResourceAsStream("stormSpiritKoop.txt");
            
         Scanner scannerStormSpiritK = new Scanner(l104);
           
            while (scannerStormSpiritK.hasNextDouble()) {

            double valueStormSpiritK = scannerStormSpiritK.nextDouble();

            stormSpiritKoop.add(valueStormSpiritK);
            
            }   
        }
        
        public void svenKoopIndex() throws FileNotFoundException{
            
            InputStream l105  = getClass().getResourceAsStream("svenKoop.txt");
           
         Scanner scannerSvenK = new Scanner(l105);
           
            while (scannerSvenK.hasNextDouble()) {

            double valueSvenK = scannerSvenK.nextDouble();

            svenKoop.add(valueSvenK);
            
            }   
        }
        
        public void techiesKoopIndex() throws FileNotFoundException{
            
            InputStream l106  = getClass().getResourceAsStream("techiesKoop.txt");
            
         Scanner scannerTechiesK = new Scanner(l106);
           
            while (scannerTechiesK.hasNextDouble()) {

            double valueTechiesK = scannerTechiesK.nextDouble();

            techiesKoop.add(valueTechiesK);
            
            }   
        }
        
        public void templarAssassinKoopIndex() throws FileNotFoundException{
            
            InputStream l107  = getClass().getResourceAsStream("templarAssassinKoop.txt");
            
         Scanner scannerTemplarAssassinK = new Scanner(l107);
           
            while (scannerTemplarAssassinK.hasNextDouble()) {

            double valueTemplarAssassinK = scannerTemplarAssassinK.nextDouble();

            templarAssassinKoop.add(valueTemplarAssassinK);
            
            }   
        }
        
        public void terrorbladeKoopIndex() throws FileNotFoundException{
            
            InputStream l108  = getClass().getResourceAsStream("terrorbladeKoop.txt");
            
         Scanner scannerTerrorbladeK = new Scanner(l108);
           
            while (scannerTerrorbladeK.hasNextDouble()) {

            double valueTerrorbladeK = scannerTerrorbladeK.nextDouble();

            terrorbladeKoop.add(valueTerrorbladeK);
            
            }   
        }
        
        public void tidehunterKoopIndex() throws FileNotFoundException{
            
            InputStream l109  = getClass().getResourceAsStream("tidehunterKoop.txt");
            
         Scanner scannerTidehunterK = new Scanner(l109);
           
            while (scannerTidehunterK.hasNextDouble()) {

            double valueTidehunterK = scannerTidehunterK.nextDouble();

            tidehunterKoop.add(valueTidehunterK);
            
            }   
        }
        
        public void timbersawKoopIndex() throws FileNotFoundException{
            
            InputStream l110  = getClass().getResourceAsStream("timbersawKoop.txt");
            
         Scanner scannerTimbersawK = new Scanner(l110);
           
            while (scannerTimbersawK.hasNextDouble()) {

            double valueTimbersawK = scannerTimbersawK.nextDouble();

            timbersawKoop.add(valueTimbersawK);
            
            }   
        }
        
        public void tinkerKoopIndex() throws FileNotFoundException{
            
            InputStream l111  = getClass().getResourceAsStream("tinkerKoop.txt");
            
         Scanner scannerTinkerK = new Scanner(l111);
           
            while (scannerTinkerK.hasNextDouble()) {

            double valueTinkerK = scannerTinkerK.nextDouble();

            tinkerKoop.add(valueTinkerK);
            
            }   
        }
        
        public void tinyKoopIndex() throws FileNotFoundException{
            
            InputStream l112  = getClass().getResourceAsStream("tinyKoop.txt");
            
         Scanner scannerTinyK = new Scanner(l112);
           
            while (scannerTinyK.hasNextDouble()) {

            double valueTinyK = scannerTinyK.nextDouble();

            tinyKoop.add(valueTinyK);
            
            }   
        }
        
        public void treantProtectorKoopIndex() throws FileNotFoundException{
            
            InputStream l113  = getClass().getResourceAsStream("treantProtectorKoop.txt");
            
         Scanner scannerTreantProtectorK = new Scanner(l113);
           
            while (scannerTreantProtectorK.hasNextDouble()) {

            double valueTreantProtectorK = scannerTreantProtectorK.nextDouble();

            treantProtectorKoop.add(valueTreantProtectorK);
            
            }   
        }
        
        public void trollWarlordKoopIndex() throws FileNotFoundException{
            
            InputStream l114  = getClass().getResourceAsStream("trollWarlordKoop.txt");
            
         Scanner scannerTrollWarlordK = new Scanner(l114);
           
            while (scannerTrollWarlordK.hasNextDouble()) {

            double valueTrollWarlordK = scannerTrollWarlordK.nextDouble();

            trollWarlordKoop.add(valueTrollWarlordK);
            
            }   
        }
        
        public void tuskKoopIndex() throws FileNotFoundException{
            
            InputStream l115  = getClass().getResourceAsStream("tuskKoop.txt");
            
         Scanner scannerTuskK = new Scanner(l115);
           
            while (scannerTuskK.hasNextDouble()) {

            double valueTuskK = scannerTuskK.nextDouble();

            tuskKoop.add(valueTuskK);
            
            }   
        }
        
        public void undyingKoopIndex() throws FileNotFoundException{
            
            InputStream l116  = getClass().getResourceAsStream("undyingKoop.txt");
            
         Scanner scannerUndyingK = new Scanner(l116);
           
            while (scannerUndyingK.hasNextDouble()) {

            double valueUndyingK = scannerUndyingK.nextDouble();

            undyingKoop.add(valueUndyingK);
            
            }   
        }
        
        public void ursaKoopIndex() throws FileNotFoundException{
            
            InputStream l117  = getClass().getResourceAsStream("ursaKoop.txt");
            
         Scanner scannerUrsaK = new Scanner(l117);
           
            while (scannerUrsaK.hasNextDouble()) {

            double valueUrsaK = scannerUrsaK.nextDouble();

            ursaKoop.add(valueUrsaK);
            
            }   
        }
        
        public void vengefulSpiritKoopIndex() throws FileNotFoundException{
            
            InputStream l118  = getClass().getResourceAsStream("vengefulSpiritKoop.txt");
            
         Scanner scannerVengefulSpiritK = new Scanner(l118);
           
            while (scannerVengefulSpiritK.hasNextDouble()) {

            double valueVengefulSpiritK = scannerVengefulSpiritK.nextDouble();

            vengefulSpiritKoop.add(valueVengefulSpiritK);
            
            }   
        }
        
        public void venomancerKoopIndex() throws FileNotFoundException{
            
            InputStream l119  = getClass().getResourceAsStream("venomancerKoop.txt");
            
         Scanner scannerVenomancerK = new Scanner(l119);
           
            while (scannerVenomancerK.hasNextDouble()) {

            double valueVenomancerK = scannerVenomancerK.nextDouble();

            venomancerKoop.add(valueVenomancerK);
            
            }   
        }
        
        public void viperKoopIndex() throws FileNotFoundException{
            
            InputStream l120  = getClass().getResourceAsStream("viperKoop.txt");
            
         Scanner scannerViperK = new Scanner(l120);
           
            while (scannerViperK.hasNextDouble()) {

            double valueViperK = scannerViperK.nextDouble();

            viperKoop.add(valueViperK);
            
            }   
        }
        
        public void visageKoopIndex() throws FileNotFoundException{
            
            InputStream l121  = getClass().getResourceAsStream("visageKoop.txt");
            
         Scanner scannerVisageK = new Scanner(l121);
           
            while (scannerVisageK.hasNextDouble()) {

            double valueVisageK = scannerVisageK.nextDouble();

            visageKoop.add(valueVisageK);
            
            }   
        }
        
        public void warlockKoopIndex() throws FileNotFoundException{
            
            InputStream l122  = getClass().getResourceAsStream("warlockKoop.txt");
            
         Scanner scannerWarlockK = new Scanner(l122);
           
            while (scannerWarlockK.hasNextDouble()) {

            double valueWarlockK = scannerWarlockK.nextDouble();

            warlockKoop.add(valueWarlockK);
            
            }   
        }
        
        public void weaverKoopIndex() throws FileNotFoundException{
            
            InputStream l123  = getClass().getResourceAsStream("weaverKoop.txt");
            
         Scanner scannerWeaverK = new Scanner(l123);
           
            while (scannerWeaverK.hasNextDouble()) {

            double valueWeaverK = scannerWeaverK.nextDouble();

            weaverKoop.add(valueWeaverK);
            
            }   
        }
        
        public void windrangerKoopIndex() throws FileNotFoundException{
            
            InputStream l124  = getClass().getResourceAsStream("windrangerKoop.txt");
            
         Scanner scannerWindrangerK = new Scanner(l124);
           
            while (scannerWindrangerK.hasNextDouble()) {

            double valueWindrangerK = scannerWindrangerK.nextDouble();

            windrangerKoop.add(valueWindrangerK);
            
            }   
        }
        
        public void winterWyvernKoopIndex() throws FileNotFoundException{
            
            InputStream l125  = getClass().getResourceAsStream("winterWyvernKoop.txt");
            
         Scanner scannerWinterWyvernK = new Scanner(l125);
           
            while (scannerWinterWyvernK.hasNextDouble()) {

            double valueWinterWyvernK = scannerWinterWyvernK.nextDouble();

            winterWyvernKoop.add(valueWinterWyvernK);
            
            }   
        }
        
        public void witchDoctorKoopIndex() throws FileNotFoundException{
            
            InputStream l126  = getClass().getResourceAsStream("witchDoctorKoop.txt");
            
         Scanner scannerWitchDoctorK = new Scanner(l126);
           
            while (scannerWitchDoctorK.hasNextDouble()) {

            double valueWitchDoctorK = scannerWitchDoctorK.nextDouble();

            witchDoctorKoop.add(valueWitchDoctorK);
            
            }   
        }
        
        public void wraithKingKoopIndex() throws FileNotFoundException{
            
            InputStream l127  = getClass().getResourceAsStream("wraithKingKoop.txt");
            
         Scanner scannerWraithKingK = new Scanner(l127);
           
            while (scannerWraithKingK.hasNextDouble()) {

            double valueWraithKingK = scannerWraithKingK.nextDouble();

            wraithKingKoop.add(valueWraithKingK);
            
            }   
        }
        
        public void zeusKoopIndex() throws FileNotFoundException{
            
            InputStream l128  = getClass().getResourceAsStream("zeusKoop.txt");
            
         Scanner scannerZeusK = new Scanner(l128);
           
            while (scannerZeusK.hasNextDouble()) {

            double valueZeusK = scannerZeusK.nextDouble();

            zeusKoop.add(valueZeusK);
            
            }   
        } 
        
            
    }
    
    //
    //
    // tworzenie listy best to pick i best to avoid dla radiant i dire
    //
    //
    
    class BestToPickAvoidList{
        
        public void sortowanieListyRadiantDire(){
        
        listaBestToPick.removeAllItems();
        listaBestToAvoid.removeAllItems();
        if(radiantW == true){
            
            
         
        for (int i = 0; i < iloscBohaterow; ++i) {
        
        heroWinRateListRadiantCopy.set(i, heroWinRateListRadiant.get(i));
        
        
        
        double r1 = heroWinRateListRadiantCopy.get(i);
        double r2 = (r1*100);
        double r3 = Math.round(r2);
        double r4 = r3/100;
        
        heroWinRateListRadiantRound.set(i, r4);
        
        }
         
        sortowanieWinRateListRadiantNazwy.clear();
        
        heroWinRateListRadiantRound.stream().forEach((i) -> {
            sortowanieWinRateListRadiantNazwy.add(i.toString());
            });
        
        for (int i = 0; i < iloscBohaterow; ++i) {
            
        wartoscHeroR = sortowanieWinRateListRadiantNazwy.get(i);
        nazwaHeroR = sortowanieWinRateListRadiantNazwyHerosow.get(i);
        sortowanieWinRateListRadiantWartosciNazwy.set(i, wartoscHeroR + "   " + nazwaHeroR);
           
        }
        
        for (int i = 0; i < iloscBohaterow; ++i) {
           
        odjecieRadiantPick = sortowanieWinRateListRadiantWartosciNazwy.get(i);
        odjecieRadiantPickS = odjecieRadiantPick.substring(0, 1);
        
        if("-".equals(odjecieRadiantPickS)){
            
        bestToPickRadiant.set(i, " ");
            
        }
        
        else{
        
        String plus = "+" + sortowanieWinRateListRadiantWartosciNazwy.get(i);
        
        bestToPickRadiant.set(i, plus);
            
        }
        
        if("-".equals(odjecieRadiantPickS)){
            
        bestToAvoidRadiant.set(i, sortowanieWinRateListRadiantWartosciNazwy.get(i));
            
        }
        
        else{
        
        bestToAvoidRadiant.set(i, " ");
            
        }
            
        }
        
        Collections.sort(bestToPickRadiant, Collections.reverseOrder(new AlphanumComparator()));
        listaBestToPick.setModel(new javax.swing.DefaultComboBoxModel(bestToPickRadiant.toArray()));
        
        Collections.sort(bestToAvoidRadiant, Collections.reverseOrder(new AlphanumComparator()));
        listaBestToAvoid.setModel(new javax.swing.DefaultComboBoxModel(bestToAvoidRadiant.toArray()));
        
        if((radiantPostacA == false && radiantPostacB == false && radiantPostacC == false && radiantPostacD == false && radiantPostacE == false) && (direPostacA == false && direPostacB == false && direPostacC == false && direPostacD == false && direPostacE == false)){
            
        listaBestToPick.removeAllItems();
        listaBestToAvoid.removeAllItems();
        
        }
        
        }
        
        
        else if(direW == true){
            
           
        for (int i = 0; i < iloscBohaterow; ++i) {
        
        heroWinRateListDireCopy.set(i, heroWinRateListDire.get(i));
        
        double d1 = heroWinRateListDireCopy.get(i);
        double d2 = (d1*100);
        double d3 = Math.round(d2);
        double d4 = d3/100;
        
        heroWinRateListDireRound.set(i, d4);
        
        }
         
        sortowanieWinRateListDireNazwy.clear();
        
        heroWinRateListDireRound.stream().forEach((i) -> {
            sortowanieWinRateListDireNazwy.add(i.toString());
            });
       
        for (int i = 0; i < iloscBohaterow; ++i) {
            
        wartoscHeroD = sortowanieWinRateListDireNazwy.get(i);
        nazwaHeroD = sortowanieWinRateListDireNazwyHerosow.get(i);
        sortowanieWinRateListDireWartosciNazwy.set(i, wartoscHeroD + "   " + nazwaHeroD);
           
        }
        
        for (int i = 0; i < iloscBohaterow; ++i) {
           
        odjecieDirePick = sortowanieWinRateListDireWartosciNazwy.get(i);
        odjecieDirePickS = odjecieDirePick.substring(0, 1);
        
        if("-".equals(odjecieDirePickS)){
            
        bestToPickDire.set(i, " ");
            
        }
        
        else{
            
        String plus1 = "+" + sortowanieWinRateListDireWartosciNazwy.get(i);
        
        bestToPickDire.set(i, plus1);
            
        }
        
        if("-".equals(odjecieDirePickS)){
            
        bestToAvoidDire.set(i, sortowanieWinRateListDireWartosciNazwy.get(i));
            
        }
        
        else{
        
        bestToAvoidDire.set(i, " ");
            
        }
         
        }
      
        Collections.sort(bestToPickDire, Collections.reverseOrder(new AlphanumComparator()));
        listaBestToPick.setModel(new javax.swing.DefaultComboBoxModel(bestToPickDire.toArray()));
        
        Collections.sort(bestToAvoidDire, Collections.reverseOrder(new AlphanumComparator()));
        listaBestToAvoid.setModel(new javax.swing.DefaultComboBoxModel(bestToAvoidDire.toArray()));
        
        if((radiantPostacA == false && radiantPostacB == false && radiantPostacC == false && radiantPostacD == false && radiantPostacE == false) && (direPostacA == false && direPostacB == false && direPostacC == false && direPostacD == false && direPostacE == false)){
            
        listaBestToPick.removeAllItems();
        listaBestToAvoid.removeAllItems();
        
        }
        }
            
        }
    }
    
    //
    //
    // tworzenie wynikow wyjsciowych dla Radiant i Dire
    //
    //
    
    class WynikWyjsciowyRadiantDire extends Thread{
        
        @Override
        public void run(){
           
           while(t > 0){
           
           //
           //
           // tworzenie wartosci win chance
           //
           //
               
           rWC3 = (rH1 + rH2 + rH3 + rH4 + rH5);
           rWC2 = rWC3*100;
           rWC1 = Math.round(rWC2);
           rWC = rWC1/100;
          
           dWC3 = (dH1 + dH2 + dH3 + dH4 + dH5);
           dWC2 = dWC3*100;
           dWC1 = Math.round(dWC2);
           dWC = dWC1/100;
           
           if((radiantPostacA == true || radiantPostacB == true || radiantPostacC == true || radiantPostacD == true || radiantPostacE == true) && (direPostacA == true || direPostacB == true || direPostacC == true || direPostacD == true || direPostacE == true)){
            
               
            if(rWC > dWC){
                
                roznica = ((rWC - dWC)*100);
                roznicaA = Math.round(roznica);
                roznica1 = roznicaA/100;
                podzielnik = ((roznica1/2)*100);
                podzielnik1 = Math.round(podzielnik);
                podzielnikOstateczny1 = (podzielnik1/100);
                
                podzielnikOstateczny2 = (((podzielnikOstateczny1 * 1.1) - podzielnikOstateczny1)*100);
                podzielnikOstateczny3 = Math.round(podzielnikOstateczny2);
                podzielnikOstateczny = (podzielnikOstateczny3/100);
                
                radiantWynik = 50 + podzielnikOstateczny;
                radiantWynik1 = radiantWynik*100;
                radiantWynik2 = Math.round(radiantWynik1);
                radiantWynikOst = radiantWynik2/100;
                
                 
               
                
                String radiantWCS = String.valueOf(radiantWynikOst);
                
                radiantPoleTekstowe.setText(" " + radiantWCS + "%");
                radiantPoleTekstowe.setForeground(new Color(76, 153, 0));
                
                direWynik = 50 - podzielnikOstateczny;
                direWynik1 = direWynik*100;
                direWynik2 = Math.round(direWynik1);
                direWynikOst = direWynik2/100;
                
                
                
                String direWCS = String.valueOf(direWynikOst);
                
                direPoleTekstowe.setText(" " + direWCS + "%");
                direPoleTekstowe.setForeground(new Color(153, 0, 0));
                
            }
               
            else if(rWC < dWC){
            
                roznica = ((dWC - rWC)*100);
                roznicaA = Math.round(roznica);
                roznica1 = roznicaA/100;
                podzielnik = ((roznica1/2)*100);
                podzielnik1 = Math.round(podzielnik);
                podzielnikOstateczny1 = (podzielnik1/100);
                
                podzielnikOstateczny2 = (((podzielnikOstateczny1 * 1.1) - podzielnikOstateczny1)*100);
                podzielnikOstateczny3 = Math.round(podzielnikOstateczny2);
                podzielnikOstateczny = (podzielnikOstateczny3/100);
                
                radiantWynik = 50 - podzielnikOstateczny;
                radiantWynik1 = radiantWynik*100;
                radiantWynik2 = Math.round(radiantWynik1);
                radiantWynikOst = radiantWynik2/100;
                
               
                
                
                String radiantWCS = String.valueOf(radiantWynikOst);
                
                radiantPoleTekstowe.setText(" " + radiantWCS + "%");
                radiantPoleTekstowe.setForeground(new Color(153, 000, 0));
                
                direWynik = 50 + podzielnikOstateczny;
                direWynik1 = direWynik*100;
                direWynik2 = Math.round(direWynik1);
                direWynikOst = direWynik2/100;
                
                
                
                
                String direWCS = String.valueOf(direWynikOst);
                
                direPoleTekstowe.setText(" " + direWCS + "%");
                direPoleTekstowe.setForeground(new Color(76, 153, 0));
                
            }
            
            if (rWC == dWC){
                
                
                radiantWynik = 50;
                
                String radiantWCS = String.valueOf(radiantWynik);
                
                radiantPoleTekstowe.setText(" " + radiantWCS + "%");
                radiantPoleTekstowe.setForeground(new Color(50, 100, 255));
                
                
                direWynik = 50;
                
                String direWCS = String.valueOf(direWynik);
                
                direPoleTekstowe.setText(" " + direWCS + "%");
                direPoleTekstowe.setForeground(new Color(50, 100, 255));
            
            }
       }
      
        else if((radiantPostacA == false && radiantPostacB == false && radiantPostacC == false && radiantPostacD == false && radiantPostacE == false) && (direPostacA == false && direPostacB == false && direPostacC == false && direPostacD == false && direPostacE == false)){
            
                
                radiantWynik = 50;
                
                String radiantWCS = String.valueOf(radiantWynik);
                
                radiantPoleTekstowe.setText(" " + radiantWCS + "%");
                radiantPoleTekstowe.setForeground(new Color(50, 100, 255));
                
                
                direWynik = 50;
                
                String direWCS = String.valueOf(direWynik);
                
                direPoleTekstowe.setText(" " + direWCS + "%");
                direPoleTekstowe.setForeground(new Color(50, 100, 255)); 
        }
           
       else if((radiantPostacA == false && radiantPostacB == false && radiantPostacC == false && radiantPostacD == false && radiantPostacE == false) && (direPostacA == true || direPostacB == true || direPostacC == true || direPostacD == true || direPostacE == true)){
           
                
                radiantWynik = 0;
                
                String radiantWCS = String.valueOf(radiantWynik);
                
                radiantPoleTekstowe.setText(" " + radiantWCS + "%");
                radiantPoleTekstowe.setForeground(new Color(153, 000, 000));
                
                direWynik = 100;
                
                String direWCS = String.valueOf(direWynik);
                
                direPoleTekstowe.setText(" " + direWCS + "%");
                direPoleTekstowe.setForeground(new Color(76, 153, 000));   
       }
           
         else if((radiantPostacA == true || radiantPostacB == true || radiantPostacC == true || radiantPostacD == true || radiantPostacE == true) && (direPostacA == false && direPostacB == false && direPostacC == false && direPostacD == false && direPostacE == false)){
           
                radiantWynik = 100;
                
                String radiantWCS = String.valueOf(radiantWynik);
                
                radiantPoleTekstowe.setText(" " + radiantWCS + "%");
                radiantPoleTekstowe.setForeground(new Color(76, 153, 000));
                
                direWynik = 0;
                
                String direWCS = String.valueOf(direWynik);
                
                direPoleTekstowe.setText(" " + direWCS + "%");
                direPoleTekstowe.setForeground(new Color(153, 000, 000));   
       }
           
         //
         //
         //Pobieranie wartosci wyjsciowych herosow dla Radiant
         //
         //
           
            if (radiantNazwa1.equals(nazwaAbaddon)){
                
              rH1 = heroWinRateListRadiant.get(0);                
            }
           
            else if (radiantNazwa2.equals(nazwaAbaddon)){
                
             rH2 = heroWinRateListRadiant.get(0);
             
            }
            
            else if (radiantNazwa3.equals(nazwaAbaddon)){
                
             rH3 = heroWinRateListRadiant.get(0);
             
            }
            
            else if (radiantNazwa4.equals(nazwaAbaddon)){
                
             rH4 = heroWinRateListRadiant.get(0);
             
            }
            
            else if (radiantNazwa5.equals(nazwaAbaddon)){
                
             rH5 = heroWinRateListRadiant.get(0);
             
            }
           
           if (radiantNazwa1.equals(nazwaAlchemist)){
                
              rH1 = heroWinRateListRadiant.get(1);                
            }
           
            else if (radiantNazwa2.equals(nazwaAlchemist)){
                
             rH2 = heroWinRateListRadiant.get(1);
             
            }
            
            else if (radiantNazwa3.equals(nazwaAlchemist)){
                
             rH3 = heroWinRateListRadiant.get(1);
             
            }
            
            else if (radiantNazwa4.equals(nazwaAlchemist)){
                
             rH4 = heroWinRateListRadiant.get(1);
             
            }
            
            else if (radiantNazwa5.equals(nazwaAlchemist)){
                
             rH5 = heroWinRateListRadiant.get(1);
             
            }
           
            if (radiantNazwa1.equals(nazwaAncientApparition)){
                
              rH1 = heroWinRateListRadiant.get(2);                
            }
           
            else if (radiantNazwa2.equals(nazwaAncientApparition)){
                
             rH2 = heroWinRateListRadiant.get(2);
             
            }
            
            else if (radiantNazwa3.equals(nazwaAncientApparition)){
                
             rH3 = heroWinRateListRadiant.get(2);
             
            }
            
            else if (radiantNazwa4.equals(nazwaAncientApparition)){
                
             rH4 = heroWinRateListRadiant.get(2);
             
            }
            
            else if (radiantNazwa5.equals(nazwaAncientApparition)){
                
             rH5 = heroWinRateListRadiant.get(2);
             
            }
            
            if (radiantNazwa1.equals(nazwaAntiMage)){
                
              rH1 = heroWinRateListRadiant.get(3);                
            }
           
            else if (radiantNazwa2.equals(nazwaAntiMage)){
                
             rH2 = heroWinRateListRadiant.get(3);
             
            }
            
            else if (radiantNazwa3.equals(nazwaAntiMage)){
                
             rH3 = heroWinRateListRadiant.get(3);
             
            }
            
            else if (radiantNazwa4.equals(nazwaAntiMage)){
                
             rH4 = heroWinRateListRadiant.get(3);
             
            }
            
            else if (radiantNazwa5.equals(nazwaAntiMage)){
                
             rH5 = heroWinRateListRadiant.get(3);
             
            }
            
            if (radiantNazwa1.equals(nazwaArcWarden)){
                
              rH1 = heroWinRateListRadiant.get(4);                
            }
           
            else if (radiantNazwa2.equals(nazwaArcWarden)){
                
             rH2 = heroWinRateListRadiant.get(4);
             
            }
            
            else if (radiantNazwa3.equals(nazwaArcWarden)){
                
             rH3 = heroWinRateListRadiant.get(4);
             
            }
            
            else if (radiantNazwa4.equals(nazwaArcWarden)){
                
             rH4 = heroWinRateListRadiant.get(4);
             
            }
            
            else if (radiantNazwa5.equals(nazwaArcWarden)){
                
             rH5 = heroWinRateListRadiant.get(4);
             
            }
            
            if (radiantNazwa1.equals(nazwaAxe)){
                
              rH1 = heroWinRateListRadiant.get(5);                
            }
           
            else if (radiantNazwa2.equals(nazwaAxe)){
                
             rH2 = heroWinRateListRadiant.get(5);
             
            }
            
            else if (radiantNazwa3.equals(nazwaAxe)){
                
             rH3 = heroWinRateListRadiant.get(5);
             
            }
            
            else if (radiantNazwa4.equals(nazwaAxe)){
                
             rH4 = heroWinRateListRadiant.get(5);
             
            }
            
            else if (radiantNazwa5.equals(nazwaAxe)){
                
             rH5 = heroWinRateListRadiant.get(5);
             
            }
            
            if (radiantNazwa1.equals(nazwaBane)){
                
              rH1 = heroWinRateListRadiant.get(6);                
            }
           
            else if (radiantNazwa2.equals(nazwaBane)){
                
             rH2 = heroWinRateListRadiant.get(6);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBane)){
                
             rH3 = heroWinRateListRadiant.get(6);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBane)){
                
             rH4 = heroWinRateListRadiant.get(6);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBane)){
                
             rH5 = heroWinRateListRadiant.get(6);
             
            }
            
            if (radiantNazwa1.equals(nazwaBatrider)){
                
              rH1 = heroWinRateListRadiant.get(7);                
            }
           
            else if (radiantNazwa2.equals(nazwaBatrider)){
                
             rH2 = heroWinRateListRadiant.get(7);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBatrider)){
                
             rH3 = heroWinRateListRadiant.get(7);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBatrider)){
                
             rH4 = heroWinRateListRadiant.get(7);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBatrider)){
                
             rH5 = heroWinRateListRadiant.get(7);
             
            }
            
            if (radiantNazwa1.equals(nazwaBeastmaster)){
                
              rH1 = heroWinRateListRadiant.get(8);                
            }
           
            else if (radiantNazwa2.equals(nazwaBeastmaster)){
                
             rH2 = heroWinRateListRadiant.get(8);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBeastmaster)){
                
             rH3 = heroWinRateListRadiant.get(8);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBeastmaster)){
                
             rH4 = heroWinRateListRadiant.get(8);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBeastmaster)){
                
             rH5 = heroWinRateListRadiant.get(8);
             
            }
            
            if (radiantNazwa1.equals(nazwaBloodseeker)){
                
              rH1 = heroWinRateListRadiant.get(9);                
            }
           
            else if (radiantNazwa2.equals(nazwaBloodseeker)){
                
             rH2 = heroWinRateListRadiant.get(9);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBloodseeker)){
                
             rH3 = heroWinRateListRadiant.get(9);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBloodseeker)){
                
             rH4 = heroWinRateListRadiant.get(9);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBloodseeker)){
                
             rH5 = heroWinRateListRadiant.get(9);
             
            }
            
            if (radiantNazwa1.equals(nazwaBountyHunter)){
                
              rH1 = heroWinRateListRadiant.get(10);                
            }
           
            else if (radiantNazwa2.equals(nazwaBountyHunter)){
                
             rH2 = heroWinRateListRadiant.get(10);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBountyHunter)){
                
             rH3 = heroWinRateListRadiant.get(10);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBountyHunter)){
                
             rH4 = heroWinRateListRadiant.get(10);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBountyHunter)){
                
             rH5 = heroWinRateListRadiant.get(10);
             
            }
            
            if (radiantNazwa1.equals(nazwaBrewmaster)){
                
              rH1 = heroWinRateListRadiant.get(11);                
            }
           
            else if (radiantNazwa2.equals(nazwaBrewmaster)){
                
             rH2 = heroWinRateListRadiant.get(11);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBrewmaster)){
                
             rH3 = heroWinRateListRadiant.get(11);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBrewmaster)){
                
             rH4 = heroWinRateListRadiant.get(11);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBrewmaster)){
                
             rH5 = heroWinRateListRadiant.get(11);
             
            }
            
            if (radiantNazwa1.equals(nazwaBristleback)){
                
              rH1 = heroWinRateListRadiant.get(12);                
            }
           
            else if (radiantNazwa2.equals(nazwaBristleback)){
                
             rH2 = heroWinRateListRadiant.get(12);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBristleback)){
                
             rH3 = heroWinRateListRadiant.get(12);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBristleback)){
                
             rH4 = heroWinRateListRadiant.get(12);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBristleback)){
                
             rH5 = heroWinRateListRadiant.get(12);
             
            }
            
            if (radiantNazwa1.equals(nazwaBroodmother)){
                
              rH1 = heroWinRateListRadiant.get(13);                
            }
           
            else if (radiantNazwa2.equals(nazwaBroodmother)){
                
             rH2 = heroWinRateListRadiant.get(13);
             
            }
            
            else if (radiantNazwa3.equals(nazwaBroodmother)){
                
             rH3 = heroWinRateListRadiant.get(13);
             
            }
            
            else if (radiantNazwa4.equals(nazwaBroodmother)){
                
             rH4 = heroWinRateListRadiant.get(13);
             
            }
            
            else if (radiantNazwa5.equals(nazwaBroodmother)){
                
             rH5 = heroWinRateListRadiant.get(13);
             
            }
            
            if (radiantNazwa1.equals(nazwaCentaurWarrunner)){
                
              rH1 = heroWinRateListRadiant.get(14);                
            }
           
            else if (radiantNazwa2.equals(nazwaCentaurWarrunner)){
                
             rH2 = heroWinRateListRadiant.get(14);
             
            }
            
            else if (radiantNazwa3.equals(nazwaCentaurWarrunner)){
                
             rH3 = heroWinRateListRadiant.get(14);
             
            }
            
            else if (radiantNazwa4.equals(nazwaCentaurWarrunner)){
                
             rH4 = heroWinRateListRadiant.get(14);
             
            }
            
            else if (radiantNazwa5.equals(nazwaCentaurWarrunner)){
                
             rH5 = heroWinRateListRadiant.get(14);
             
            }
            
            if (radiantNazwa1.equals(nazwaChaosKnight)){
                
              rH1 = heroWinRateListRadiant.get(15);                
            }
           
            else if (radiantNazwa2.equals(nazwaChaosKnight)){
                
             rH2 = heroWinRateListRadiant.get(15);
             
            }
            
            else if (radiantNazwa3.equals(nazwaChaosKnight)){
                
             rH3 = heroWinRateListRadiant.get(15);
             
            }
            
            else if (radiantNazwa4.equals(nazwaChaosKnight)){
                
             rH4 = heroWinRateListRadiant.get(15);
             
            }
            
            else if (radiantNazwa5.equals(nazwaChaosKnight)){
                
             rH5 = heroWinRateListRadiant.get(15);
             
            }
            
            if (radiantNazwa1.equals(nazwaChen)){
                
              rH1 = heroWinRateListRadiant.get(16);                
            }
           
            else if (radiantNazwa2.equals(nazwaChen)){
                
             rH2 = heroWinRateListRadiant.get(16);
             
            }
            
            else if (radiantNazwa3.equals(nazwaChen)){
                
             rH3 = heroWinRateListRadiant.get(16);
             
            }
            
            else if (radiantNazwa4.equals(nazwaChen)){
                
             rH4 = heroWinRateListRadiant.get(16);
             
            }
            
            else if (radiantNazwa5.equals(nazwaChen)){
                
             rH5 = heroWinRateListRadiant.get(16);
             
            }
            
            if (radiantNazwa1.equals(nazwaClinkz)){
                
              rH1 = heroWinRateListRadiant.get(17);                
            }
           
            else if (radiantNazwa2.equals(nazwaClinkz)){
                
             rH2 = heroWinRateListRadiant.get(17);
             
            }
            
            else if (radiantNazwa3.equals(nazwaClinkz)){
                
             rH3 = heroWinRateListRadiant.get(17);
             
            }
            
            else if (radiantNazwa4.equals(nazwaClinkz)){
                
             rH4 = heroWinRateListRadiant.get(17);
             
            }
            
            else if (radiantNazwa5.equals(nazwaClinkz)){
                
             rH5 = heroWinRateListRadiant.get(17);
             
            }
            
            if (radiantNazwa1.equals(nazwaClockwerk)){
                
              rH1 = heroWinRateListRadiant.get(18);                
            }
           
            else if (radiantNazwa2.equals(nazwaClockwerk)){
                
             rH2 = heroWinRateListRadiant.get(18);
             
            }
            
            else if (radiantNazwa3.equals(nazwaClockwerk)){
                
             rH3 = heroWinRateListRadiant.get(18);
             
            }
            
            else if (radiantNazwa4.equals(nazwaClockwerk)){
                
             rH4 = heroWinRateListRadiant.get(18);
             
            }
            
            else if (radiantNazwa5.equals(nazwaClockwerk)){
                
             rH5 = heroWinRateListRadiant.get(18);
             
            }
            
            if (radiantNazwa1.equals(nazwaCrystalMaiden)){
                
              rH1 = heroWinRateListRadiant.get(19);                
            }
           
            else if (radiantNazwa2.equals(nazwaCrystalMaiden)){
                
             rH2 = heroWinRateListRadiant.get(19);
             
            }
            
            else if (radiantNazwa3.equals(nazwaCrystalMaiden)){
                
             rH3 = heroWinRateListRadiant.get(19);
             
            }
            
            else if (radiantNazwa4.equals(nazwaCrystalMaiden)){
                
             rH4 = heroWinRateListRadiant.get(19);
             
            }
            
            else if (radiantNazwa5.equals(nazwaCrystalMaiden)){
                
             rH5 = heroWinRateListRadiant.get(19);
             
            }
            
            if (radiantNazwa1.equals(nazwaDarkSeer)){
                
              rH1 = heroWinRateListRadiant.get(20);                
            }
           
            else if (radiantNazwa2.equals(nazwaDarkSeer)){
                
             rH2 = heroWinRateListRadiant.get(20);
             
            }
            
            else if (radiantNazwa3.equals(nazwaDarkSeer)){
                
             rH3 = heroWinRateListRadiant.get(20);
             
            }
            
            else if (radiantNazwa4.equals(nazwaDarkSeer)){
                
             rH4 = heroWinRateListRadiant.get(20);
             
            }
            
            else if (radiantNazwa5.equals(nazwaDarkSeer)){
                
             rH5 = heroWinRateListRadiant.get(20);
             
            }
            
            if (radiantNazwa1.equals(nazwaDazzle)){
                
              rH1 = heroWinRateListRadiant.get(21);                
            }
           
            else if (radiantNazwa2.equals(nazwaDazzle)){
                
             rH2 = heroWinRateListRadiant.get(21);
             
            }
            
            else if (radiantNazwa3.equals(nazwaDazzle)){
                
             rH3 = heroWinRateListRadiant.get(21);
             
            }
            
            else if (radiantNazwa4.equals(nazwaDazzle)){
                
             rH4 = heroWinRateListRadiant.get(21);
             
            }
            
            else if (radiantNazwa5.equals(nazwaDazzle)){
                
             rH5 = heroWinRateListRadiant.get(21);
             
            }
            
            if (radiantNazwa1.equals(nazwaDeathProphet)){
                
              rH1 = heroWinRateListRadiant.get(22);                
            }
           
            else if (radiantNazwa2.equals(nazwaDeathProphet)){
                
             rH2 = heroWinRateListRadiant.get(22);
             
            }
            
            else if (radiantNazwa3.equals(nazwaDeathProphet)){
                
             rH3 = heroWinRateListRadiant.get(22);
             
            }
            
            else if (radiantNazwa4.equals(nazwaDeathProphet)){
                
             rH4 = heroWinRateListRadiant.get(22);
             
            }
            
            else if (radiantNazwa5.equals(nazwaDeathProphet)){
                
             rH5 = heroWinRateListRadiant.get(22);
             
            }
            
            if (radiantNazwa1.equals(nazwaDisruptor)){
                
              rH1 = heroWinRateListRadiant.get(23);                
            }
           
            else if (radiantNazwa2.equals(nazwaDisruptor)){
                
             rH2 = heroWinRateListRadiant.get(23);
             
            }
            
            else if (radiantNazwa3.equals(nazwaDisruptor)){
                
             rH3 = heroWinRateListRadiant.get(23);
             
            }
            
            else if (radiantNazwa4.equals(nazwaDisruptor)){
                
             rH4 = heroWinRateListRadiant.get(23);
             
            }
            
            else if (radiantNazwa5.equals(nazwaDisruptor)){
                
             rH5 = heroWinRateListRadiant.get(23);
             
            }
            
            if (radiantNazwa1.equals(nazwaDoom)){
                
              rH1 = heroWinRateListRadiant.get(24);                
            }
           
            else if (radiantNazwa2.equals(nazwaDoom)){
                
             rH2 = heroWinRateListRadiant.get(24);
             
            }
            
            else if (radiantNazwa3.equals(nazwaDoom)){
                
             rH3 = heroWinRateListRadiant.get(24);
             
            }
            
            else if (radiantNazwa4.equals(nazwaDoom)){
                
             rH4 = heroWinRateListRadiant.get(24);
             
            }
            
            else if (radiantNazwa5.equals(nazwaDoom)){
                
             rH5 = heroWinRateListRadiant.get(24);
             
            }
            
            if (radiantNazwa1.equals(nazwaDk)){
                
              rH1 = heroWinRateListRadiant.get(25);                
            }
           
            else if (radiantNazwa2.equals(nazwaDk)){
                
             rH2 = heroWinRateListRadiant.get(25);
             
            }
            
            else if (radiantNazwa3.equals(nazwaDk)){
                
             rH3 = heroWinRateListRadiant.get(25);
             
            }
            
            else if (radiantNazwa4.equals(nazwaDk)){
                
             rH4 = heroWinRateListRadiant.get(25);
             
            }
            
            else if (radiantNazwa5.equals(nazwaDk)){
                
             rH5 = heroWinRateListRadiant.get(25);
             
            }
            
            if (radiantNazwa1.equals(nazwaDrowRanger)){
                
              rH1 = heroWinRateListRadiant.get(26);                
            }
           
            else if (radiantNazwa2.equals(nazwaDrowRanger)){
                
             rH2 = heroWinRateListRadiant.get(26);
             
            }
            
            else if (radiantNazwa3.equals(nazwaDrowRanger)){
                
             rH3 = heroWinRateListRadiant.get(26);
             
            }
            
            else if (radiantNazwa4.equals(nazwaDrowRanger)){
                
             rH4 = heroWinRateListRadiant.get(26);
             
            }
            
            else if (radiantNazwa5.equals(nazwaDrowRanger)){
                
             rH5 = heroWinRateListRadiant.get(26);
             
            }
            
            if (radiantNazwa1.equals(nazwaEarthSpirit)){
                
              rH1 = heroWinRateListRadiant.get(27);                
            }
           
            else if (radiantNazwa2.equals(nazwaEarthSpirit)){
                
             rH2 = heroWinRateListRadiant.get(27);
             
            }
            
            else if (radiantNazwa3.equals(nazwaEarthSpirit)){
                
             rH3 = heroWinRateListRadiant.get(27);
             
            }
            
            else if (radiantNazwa4.equals(nazwaEarthSpirit)){
                
             rH4 = heroWinRateListRadiant.get(27);
             
            }
            
            else if (radiantNazwa5.equals(nazwaEarthSpirit)){
                
             rH5 = heroWinRateListRadiant.get(27);
             
            }
            
            if (radiantNazwa1.equals(nazwaEs)){
                
              rH1 = heroWinRateListRadiant.get(28);                
            }
           
            else if (radiantNazwa2.equals(nazwaEs)){
                
             rH2 = heroWinRateListRadiant.get(28);
             
            }
            
            else if (radiantNazwa3.equals(nazwaEs)){
                
             rH3 = heroWinRateListRadiant.get(28);
             
            }
            
            else if (radiantNazwa4.equals(nazwaEs)){
                
             rH4 = heroWinRateListRadiant.get(28);
             
            }
            
            else if (radiantNazwa5.equals(nazwaEs)){
                
             rH5 = heroWinRateListRadiant.get(28);
             
            }
            
            if (radiantNazwa1.equals(nazwaElderTitan)){
                
              rH1 = heroWinRateListRadiant.get(29);                
            }
           
            else if (radiantNazwa2.equals(nazwaElderTitan)){
                
             rH2 = heroWinRateListRadiant.get(29);
             
            }
            
            else if (radiantNazwa3.equals(nazwaElderTitan)){
                
             rH3 = heroWinRateListRadiant.get(29);
             
            }
            
            else if (radiantNazwa4.equals(nazwaElderTitan)){
                
             rH4 = heroWinRateListRadiant.get(29);
             
            }
            
            else if (radiantNazwa5.equals(nazwaElderTitan)){
                
             rH5 = heroWinRateListRadiant.get(29);
             
            }
            
            if (radiantNazwa1.equals(nazwaEmberSpirit)){
                
              rH1 = heroWinRateListRadiant.get(30);                
            }
           
            else if (radiantNazwa2.equals(nazwaEmberSpirit)){
                
             rH2 = heroWinRateListRadiant.get(30);
             
            }
            
            else if (radiantNazwa3.equals(nazwaEmberSpirit)){
                
             rH3 = heroWinRateListRadiant.get(30);
             
            }
            
            else if (radiantNazwa4.equals(nazwaEmberSpirit)){
                
             rH4 = heroWinRateListRadiant.get(30);
             
            }
            
            else if (radiantNazwa5.equals(nazwaEmberSpirit)){
                
             rH5 = heroWinRateListRadiant.get(30);
             
            }
            
            if (radiantNazwa1.equals(nazwaEnchantress)){
                
              rH1 = heroWinRateListRadiant.get(31);                
            }
           
            else if (radiantNazwa2.equals(nazwaEnchantress)){
                
             rH2 = heroWinRateListRadiant.get(31);
             
            }
            
            else if (radiantNazwa3.equals(nazwaEnchantress)){
                
             rH3 = heroWinRateListRadiant.get(31);
             
            }
            
            else if (radiantNazwa4.equals(nazwaEnchantress)){
                
             rH4 = heroWinRateListRadiant.get(31);
             
            }
            
            else if (radiantNazwa5.equals(nazwaEnchantress)){
                
             rH5 = heroWinRateListRadiant.get(31);
             
            }
            
            if (radiantNazwa1.equals(nazwaEnigma)){
                
              rH1 = heroWinRateListRadiant.get(32);                
            }
           
            else if (radiantNazwa2.equals(nazwaEnigma)){
                
             rH2 = heroWinRateListRadiant.get(32);
             
            }
            
            else if (radiantNazwa3.equals(nazwaEnigma)){
                
             rH3 = heroWinRateListRadiant.get(32);
             
            }
            
            else if (radiantNazwa4.equals(nazwaEnigma)){
                
             rH4 = heroWinRateListRadiant.get(32);
             
            }
            
            else if (radiantNazwa5.equals(nazwaEnigma)){
                
             rH5 = heroWinRateListRadiant.get(32);
             
            }
            
            if (radiantNazwa1.equals(nazwaVoid)){
                
              rH1 = heroWinRateListRadiant.get(33);                
            }
           
            else if (radiantNazwa2.equals(nazwaVoid)){
                
             rH2 = heroWinRateListRadiant.get(33);
             
            }
            
            else if (radiantNazwa3.equals(nazwaVoid)){
                
             rH3 = heroWinRateListRadiant.get(33);
             
            }
            
            else if (radiantNazwa4.equals(nazwaVoid)){
                
             rH4 = heroWinRateListRadiant.get(33);
             
            }
            
            else if (radiantNazwa5.equals(nazwaVoid)){
                
             rH5 = heroWinRateListRadiant.get(33);
             
            }
            
            if (radiantNazwa1.equals(nazwaGyrocopter)){
                
              rH1 = heroWinRateListRadiant.get(34);                
            }
           
            else if (radiantNazwa2.equals(nazwaGyrocopter)){
                
             rH2 = heroWinRateListRadiant.get(34);
             
            }
            
            else if (radiantNazwa3.equals(nazwaGyrocopter)){
                
             rH3 = heroWinRateListRadiant.get(34);
             
            }
            
            else if (radiantNazwa4.equals(nazwaGyrocopter)){
                
             rH4 = heroWinRateListRadiant.get(34);
             
            }
            
            else if (radiantNazwa5.equals(nazwaGyrocopter)){
                
             rH5 = heroWinRateListRadiant.get(34);
             
            }
            
            if (radiantNazwa1.equals(nazwaHuskar)){
                
              rH1 = heroWinRateListRadiant.get(35);                
            }
           
            else if (radiantNazwa2.equals(nazwaHuskar)){
                
             rH2 = heroWinRateListRadiant.get(35);
             
            }
            
            else if (radiantNazwa3.equals(nazwaHuskar)){
                
             rH3 = heroWinRateListRadiant.get(35);
             
            }
            
            else if (radiantNazwa4.equals(nazwaHuskar)){
                
             rH4 = heroWinRateListRadiant.get(35);
             
            }
            
            else if (radiantNazwa5.equals(nazwaHuskar)){
                
             rH5 = heroWinRateListRadiant.get(35);
             
            }
            
            if (radiantNazwa1.equals(nazwaInvoker)){
                
              rH1 = heroWinRateListRadiant.get(36);                
            }
           
            else if (radiantNazwa2.equals(nazwaInvoker)){
                
             rH2 = heroWinRateListRadiant.get(36);
             
            }
            
            else if (radiantNazwa3.equals(nazwaInvoker)){
                
             rH3 = heroWinRateListRadiant.get(36);
             
            }
            
            else if (radiantNazwa4.equals(nazwaInvoker)){
                
             rH4 = heroWinRateListRadiant.get(36);
             
            }
            
            else if (radiantNazwa5.equals(nazwaInvoker)){
                
             rH5 = heroWinRateListRadiant.get(36);
             
            }
            
            if (radiantNazwa1.equals(nazwaIo)){
                
              rH1 = heroWinRateListRadiant.get(37);                
            }
           
            else if (radiantNazwa2.equals(nazwaIo)){
                
             rH2 = heroWinRateListRadiant.get(37);
             
            }
            
            else if (radiantNazwa3.equals(nazwaIo)){
                
             rH3 = heroWinRateListRadiant.get(37);
             
            }
            
            else if (radiantNazwa4.equals(nazwaIo)){
                
             rH4 = heroWinRateListRadiant.get(37);
             
            }
            
            else if (radiantNazwa5.equals(nazwaIo)){
                
             rH5 = heroWinRateListRadiant.get(37);
             
            }
            
            if (radiantNazwa1.equals(nazwaJakiro)){
                
              rH1 = heroWinRateListRadiant.get(38);                
            }
           
            else if (radiantNazwa2.equals(nazwaJakiro)){
                
             rH2 = heroWinRateListRadiant.get(38);
             
            }
            
            else if (radiantNazwa3.equals(nazwaJakiro)){
                
             rH3 = heroWinRateListRadiant.get(38);
             
            }
            
            else if (radiantNazwa4.equals(nazwaJakiro)){
                
             rH4 = heroWinRateListRadiant.get(38);
             
            }
            
            else if (radiantNazwa5.equals(nazwaJakiro)){
                
             rH5 = heroWinRateListRadiant.get(38);
             
            }
            
            if (radiantNazwa1.equals(nazwaJuggernaut)){
                
              rH1 = heroWinRateListRadiant.get(39);                
            }
           
            else if (radiantNazwa2.equals(nazwaJuggernaut)){
                
             rH2 = heroWinRateListRadiant.get(39);
             
            }
            
            else if (radiantNazwa3.equals(nazwaJuggernaut)){
                
             rH3 = heroWinRateListRadiant.get(39);
             
            }
            
            else if (radiantNazwa4.equals(nazwaJuggernaut)){
                
             rH4 = heroWinRateListRadiant.get(39);
             
            }
            
            else if (radiantNazwa5.equals(nazwaJuggernaut)){
                
             rH5 = heroWinRateListRadiant.get(39);
             
            }
            
            if (radiantNazwa1.equals(nazwaKeeperOfTheLight)){
                
              rH1 = heroWinRateListRadiant.get(40);                
            }
           
            else if (radiantNazwa2.equals(nazwaKeeperOfTheLight)){
                
             rH2 = heroWinRateListRadiant.get(40);
             
            }
            
            else if (radiantNazwa3.equals(nazwaKeeperOfTheLight)){
                
             rH3 = heroWinRateListRadiant.get(40);
             
            }
            
            else if (radiantNazwa4.equals(nazwaKeeperOfTheLight)){
                
             rH4 = heroWinRateListRadiant.get(40);
             
            }
            
            else if (radiantNazwa5.equals(nazwaKeeperOfTheLight)){
                
             rH5 = heroWinRateListRadiant.get(40);
             
            }
            
            if (radiantNazwa1.equals(nazwaKunkka)){
                
              rH1 = heroWinRateListRadiant.get(41);                
            }
           
            else if (radiantNazwa2.equals(nazwaKunkka)){
                
             rH2 = heroWinRateListRadiant.get(41);
             
            }
            
            else if (radiantNazwa3.equals(nazwaKunkka)){
                
             rH3 = heroWinRateListRadiant.get(41);
             
            }
            
            else if (radiantNazwa4.equals(nazwaKunkka)){
                
             rH4 = heroWinRateListRadiant.get(41);
             
            }
            
            else if (radiantNazwa5.equals(nazwaKunkka)){
                
             rH5 = heroWinRateListRadiant.get(41);
             
            }
            
            if (radiantNazwa1.equals(nazwaLegionCommander)){
                
              rH1 = heroWinRateListRadiant.get(42);                
            }
           
            else if (radiantNazwa2.equals(nazwaLegionCommander)){
                
             rH2 = heroWinRateListRadiant.get(42);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLegionCommander)){
                
             rH3 = heroWinRateListRadiant.get(42);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLegionCommander)){
                
             rH4 = heroWinRateListRadiant.get(42);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLegionCommander)){
                
             rH5 = heroWinRateListRadiant.get(42);
             
            }
            
            if (radiantNazwa1.equals(nazwaLeshrac)){
                
              rH1 = heroWinRateListRadiant.get(43);                
            }
           
            else if (radiantNazwa2.equals(nazwaLeshrac)){
                
             rH2 = heroWinRateListRadiant.get(43);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLeshrac)){
                
             rH3 = heroWinRateListRadiant.get(43);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLeshrac)){
                
             rH4 = heroWinRateListRadiant.get(43);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLeshrac)){
                
             rH5 = heroWinRateListRadiant.get(43);
             
            }
            
            if (radiantNazwa1.equals(nazwaLich)){
                
              rH1 = heroWinRateListRadiant.get(44);                
            }
           
            else if (radiantNazwa2.equals(nazwaLich)){
                
             rH2 = heroWinRateListRadiant.get(44);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLich)){
                
             rH3 = heroWinRateListRadiant.get(44);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLich)){
                
             rH4 = heroWinRateListRadiant.get(44);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLich)){
                
             rH5 = heroWinRateListRadiant.get(44);
             
            }
            
            if (radiantNazwa1.equals(nazwaLifeStealer)){
                
              rH1 = heroWinRateListRadiant.get(45);                
            }
           
            else if (radiantNazwa2.equals(nazwaLifeStealer)){
                
             rH2 = heroWinRateListRadiant.get(45);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLifeStealer)){
                
             rH3 = heroWinRateListRadiant.get(45);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLifeStealer)){
                
             rH4 = heroWinRateListRadiant.get(45);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLifeStealer)){
                
             rH5 = heroWinRateListRadiant.get(45);
             
            }
            
            if (radiantNazwa1.equals(nazwaLina)){
                
              rH1 = heroWinRateListRadiant.get(46);                
            }
           
            else if (radiantNazwa2.equals(nazwaLina)){
                
             rH2 = heroWinRateListRadiant.get(46);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLina)){
                
             rH3 = heroWinRateListRadiant.get(46);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLina)){
                
             rH4 = heroWinRateListRadiant.get(46);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLina)){
                
             rH5 = heroWinRateListRadiant.get(46);
             
            }
            
            if (radiantNazwa1.equals(nazwaLion)){
                
              rH1 = heroWinRateListRadiant.get(47);                
            }
           
            else if (radiantNazwa2.equals(nazwaLion)){
                
             rH2 = heroWinRateListRadiant.get(47);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLion)){
                
             rH3 = heroWinRateListRadiant.get(47);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLion)){
                
             rH4 = heroWinRateListRadiant.get(47);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLion)){
                
             rH5 = heroWinRateListRadiant.get(47);
             
            }
            
            if (radiantNazwa1.equals(nazwaLoneDruid)){
                
              rH1 = heroWinRateListRadiant.get(48);                
            }
           
            else if (radiantNazwa2.equals(nazwaLoneDruid)){
                
             rH2 = heroWinRateListRadiant.get(48);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLoneDruid)){
                
             rH3 = heroWinRateListRadiant.get(48);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLoneDruid)){
                
             rH4 = heroWinRateListRadiant.get(48);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLoneDruid)){
                
             rH5 = heroWinRateListRadiant.get(48);
             
            }
            
            if (radiantNazwa1.equals(nazwaLuna)){
                
              rH1 = heroWinRateListRadiant.get(49);                
            }
           
            else if (radiantNazwa2.equals(nazwaLuna)){
                
             rH2 = heroWinRateListRadiant.get(49);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLuna)){
                
             rH3 = heroWinRateListRadiant.get(49);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLuna)){
                
             rH4 = heroWinRateListRadiant.get(49);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLuna)){
                
             rH5 = heroWinRateListRadiant.get(49);
             
            }
            
            if (radiantNazwa1.equals(nazwaLycan)){
                
              rH1 = heroWinRateListRadiant.get(50);                
            }
           
            else if (radiantNazwa2.equals(nazwaLycan)){
                
             rH2 = heroWinRateListRadiant.get(50);
             
            }
            
            else if (radiantNazwa3.equals(nazwaLycan)){
                
             rH3 = heroWinRateListRadiant.get(50);
             
            }
            
            else if (radiantNazwa4.equals(nazwaLycan)){
                
             rH4 = heroWinRateListRadiant.get(50);
             
            }
            
            else if (radiantNazwa5.equals(nazwaLycan)){
                
             rH5 = heroWinRateListRadiant.get(50);
             
            }
            
            if (radiantNazwa1.equals(nazwaMagnus)){
                
              rH1 = heroWinRateListRadiant.get(51);                
            }
           
            else if (radiantNazwa2.equals(nazwaMagnus)){
                
             rH2 = heroWinRateListRadiant.get(51);
             
            }
            
            else if (radiantNazwa3.equals(nazwaMagnus)){
                
             rH3 = heroWinRateListRadiant.get(51);
             
            }
            
            else if (radiantNazwa4.equals(nazwaMagnus)){
                
             rH4 = heroWinRateListRadiant.get(51);
             
            }
            
            else if (radiantNazwa5.equals(nazwaMagnus)){
                
             rH5 = heroWinRateListRadiant.get(51);
             
            }
            
            if (radiantNazwa1.equals(nazwaMedusa)){
                
              rH1 = heroWinRateListRadiant.get(52);                
            }
           
            else if (radiantNazwa2.equals(nazwaMedusa)){
                
             rH2 = heroWinRateListRadiant.get(52);
             
            }
            
            else if (radiantNazwa3.equals(nazwaMedusa)){
                
             rH3 = heroWinRateListRadiant.get(52);
             
            }
            
            else if (radiantNazwa4.equals(nazwaMedusa)){
                
             rH4 = heroWinRateListRadiant.get(52);
             
            }
            
            else if (radiantNazwa5.equals(nazwaMedusa)){
                
             rH5 = heroWinRateListRadiant.get(52);
             
            }
            
            if (radiantNazwa1.equals(nazwaMeepo)){
                
              rH1 = heroWinRateListRadiant.get(53);                
            }
           
            else if (radiantNazwa2.equals(nazwaMeepo)){
                
             rH2 = heroWinRateListRadiant.get(53);
             
            }
            
            else if (radiantNazwa3.equals(nazwaMeepo)){
                
             rH3 = heroWinRateListRadiant.get(53);
             
            }
            
            else if (radiantNazwa4.equals(nazwaMeepo)){
                
             rH4 = heroWinRateListRadiant.get(53);
             
            }
            
            else if (radiantNazwa5.equals(nazwaMeepo)){
                
             rH5 = heroWinRateListRadiant.get(53);
             
            }
            
            if (radiantNazwa1.equals(nazwaMirana)){
                
              rH1 = heroWinRateListRadiant.get(54);                
            }
           
            else if (radiantNazwa2.equals(nazwaMirana)){
                
             rH2 = heroWinRateListRadiant.get(54);
             
            }
            
            else if (radiantNazwa3.equals(nazwaMirana)){
                
             rH3 = heroWinRateListRadiant.get(54);
             
            }
            
            else if (radiantNazwa4.equals(nazwaMirana)){
                
             rH4 = heroWinRateListRadiant.get(54);
             
            }
            
            else if (radiantNazwa5.equals(nazwaMirana)){
                
             rH5 = heroWinRateListRadiant.get(54);
             
            }
            
            if (radiantNazwa1.equals(nazwaMorphling)){
                
              rH1 = heroWinRateListRadiant.get(55);                
            }
           
            else if (radiantNazwa2.equals(nazwaMorphling)){
                
             rH2 = heroWinRateListRadiant.get(55);
             
            }
            
            else if (radiantNazwa3.equals(nazwaMorphling)){
                
             rH3 = heroWinRateListRadiant.get(55);
             
            }
            
            else if (radiantNazwa4.equals(nazwaMorphling)){
                
             rH4 = heroWinRateListRadiant.get(55);
             
            }
            
            else if (radiantNazwa5.equals(nazwaMorphling)){
                
             rH5 = heroWinRateListRadiant.get(55);
             
            }
            
            if (radiantNazwa1.equals(nazwaNagaSiren)){
                
              rH1 = heroWinRateListRadiant.get(56);                
            }
           
            else if (radiantNazwa2.equals(nazwaNagaSiren)){
                
             rH2 = heroWinRateListRadiant.get(56);
             
            }
            
            else if (radiantNazwa3.equals(nazwaNagaSiren)){
                
             rH3 = heroWinRateListRadiant.get(56);
             
            }
            
            else if (radiantNazwa4.equals(nazwaNagaSiren)){
                
             rH4 = heroWinRateListRadiant.get(56);
             
            }
            
            else if (radiantNazwa5.equals(nazwaNagaSiren)){
                
             rH5 = heroWinRateListRadiant.get(56);
             
            }
            
            if (radiantNazwa1.equals(nazwaNaturesProphet)){
                
              rH1 = heroWinRateListRadiant.get(57);                
            }
           
            else if (radiantNazwa2.equals(nazwaNaturesProphet)){
                
             rH2 = heroWinRateListRadiant.get(57);
             
            }
            
            else if (radiantNazwa3.equals(nazwaNaturesProphet)){
                
             rH3 = heroWinRateListRadiant.get(57);
             
            }
            
            else if (radiantNazwa4.equals(nazwaNaturesProphet)){
                
             rH4 = heroWinRateListRadiant.get(57);
             
            }
            
            else if (radiantNazwa5.equals(nazwaNaturesProphet)){
                
             rH5 = heroWinRateListRadiant.get(57);
             
            }
            
            if (radiantNazwa1.equals(nazwaNecrophos)){
                
              rH1 = heroWinRateListRadiant.get(58);                
            }
           
            else if (radiantNazwa2.equals(nazwaNecrophos)){
                
             rH2 = heroWinRateListRadiant.get(58);
             
            }
            
            else if (radiantNazwa3.equals(nazwaNecrophos)){
                
             rH3 = heroWinRateListRadiant.get(58);
             
            }
            
            else if (radiantNazwa4.equals(nazwaNecrophos)){
                
             rH4 = heroWinRateListRadiant.get(58);
             
            }
            
            else if (radiantNazwa5.equals(nazwaNecrophos)){
                
             rH5 = heroWinRateListRadiant.get(58);
             
            }
            
            if (radiantNazwa1.equals(nazwaNightStalker)){
                
              rH1 = heroWinRateListRadiant.get(59);                
            }
           
            else if (radiantNazwa2.equals(nazwaNightStalker)){
                
             rH2 = heroWinRateListRadiant.get(59);
             
            }
            
            else if (radiantNazwa3.equals(nazwaNightStalker)){
                
             rH3 = heroWinRateListRadiant.get(59);
             
            }
            
            else if (radiantNazwa4.equals(nazwaNightStalker)){
                
             rH4 = heroWinRateListRadiant.get(59);
             
            }
            
            else if (radiantNazwa5.equals(nazwaNightStalker)){
                
             rH5 = heroWinRateListRadiant.get(59);
             
            }
            
            if (radiantNazwa1.equals(nazwaNyxAssassin)){
                
              rH1 = heroWinRateListRadiant.get(60);                
            }
           
            else if (radiantNazwa2.equals(nazwaNyxAssassin)){
                
             rH2 = heroWinRateListRadiant.get(60);
             
            }
            
            else if (radiantNazwa3.equals(nazwaNyxAssassin)){
                
             rH3 = heroWinRateListRadiant.get(60);
             
            }
            
            else if (radiantNazwa4.equals(nazwaNyxAssassin)){
                
             rH4 = heroWinRateListRadiant.get(60);
             
            }
            
            else if (radiantNazwa5.equals(nazwaNyxAssassin)){
                
             rH5 = heroWinRateListRadiant.get(60);
             
            }
            
            if (radiantNazwa1.equals(nazwaOgreMagi)){
                
              rH1 = heroWinRateListRadiant.get(61);                
            }
           
            else if (radiantNazwa2.equals(nazwaOgreMagi)){
                
             rH2 = heroWinRateListRadiant.get(61);
             
            }
            
            else if (radiantNazwa3.equals(nazwaOgreMagi)){
                
             rH3 = heroWinRateListRadiant.get(61);
             
            }
            
            else if (radiantNazwa4.equals(nazwaOgreMagi)){
                
             rH4 = heroWinRateListRadiant.get(61);
             
            }
            
            else if (radiantNazwa5.equals(nazwaOgreMagi)){
                
             rH5 = heroWinRateListRadiant.get(61);
             
            }
            
            if (radiantNazwa1.equals(nazwaOmniknight)){
                
              rH1 = heroWinRateListRadiant.get(62);                
            }
           
            else if (radiantNazwa2.equals(nazwaOmniknight)){
                
             rH2 = heroWinRateListRadiant.get(62);
             
            }
            
            else if (radiantNazwa3.equals(nazwaOmniknight)){
                
             rH3 = heroWinRateListRadiant.get(62);
             
            }
            
            else if (radiantNazwa4.equals(nazwaOmniknight)){
                
             rH4 = heroWinRateListRadiant.get(62);
             
            }
            
            else if (radiantNazwa5.equals(nazwaOmniknight)){
                
             rH5 = heroWinRateListRadiant.get(62);
             
            }
            
            if (radiantNazwa1.equals(nazwaOracle)){
                
              rH1 = heroWinRateListRadiant.get(63);                
            }
           
            else if (radiantNazwa2.equals(nazwaOracle)){
                
             rH2 = heroWinRateListRadiant.get(63);
             
            }
            
            else if (radiantNazwa3.equals(nazwaOracle)){
                
             rH3 = heroWinRateListRadiant.get(63);
             
            }
            
            else if (radiantNazwa4.equals(nazwaOracle)){
                
             rH4 = heroWinRateListRadiant.get(63);
             
            }
            
            else if (radiantNazwa5.equals(nazwaOracle)){
                
             rH5 = heroWinRateListRadiant.get(63);
             
            }
            
            if (radiantNazwa1.equals(nazwaOutworldDevourer)){
                
              rH1 = heroWinRateListRadiant.get(64);                
            }
           
            else if (radiantNazwa2.equals(nazwaOutworldDevourer)){
                
             rH2 = heroWinRateListRadiant.get(64);
             
            }
            
            else if (radiantNazwa3.equals(nazwaOutworldDevourer)){
                
             rH3 = heroWinRateListRadiant.get(64);
             
            }
            
            else if (radiantNazwa4.equals(nazwaOutworldDevourer)){
                
             rH4 = heroWinRateListRadiant.get(64);
             
            }
            
            else if (radiantNazwa5.equals(nazwaOutworldDevourer)){
                
             rH5 = heroWinRateListRadiant.get(64);
             
            }
            
            if (radiantNazwa1.equals(nazwaPhantomAssassin)){
                
              rH1 = heroWinRateListRadiant.get(65);                
            }
           
            else if (radiantNazwa2.equals(nazwaPhantomAssassin)){
                
             rH2 = heroWinRateListRadiant.get(65);
             
            }
            
            else if (radiantNazwa3.equals(nazwaPhantomAssassin)){
                
             rH3 = heroWinRateListRadiant.get(65);
             
            }
            
            else if (radiantNazwa4.equals(nazwaPhantomAssassin)){
                
             rH4 = heroWinRateListRadiant.get(65);
             
            }
            
            else if (radiantNazwa5.equals(nazwaPhantomAssassin)){
                
             rH5 = heroWinRateListRadiant.get(65);
             
            }
            
            if (radiantNazwa1.equals(nazwaPhantomLancer)){
                
              rH1 = heroWinRateListRadiant.get(66);                
            }
           
            else if (radiantNazwa2.equals(nazwaPhantomLancer)){
                
             rH2 = heroWinRateListRadiant.get(66);
             
            }
            
            else if (radiantNazwa3.equals(nazwaPhantomLancer)){
                
             rH3 = heroWinRateListRadiant.get(66);
             
            }
            
            else if (radiantNazwa4.equals(nazwaPhantomLancer)){
                
             rH4 = heroWinRateListRadiant.get(66);
             
            }
            
            else if (radiantNazwa5.equals(nazwaPhantomLancer)){
                
             rH5 = heroWinRateListRadiant.get(66);
             
            }
            
            if (radiantNazwa1.equals(nazwaPhoenix)){
                
              rH1 = heroWinRateListRadiant.get(67);                
            }
           
            else if (radiantNazwa2.equals(nazwaPhoenix)){
                
             rH2 = heroWinRateListRadiant.get(67);
             
            }
            
            else if (radiantNazwa3.equals(nazwaPhoenix)){
                
             rH3 = heroWinRateListRadiant.get(67);
             
            }
            
            else if (radiantNazwa4.equals(nazwaPhoenix)){
                
             rH4 = heroWinRateListRadiant.get(67);
             
            }
            
            else if (radiantNazwa5.equals(nazwaPhoenix)){
                
             rH5 = heroWinRateListRadiant.get(67);
             
            }
            
            if (radiantNazwa1.equals(nazwaPuck)){
                
              rH1 = heroWinRateListRadiant.get(68);                
            }
           
            else if (radiantNazwa2.equals(nazwaPuck)){
                
             rH2 = heroWinRateListRadiant.get(68);
             
            }
            
            else if (radiantNazwa3.equals(nazwaPuck)){
                
             rH3 = heroWinRateListRadiant.get(68);
             
            }
            
            else if (radiantNazwa4.equals(nazwaPuck)){
                
             rH4 = heroWinRateListRadiant.get(68);
             
            }
            
            else if (radiantNazwa5.equals(nazwaPuck)){
                
             rH5 = heroWinRateListRadiant.get(68);
             
            }
            
            if (radiantNazwa1.equals(nazwaPudge)){
                
              rH1 = heroWinRateListRadiant.get(69);                
            }
           
            else if (radiantNazwa2.equals(nazwaPudge)){
                
             rH2 = heroWinRateListRadiant.get(69);
             
            }
            
            else if (radiantNazwa3.equals(nazwaPudge)){
                
             rH3 = heroWinRateListRadiant.get(69);
             
            }
            
            else if (radiantNazwa4.equals(nazwaPudge)){
                
             rH4 = heroWinRateListRadiant.get(69);
             
            }
            
            else if (radiantNazwa5.equals(nazwaPudge)){
                
             rH5 = heroWinRateListRadiant.get(69);
             
            }
            
            if (radiantNazwa1.equals(nazwaPugna)){
                
              rH1 = heroWinRateListRadiant.get(70);                
            }
           
            else if (radiantNazwa2.equals(nazwaPugna)){
                
             rH2 = heroWinRateListRadiant.get(70);
             
            }
            
            else if (radiantNazwa3.equals(nazwaPugna)){
                
             rH3 = heroWinRateListRadiant.get(70);
             
            }
            
            else if (radiantNazwa4.equals(nazwaPugna)){
                
             rH4 = heroWinRateListRadiant.get(70);
             
            }
            
            else if (radiantNazwa5.equals(nazwaPugna)){
                
             rH5 = heroWinRateListRadiant.get(70);
             
            }
            
            if (radiantNazwa1.equals(nazwaQueenOfPain)){
                
              rH1 = heroWinRateListRadiant.get(71);                
            }
           
            else if (radiantNazwa2.equals(nazwaQueenOfPain)){
                
             rH2 = heroWinRateListRadiant.get(71);
             
            }
            
            else if (radiantNazwa3.equals(nazwaQueenOfPain)){
                
             rH3 = heroWinRateListRadiant.get(71);
             
            }
            
            else if (radiantNazwa4.equals(nazwaQueenOfPain)){
                
             rH4 = heroWinRateListRadiant.get(71);
             
            }
            
            else if (radiantNazwa5.equals(nazwaQueenOfPain)){
                
             rH5 = heroWinRateListRadiant.get(71);
             
            }
            
            if (radiantNazwa1.equals(nazwaRazor)){
                
              rH1 = heroWinRateListRadiant.get(72);                
            }
           
            else if (radiantNazwa2.equals(nazwaRazor)){
                
             rH2 = heroWinRateListRadiant.get(72);
             
            }
            
            else if (radiantNazwa3.equals(nazwaRazor)){
                
             rH3 = heroWinRateListRadiant.get(72);
             
            }
            
            else if (radiantNazwa4.equals(nazwaRazor)){
                
             rH4 = heroWinRateListRadiant.get(72);
             
            }
            
            else if (radiantNazwa5.equals(nazwaRazor)){
                
             rH5 = heroWinRateListRadiant.get(72);
             
            }
            
            if (radiantNazwa1.equals(nazwaRiki)){
                
              rH1 = heroWinRateListRadiant.get(73);                
            }
           
            else if (radiantNazwa2.equals(nazwaRiki)){
                
             rH2 = heroWinRateListRadiant.get(73);
             
            }
            
            else if (radiantNazwa3.equals(nazwaRiki)){
                
             rH3 = heroWinRateListRadiant.get(73);
             
            }
            
            else if (radiantNazwa4.equals(nazwaRiki)){
                
             rH4 = heroWinRateListRadiant.get(73);
             
            }
            
            else if (radiantNazwa5.equals(nazwaRiki)){
                
             rH5 = heroWinRateListRadiant.get(73);
             
            }
              if (radiantNazwa1.equals(nazwaRubick)){
                
              rH1 = heroWinRateListRadiant.get(74); 
               
            }
           
            else if (radiantNazwa2.equals(nazwaRubick)){
                
             rH2 = heroWinRateListRadiant.get(74);
             
            }
            
            else if (radiantNazwa3.equals(nazwaRubick)){
                
             rH3 = heroWinRateListRadiant.get(74);
             
            }
            
            else if (radiantNazwa4.equals(nazwaRubick)){
                
             rH4 = heroWinRateListRadiant.get(74);
             
            }
            
            else if (radiantNazwa5.equals(nazwaRubick)){
                
             rH5 = heroWinRateListRadiant.get(74);
             
            }
            
            if (radiantNazwa1.equals(nazwaSandKing)){
                
              rH1 = heroWinRateListRadiant.get(75);                
            }
           
            else if (radiantNazwa2.equals(nazwaSandKing)){
                
             rH2 = heroWinRateListRadiant.get(75);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSandKing)){
                
             rH3 = heroWinRateListRadiant.get(75);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSandKing)){
                
             rH4 = heroWinRateListRadiant.get(75);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSandKing)){
                
             rH5 = heroWinRateListRadiant.get(75);
             
            }
            
            if (radiantNazwa1.equals(nazwaShadowDemon)){
                
              rH1 = heroWinRateListRadiant.get(76);                
            }
           
            else if (radiantNazwa2.equals(nazwaShadowDemon)){
                
             rH2 = heroWinRateListRadiant.get(76);
             
            }
            
            else if (radiantNazwa3.equals(nazwaShadowDemon)){
                
             rH3 = heroWinRateListRadiant.get(76);
             
            }
            
            else if (radiantNazwa4.equals(nazwaShadowDemon)){
                
             rH4 = heroWinRateListRadiant.get(76);
             
            }
            
            else if (radiantNazwa5.equals(nazwaShadowDemon)){
                
             rH5 = heroWinRateListRadiant.get(76);
             
            }
            
            if (radiantNazwa1.equals(nazwaShadowFiend)){
                
              rH1 = heroWinRateListRadiant.get(77);                
            }
           
            else if (radiantNazwa2.equals(nazwaShadowFiend)){
                
             rH2 = heroWinRateListRadiant.get(77);
             
            }
            
            else if (radiantNazwa3.equals(nazwaShadowFiend)){
                
             rH3 = heroWinRateListRadiant.get(77);
             
            }
            
            else if (radiantNazwa4.equals(nazwaShadowFiend)){
                
             rH4 = heroWinRateListRadiant.get(77);
             
            }
            
            else if (radiantNazwa5.equals(nazwaShadowFiend)){
                
             rH5 = heroWinRateListRadiant.get(77);
             
            }
            
            if (radiantNazwa1.equals(nazwaShadowShaman)){
                
              rH1 = heroWinRateListRadiant.get(78);                
            }
           
            else if (radiantNazwa2.equals(nazwaShadowShaman)){
                
             rH2 = heroWinRateListRadiant.get(78);
             
            }
            
            else if (radiantNazwa3.equals(nazwaShadowShaman)){
                
             rH3 = heroWinRateListRadiant.get(78);
             
            }
            
            else if (radiantNazwa4.equals(nazwaShadowShaman)){
                
             rH4 = heroWinRateListRadiant.get(78);
             
            }
            
            else if (radiantNazwa5.equals(nazwaShadowShaman)){
                
             rH5 = heroWinRateListRadiant.get(78);
             
            }
            
            if (radiantNazwa1.equals(nazwaSilencer)){
                
              rH1 = heroWinRateListRadiant.get(79);                
            }
           
            else if (radiantNazwa2.equals(nazwaSilencer)){
                
             rH2 = heroWinRateListRadiant.get(79);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSilencer)){
                
             rH3 = heroWinRateListRadiant.get(79);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSilencer)){
                
             rH4 = heroWinRateListRadiant.get(79);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSilencer)){
                
             rH5 = heroWinRateListRadiant.get(79);
             
            }
            
            if (radiantNazwa1.equals(nazwaSkywrathMage)){
                
              rH1 = heroWinRateListRadiant.get(80);                
            }
           
            else if (radiantNazwa2.equals(nazwaSkywrathMage)){
                
             rH2 = heroWinRateListRadiant.get(80);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSkywrathMage)){
                
             rH3 = heroWinRateListRadiant.get(80);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSkywrathMage)){
                
             rH4 = heroWinRateListRadiant.get(80);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSkywrathMage)){
                
             rH5 = heroWinRateListRadiant.get(80);
             
            }
            
            if (radiantNazwa1.equals(nazwaSlardar)){
                
              rH1 = heroWinRateListRadiant.get(81);                
            }
           
            else if (radiantNazwa2.equals(nazwaSlardar)){
                
             rH2 = heroWinRateListRadiant.get(81);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSlardar)){
                
             rH3 = heroWinRateListRadiant.get(81);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSlardar)){
                
             rH4 = heroWinRateListRadiant.get(81);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSlardar)){
                
             rH5 = heroWinRateListRadiant.get(81);
             
            }
            
            if (radiantNazwa1.equals(nazwaSlark)){
                
              rH1 = heroWinRateListRadiant.get(82);                
            }
           
            else if (radiantNazwa2.equals(nazwaSlark)){
                
             rH2 = heroWinRateListRadiant.get(82);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSlark)){
                
             rH3 = heroWinRateListRadiant.get(82);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSlark)){
                
             rH4 = heroWinRateListRadiant.get(82);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSlark)){
                
             rH5 = heroWinRateListRadiant.get(82);
             
            }
            
            if (radiantNazwa1.equals(nazwaSniper)){
                
              rH1 = heroWinRateListRadiant.get(83);                
            }
           
            else if (radiantNazwa2.equals(nazwaSniper)){
                
             rH2 = heroWinRateListRadiant.get(83);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSniper)){
                
             rH3 = heroWinRateListRadiant.get(83);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSniper)){
                
             rH4 = heroWinRateListRadiant.get(83);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSniper)){
                
             rH5 = heroWinRateListRadiant.get(83);
             
            }
            
            if (radiantNazwa1.equals(nazwaSpectre)){
                
              rH1 = heroWinRateListRadiant.get(84);                
            }
           
            else if (radiantNazwa2.equals(nazwaSpectre)){
                
             rH2 = heroWinRateListRadiant.get(84);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSpectre)){
                
             rH3 = heroWinRateListRadiant.get(84);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSpectre)){
                
             rH4 = heroWinRateListRadiant.get(84);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSpectre)){
                
             rH5 = heroWinRateListRadiant.get(84);
             
            }
            
            if (radiantNazwa1.equals(nazwaSpiritBreaker)){
                
              rH1 = heroWinRateListRadiant.get(85);                
            }
           
            else if (radiantNazwa2.equals(nazwaSpiritBreaker)){
                
             rH2 = heroWinRateListRadiant.get(85);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSpiritBreaker)){
                
             rH3 = heroWinRateListRadiant.get(85);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSpiritBreaker)){
                
             rH4 = heroWinRateListRadiant.get(85);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSpiritBreaker)){
                
             rH5 = heroWinRateListRadiant.get(85);
             
            }
            
            if (radiantNazwa1.equals(nazwaStormSpirit)){
                
              rH1 = heroWinRateListRadiant.get(86);                
            }
           
            else if (radiantNazwa2.equals(nazwaStormSpirit)){
                
             rH2 = heroWinRateListRadiant.get(86);
             
            }
            
            else if (radiantNazwa3.equals(nazwaStormSpirit)){
                
             rH3 = heroWinRateListRadiant.get(86);
             
            }
            
            else if (radiantNazwa4.equals(nazwaStormSpirit)){
                
             rH4 = heroWinRateListRadiant.get(86);
             
            }
            
            else if (radiantNazwa5.equals(nazwaStormSpirit)){
                
             rH5 = heroWinRateListRadiant.get(86);
             
            }
            
            if (radiantNazwa1.equals(nazwaSven)){
                
              rH1 = heroWinRateListRadiant.get(87);                
            }
           
            else if (radiantNazwa2.equals(nazwaSven)){
                
             rH2 = heroWinRateListRadiant.get(87);
             
            }
            
            else if (radiantNazwa3.equals(nazwaSven)){
                
             rH3 = heroWinRateListRadiant.get(87);
             
            }
            
            else if (radiantNazwa4.equals(nazwaSven)){
                
             rH4 = heroWinRateListRadiant.get(87);
             
            }
            
            else if (radiantNazwa5.equals(nazwaSven)){
                
             rH5 = heroWinRateListRadiant.get(87);
             
            }
            
            if (radiantNazwa1.equals(nazwaTechies)){
                
              rH1 = heroWinRateListRadiant.get(88);                
            }
           
            else if (radiantNazwa2.equals(nazwaTechies)){
                
             rH2 = heroWinRateListRadiant.get(88);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTechies)){
                
             rH3 = heroWinRateListRadiant.get(88);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTechies)){
                
             rH4 = heroWinRateListRadiant.get(88);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTechies)){
                
             rH5 = heroWinRateListRadiant.get(88);
             
            }
            
            if (radiantNazwa1.equals(nazwaTemplarAssassin)){
                
              rH1 = heroWinRateListRadiant.get(89);                
            }
           
            else if (radiantNazwa2.equals(nazwaTemplarAssassin)){
                
             rH2 = heroWinRateListRadiant.get(89);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTemplarAssassin)){
                
             rH3 = heroWinRateListRadiant.get(89);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTemplarAssassin)){
                
             rH4 = heroWinRateListRadiant.get(89);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTemplarAssassin)){
                
             rH5 = heroWinRateListRadiant.get(89);
             
            }
            
            if (radiantNazwa1.equals(nazwaTerrorblade)){
                
              rH1 = heroWinRateListRadiant.get(90);                
            }
           
            else if (radiantNazwa2.equals(nazwaTerrorblade)){
                
             rH2 = heroWinRateListRadiant.get(90);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTerrorblade)){
                
             rH3 = heroWinRateListRadiant.get(90);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTerrorblade)){
                
             rH4 = heroWinRateListRadiant.get(90);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTerrorblade)){
                
             rH5 = heroWinRateListRadiant.get(90);
             
            }
            
            if (radiantNazwa1.equals(nazwaTidehunter)){
                
              rH1 = heroWinRateListRadiant.get(91);                
            }
           
            else if (radiantNazwa2.equals(nazwaTidehunter)){
                
             rH2 = heroWinRateListRadiant.get(91);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTidehunter)){
                
             rH3 = heroWinRateListRadiant.get(91);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTidehunter)){
                
             rH4 = heroWinRateListRadiant.get(91);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTidehunter)){
                
             rH5 = heroWinRateListRadiant.get(91);
             
            }
            
            if (radiantNazwa1.equals(nazwaTimbersaw)){
                
              rH1 = heroWinRateListRadiant.get(92);                
            }
           
            else if (radiantNazwa2.equals(nazwaTimbersaw)){
                
             rH2 = heroWinRateListRadiant.get(92);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTimbersaw)){
                
             rH3 = heroWinRateListRadiant.get(92);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTimbersaw)){
                
             rH4 = heroWinRateListRadiant.get(92);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTimbersaw)){
                
             rH5 = heroWinRateListRadiant.get(92);
             
            }
            
            if (radiantNazwa1.equals(nazwaTinker)){
                
              rH1 = heroWinRateListRadiant.get(93);                
            }
           
            else if (radiantNazwa2.equals(nazwaTinker)){
                
             rH2 = heroWinRateListRadiant.get(93);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTinker)){
                
             rH3 = heroWinRateListRadiant.get(93);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTinker)){
                
             rH4 = heroWinRateListRadiant.get(93);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTinker)){
                
             rH5 = heroWinRateListRadiant.get(93);
             
            }
            
            if (radiantNazwa1.equals(nazwaTiny)){
                
              rH1 = heroWinRateListRadiant.get(94);                
            }
           
            else if (radiantNazwa2.equals(nazwaTiny)){
                
             rH2 = heroWinRateListRadiant.get(94);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTiny)){
                
             rH3 = heroWinRateListRadiant.get(94);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTiny)){
                
             rH4 = heroWinRateListRadiant.get(94);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTiny)){
                
             rH5 = heroWinRateListRadiant.get(94);
             
            }
            
            if (radiantNazwa1.equals(nazwaTreantProtector)){
                
              rH1 = heroWinRateListRadiant.get(95);                
            }
           
            else if (radiantNazwa2.equals(nazwaTreantProtector)){
                
             rH2 = heroWinRateListRadiant.get(95);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTreantProtector)){
                
             rH3 = heroWinRateListRadiant.get(95);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTreantProtector)){
                
             rH4 = heroWinRateListRadiant.get(95);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTreantProtector)){
                
             rH5 = heroWinRateListRadiant.get(95);
             
            }
            
            if (radiantNazwa1.equals(nazwaTrollWarlord)){
                
              rH1 = heroWinRateListRadiant.get(96);                
            }
           
            else if (radiantNazwa2.equals(nazwaTrollWarlord)){
                
             rH2 = heroWinRateListRadiant.get(96);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTrollWarlord)){
                
             rH3 = heroWinRateListRadiant.get(96);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTrollWarlord)){
                
             rH4 = heroWinRateListRadiant.get(96);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTrollWarlord)){
                
             rH5 = heroWinRateListRadiant.get(96);
             
            }
            
            if (radiantNazwa1.equals(nazwaTusk)){
                
              rH1 = heroWinRateListRadiant.get(97);                
            }
           
            else if (radiantNazwa2.equals(nazwaTusk)){
                
             rH2 = heroWinRateListRadiant.get(97);
             
            }
            
            else if (radiantNazwa3.equals(nazwaTusk)){
                
             rH3 = heroWinRateListRadiant.get(97);
             
            }
            
            else if (radiantNazwa4.equals(nazwaTusk)){
                
             rH4 = heroWinRateListRadiant.get(97);
             
            }
            
            else if (radiantNazwa5.equals(nazwaTusk)){
                
             rH5 = heroWinRateListRadiant.get(97);
             
            }
            
            if (radiantNazwa1.equals(nazwaUndying)){
                
              rH1 = heroWinRateListRadiant.get(98);                
            }
           
            else if (radiantNazwa2.equals(nazwaUndying)){
                
             rH2 = heroWinRateListRadiant.get(98);
             
            }
            
            else if (radiantNazwa3.equals(nazwaUndying)){
                
             rH3 = heroWinRateListRadiant.get(98);
             
            }
            
            else if (radiantNazwa4.equals(nazwaUndying)){
                
             rH4 = heroWinRateListRadiant.get(98);
             
            }
            
            else if (radiantNazwa5.equals(nazwaUndying)){
                
             rH5 = heroWinRateListRadiant.get(98);
             
            }
            
            if (radiantNazwa1.equals(nazwaUrsa)){
                
              rH1 = heroWinRateListRadiant.get(99);                
            }
           
            else if (radiantNazwa2.equals(nazwaUrsa)){
                
             rH2 = heroWinRateListRadiant.get(99);
             
            }
            
            else if (radiantNazwa3.equals(nazwaUrsa)){
                
             rH3 = heroWinRateListRadiant.get(99);
             
            }
            
            else if (radiantNazwa4.equals(nazwaUrsa)){
                
             rH4 = heroWinRateListRadiant.get(99);
             
            }
            
            else if (radiantNazwa5.equals(nazwaUrsa)){
                
             rH5 = heroWinRateListRadiant.get(99);
             
            }
            
            if (radiantNazwa1.equals(nazwaVengefulSpirit)){
                
              rH1 = heroWinRateListRadiant.get(100);                
            }
           
            else if (radiantNazwa2.equals(nazwaVengefulSpirit)){
                
             rH2 = heroWinRateListRadiant.get(100);
             
            }
            
            else if (radiantNazwa3.equals(nazwaVengefulSpirit)){
                
             rH3 = heroWinRateListRadiant.get(100);
             
            }
            
            else if (radiantNazwa4.equals(nazwaVengefulSpirit)){
                
             rH4 = heroWinRateListRadiant.get(100);
             
            }
            
            else if (radiantNazwa5.equals(nazwaVengefulSpirit)){
                
             rH5 = heroWinRateListRadiant.get(100);
             
            }
            
            if (radiantNazwa1.equals(nazwaVenomancer)){
                
              rH1 = heroWinRateListRadiant.get(101);                
            }
           
            else if (radiantNazwa2.equals(nazwaVenomancer)){
                
             rH2 = heroWinRateListRadiant.get(101);
             
            }
            
            else if (radiantNazwa3.equals(nazwaVenomancer)){
                
             rH3 = heroWinRateListRadiant.get(101);
             
            }
            
            else if (radiantNazwa4.equals(nazwaVenomancer)){
                
             rH4 = heroWinRateListRadiant.get(101);
             
            }
            
            else if (radiantNazwa5.equals(nazwaVenomancer)){
                
             rH5 = heroWinRateListRadiant.get(101);
             
            }
            
            if (radiantNazwa1.equals(nazwaViper)){
                
              rH1 = heroWinRateListRadiant.get(102);                
            }
           
            else if (radiantNazwa2.equals(nazwaViper)){
                
             rH2 = heroWinRateListRadiant.get(102);
             
            }
            
            else if (radiantNazwa3.equals(nazwaViper)){
                
             rH3 = heroWinRateListRadiant.get(102);
             
            }
            
            else if (radiantNazwa4.equals(nazwaViper)){
                
             rH4 = heroWinRateListRadiant.get(102);
             
            }
            
            else if (radiantNazwa5.equals(nazwaViper)){
                
             rH5 = heroWinRateListRadiant.get(102);
             
            }
            
            if (radiantNazwa1.equals(nazwaVisage)){
                
              rH1 = heroWinRateListRadiant.get(103);                
            }
           
            else if (radiantNazwa2.equals(nazwaVisage)){
                
             rH2 = heroWinRateListRadiant.get(103);
             
            }
            
            else if (radiantNazwa3.equals(nazwaVisage)){
                
             rH3 = heroWinRateListRadiant.get(103);
             
            }
            
            else if (radiantNazwa4.equals(nazwaVisage)){
                
             rH4 = heroWinRateListRadiant.get(103);
             
            }
            
            else if (radiantNazwa5.equals(nazwaVisage)){
                
             rH5 = heroWinRateListRadiant.get(103);
             
            }
            
            if (radiantNazwa1.equals(nazwaWarlock)){
                
              rH1 = heroWinRateListRadiant.get(104);                
            }
           
            else if (radiantNazwa2.equals(nazwaWarlock)){
                
             rH2 = heroWinRateListRadiant.get(104);
             
            }
            
            else if (radiantNazwa3.equals(nazwaWarlock)){
                
             rH3 = heroWinRateListRadiant.get(104);
             
            }
            
            else if (radiantNazwa4.equals(nazwaWarlock)){
                
             rH4 = heroWinRateListRadiant.get(104);
             
            }
            
            else if (radiantNazwa5.equals(nazwaWarlock)){
                
             rH5 = heroWinRateListRadiant.get(104);
             
            }
            
            if (radiantNazwa1.equals(nazwaWeaver)){
                
              rH1 = heroWinRateListRadiant.get(105);                
            }
           
            else if (radiantNazwa2.equals(nazwaWeaver)){
                
             rH2 = heroWinRateListRadiant.get(105);
             
            }
            
            else if (radiantNazwa3.equals(nazwaWeaver)){
                
             rH3 = heroWinRateListRadiant.get(105);
             
            }
            
            else if (radiantNazwa4.equals(nazwaWeaver)){
                
             rH4 = heroWinRateListRadiant.get(105);
             
            }
            
            else if (radiantNazwa5.equals(nazwaWeaver)){
                
             rH5 = heroWinRateListRadiant.get(105);
             
            }
            
            if (radiantNazwa1.equals(nazwaWindranger)){
                
              rH1 = heroWinRateListRadiant.get(106);                
            }
           
            else if (radiantNazwa2.equals(nazwaWindranger)){
                
             rH2 = heroWinRateListRadiant.get(106);
             
            }
            
            else if (radiantNazwa3.equals(nazwaWindranger)){
                
             rH3 = heroWinRateListRadiant.get(106);
             
            }
            
            else if (radiantNazwa4.equals(nazwaWindranger)){
                
             rH4 = heroWinRateListRadiant.get(106);
             
            }
            
            else if (radiantNazwa5.equals(nazwaWindranger)){
                
             rH5 = heroWinRateListRadiant.get(106);
             
            }
            
            if (radiantNazwa1.equals(nazwaWinterWyvern)){
                
              rH1 = heroWinRateListRadiant.get(107);                
            }
           
            else if (radiantNazwa2.equals(nazwaWinterWyvern)){
                
             rH2 = heroWinRateListRadiant.get(107);
             
            }
            
            else if (radiantNazwa3.equals(nazwaWinterWyvern)){
                
             rH3 = heroWinRateListRadiant.get(107);
             
            }
            
            else if (radiantNazwa4.equals(nazwaWinterWyvern)){
                
             rH4 = heroWinRateListRadiant.get(107);
             
            }
            
            else if (radiantNazwa5.equals(nazwaWinterWyvern)){
                
             rH5 = heroWinRateListRadiant.get(107);
             
            }
            
            if (radiantNazwa1.equals(nazwaWitchDoctor)){
                
              rH1 = heroWinRateListRadiant.get(108);                
            }
           
            else if (radiantNazwa2.equals(nazwaWitchDoctor)){
                
             rH2 = heroWinRateListRadiant.get(108);
             
            }
            
            else if (radiantNazwa3.equals(nazwaWitchDoctor)){
                
             rH3 = heroWinRateListRadiant.get(108);
             
            }
            
            else if (radiantNazwa4.equals(nazwaWitchDoctor)){
                
             rH4 = heroWinRateListRadiant.get(108);
             
            }
            
            else if (radiantNazwa5.equals(nazwaWitchDoctor)){
                
             rH5 = heroWinRateListRadiant.get(108);
             
            }
            
            if (radiantNazwa1.equals(nazwaWraithKing)){
                
              rH1 = heroWinRateListRadiant.get(109);                
            }
           
            else if (radiantNazwa2.equals(nazwaWraithKing)){
                
             rH2 = heroWinRateListRadiant.get(109);
             
            }
            
            else if (radiantNazwa3.equals(nazwaWraithKing)){
                
             rH3 = heroWinRateListRadiant.get(109);
             
            }
            
            else if (radiantNazwa4.equals(nazwaWraithKing)){
                
             rH4 = heroWinRateListRadiant.get(109);
             
            }
            
            else if (radiantNazwa5.equals(nazwaWraithKing)){
                
             rH5 = heroWinRateListRadiant.get(109);
             
            }
            
            if (radiantNazwa1.equals(nazwaZeus)){
                
              rH1 = heroWinRateListRadiant.get(110);                
            }
           
            else if (radiantNazwa2.equals(nazwaZeus)){
                
             rH2 = heroWinRateListRadiant.get(110);
             
            }
            
            else if (radiantNazwa3.equals(nazwaZeus)){
                
             rH3 = heroWinRateListRadiant.get(110);
             
            }
            
            else if (radiantNazwa4.equals(nazwaZeus)){
                
             rH4 = heroWinRateListRadiant.get(110);
             
            }
            
            else if (radiantNazwa5.equals(nazwaZeus)){
                
             rH5 = heroWinRateListRadiant.get(110);
             
            }
            
            //
            //
            // pobieranie wartosci wyjsciowych dla Dire
            //
            //
           
                       if (direNazwa1.equals(nazwaAbaddon)){
                
              dH1 = heroWinRateListDire.get(0);                
            }
           
            else if (direNazwa2.equals(nazwaAbaddon)){
                
             dH2 = heroWinRateListDire.get(0);
             
            }
            
            else if (direNazwa3.equals(nazwaAbaddon)){
                
             dH3 = heroWinRateListDire.get(0);
             
            }
            
            else if (direNazwa4.equals(nazwaAbaddon)){
                
             dH4 = heroWinRateListDire.get(0);
             
            }
            
            else if (direNazwa5.equals(nazwaAbaddon)){
                
             dH5 = heroWinRateListDire.get(0);
             
            }
           
           if (direNazwa1.equals(nazwaAlchemist)){
                
              dH1 = heroWinRateListDire.get(1);                
            }
           
            else if (direNazwa2.equals(nazwaAlchemist)){
                
             dH2 = heroWinRateListDire.get(1);
             
            }
            
            else if (direNazwa3.equals(nazwaAlchemist)){
                
             dH3 = heroWinRateListDire.get(1);
             
            }
            
            else if (direNazwa4.equals(nazwaAlchemist)){
                
             dH4 = heroWinRateListDire.get(1);
             
            }
            
            else if (direNazwa5.equals(nazwaAlchemist)){
                
             dH5 = heroWinRateListDire.get(1);
             
            }
           
            if (direNazwa1.equals(nazwaAncientApparition)){
                
              dH1 = heroWinRateListDire.get(2);                
            }
           
            else if (direNazwa2.equals(nazwaAncientApparition)){
                
             dH2 = heroWinRateListDire.get(2);
             
            }
            
            else if (direNazwa3.equals(nazwaAncientApparition)){
                
             dH3 = heroWinRateListDire.get(2);
             
            }
            
            else if (direNazwa4.equals(nazwaAncientApparition)){
                
             dH4 = heroWinRateListDire.get(2);
             
            }
            
            else if (direNazwa5.equals(nazwaAncientApparition)){
                
             dH5 = heroWinRateListDire.get(2);
             
            }
            
            if (direNazwa1.equals(nazwaAntiMage)){
                
              dH1 = heroWinRateListDire.get(3);                
            }
           
            else if (direNazwa2.equals(nazwaAntiMage)){
                
             dH2 = heroWinRateListDire.get(3);
             
            }
            
            else if (direNazwa3.equals(nazwaAntiMage)){
                
             dH3 = heroWinRateListDire.get(3);
             
            }
            
            else if (direNazwa4.equals(nazwaAntiMage)){
                
             dH4 = heroWinRateListDire.get(3);
             
            }
            
            else if (direNazwa5.equals(nazwaAntiMage)){
                
             dH5 = heroWinRateListDire.get(3);
             
            }
            
            if (direNazwa1.equals(nazwaArcWarden)){
                
              dH1 = heroWinRateListDire.get(4);                
            }
           
            else if (direNazwa2.equals(nazwaArcWarden)){
                
             dH2 = heroWinRateListDire.get(4);
             
            }
            
            else if (direNazwa3.equals(nazwaArcWarden)){
                
             dH3 = heroWinRateListDire.get(4);
             
            }
            
            else if (direNazwa4.equals(nazwaArcWarden)){
                
             dH4 = heroWinRateListDire.get(4);
             
            }
            
            else if (direNazwa5.equals(nazwaArcWarden)){
                
             dH5 = heroWinRateListDire.get(4);
             
            }
            
            if (direNazwa1.equals(nazwaAxe)){
                
              dH1 = heroWinRateListDire.get(5);                
            }
           
            else if (direNazwa2.equals(nazwaAxe)){
                
             dH2 = heroWinRateListDire.get(5);
             
            }
            
            else if (direNazwa3.equals(nazwaAxe)){
                
             dH3 = heroWinRateListDire.get(5);
             
            }
            
            else if (direNazwa4.equals(nazwaAxe)){
                
             dH4 = heroWinRateListDire.get(5);
             
            }
            
            else if (direNazwa5.equals(nazwaAxe)){
                
             dH5 = heroWinRateListDire.get(5);
             
            }
            
            if (direNazwa1.equals(nazwaBane)){
                
              dH1 = heroWinRateListDire.get(6);                
            }
           
            else if (direNazwa2.equals(nazwaBane)){
                
             dH2 = heroWinRateListDire.get(6);
             
            }
            
            else if (direNazwa3.equals(nazwaBane)){
                
             dH3 = heroWinRateListDire.get(6);
             
            }
            
            else if (direNazwa4.equals(nazwaBane)){
                
             dH4 = heroWinRateListDire.get(6);
             
            }
            
            else if (direNazwa5.equals(nazwaBane)){
                
             dH5 = heroWinRateListDire.get(6);
             
            }
            
            if (direNazwa1.equals(nazwaBatrider)){
                
              dH1 = heroWinRateListDire.get(7);                
            }
           
            else if (direNazwa2.equals(nazwaBatrider)){
                
             dH2 = heroWinRateListDire.get(7);
             
            }
            
            else if (direNazwa3.equals(nazwaBatrider)){
                
             dH3 = heroWinRateListDire.get(7);
             
            }
            
            else if (direNazwa4.equals(nazwaBatrider)){
                
             dH4 = heroWinRateListDire.get(7);
             
            }
            
            else if (direNazwa5.equals(nazwaBatrider)){
                
             dH5 = heroWinRateListDire.get(7);
             
            }
            
            if (direNazwa1.equals(nazwaBeastmaster)){
                
              dH1 = heroWinRateListDire.get(8);                
            }
           
            else if (direNazwa2.equals(nazwaBeastmaster)){
                
             dH2 = heroWinRateListDire.get(8);
             
            }
            
            else if (direNazwa3.equals(nazwaBeastmaster)){
                
             dH3 = heroWinRateListDire.get(8);
             
            }
            
            else if (direNazwa4.equals(nazwaBeastmaster)){
                
             dH4 = heroWinRateListDire.get(8);
             
            }
            
            else if (direNazwa5.equals(nazwaBeastmaster)){
                
             dH5 = heroWinRateListDire.get(8);
             
            }
            
            if (direNazwa1.equals(nazwaBloodseeker)){
                
              dH1 = heroWinRateListDire.get(9);                
            }
           
            else if (direNazwa2.equals(nazwaBloodseeker)){
                
             dH2 = heroWinRateListDire.get(9);
             
            }
            
            else if (direNazwa3.equals(nazwaBloodseeker)){
                
             dH3 = heroWinRateListDire.get(9);
             
            }
            
            else if (direNazwa4.equals(nazwaBloodseeker)){
                
             dH4 = heroWinRateListDire.get(9);
             
            }
            
            else if (direNazwa5.equals(nazwaBloodseeker)){
                
             dH5 = heroWinRateListDire.get(9);
             
            }
            
            if (direNazwa1.equals(nazwaBountyHunter)){
                
              dH1 = heroWinRateListDire.get(10);                
            }
           
            else if (direNazwa2.equals(nazwaBountyHunter)){
                
             dH2 = heroWinRateListDire.get(10);
             
            }
            
            else if (direNazwa3.equals(nazwaBountyHunter)){
                
             dH3 = heroWinRateListDire.get(10);
             
            }
            
            else if (direNazwa4.equals(nazwaBountyHunter)){
                
             dH4 = heroWinRateListDire.get(10);
             
            }
            
            else if (direNazwa5.equals(nazwaBountyHunter)){
                
             dH5 = heroWinRateListDire.get(10);
             
            }
            
            if (direNazwa1.equals(nazwaBrewmaster)){
                
              dH1 = heroWinRateListDire.get(11);                
            }
           
            else if (direNazwa2.equals(nazwaBrewmaster)){
                
             dH2 = heroWinRateListDire.get(11);
             
            }
            
            else if (direNazwa3.equals(nazwaBrewmaster)){
                
             dH3 = heroWinRateListDire.get(11);
             
            }
            
            else if (direNazwa4.equals(nazwaBrewmaster)){
                
             dH4 = heroWinRateListDire.get(11);
             
            }
            
            else if (direNazwa5.equals(nazwaBrewmaster)){
                
             dH5 = heroWinRateListDire.get(11);
             
            }
            
            if (direNazwa1.equals(nazwaBristleback)){
                
              dH1 = heroWinRateListDire.get(12);                
            }
           
            else if (direNazwa2.equals(nazwaBristleback)){
                
             dH2 = heroWinRateListDire.get(12);
             
            }
            
            else if (direNazwa3.equals(nazwaBristleback)){
                
             dH3 = heroWinRateListDire.get(12);
             
            }
            
            else if (direNazwa4.equals(nazwaBristleback)){
                
             dH4 = heroWinRateListDire.get(12);
             
            }
            
            else if (direNazwa5.equals(nazwaBristleback)){
                
             dH5 = heroWinRateListDire.get(12);
             
            }
            
            if (direNazwa1.equals(nazwaBroodmother)){
                
              dH1 = heroWinRateListDire.get(13);                
            }
           
            else if (direNazwa2.equals(nazwaBroodmother)){
                
             dH2 = heroWinRateListDire.get(13);
             
            }
            
            else if (direNazwa3.equals(nazwaBroodmother)){
                
             dH3 = heroWinRateListDire.get(13);
             
            }
            
            else if (direNazwa4.equals(nazwaBroodmother)){
                
             dH4 = heroWinRateListDire.get(13);
             
            }
            
            else if (direNazwa5.equals(nazwaBroodmother)){
                
             dH5 = heroWinRateListDire.get(13);
             
            }
            
            if (direNazwa1.equals(nazwaCentaurWarrunner)){
                
              dH1 = heroWinRateListDire.get(14);                
            }
           
            else if (direNazwa2.equals(nazwaCentaurWarrunner)){
                
             dH2 = heroWinRateListDire.get(14);
             
            }
            
            else if (direNazwa3.equals(nazwaCentaurWarrunner)){
                
             dH3 = heroWinRateListDire.get(14);
             
            }
            
            else if (direNazwa4.equals(nazwaCentaurWarrunner)){
                
             dH4 = heroWinRateListDire.get(14);
             
            }
            
            else if (direNazwa5.equals(nazwaCentaurWarrunner)){
                
             dH5 = heroWinRateListDire.get(14);
             
            }
            
            if (direNazwa1.equals(nazwaChaosKnight)){
                
              dH1 = heroWinRateListDire.get(15);                
            }
           
            else if (direNazwa2.equals(nazwaChaosKnight)){
                
             dH2 = heroWinRateListDire.get(15);
             
            }
            
            else if (direNazwa3.equals(nazwaChaosKnight)){
                
             dH3 = heroWinRateListDire.get(15);
             
            }
            
            else if (direNazwa4.equals(nazwaChaosKnight)){
                
             dH4 = heroWinRateListDire.get(15);
             
            }
            
            else if (direNazwa5.equals(nazwaChaosKnight)){
                
             dH5 = heroWinRateListDire.get(15);
             
            }
            
            if (direNazwa1.equals(nazwaChen)){
                
              dH1 = heroWinRateListDire.get(16);                
            }
           
            else if (direNazwa2.equals(nazwaChen)){
                
             dH2 = heroWinRateListDire.get(16);
             
            }
            
            else if (direNazwa3.equals(nazwaChen)){
                
             dH3 = heroWinRateListDire.get(16);
             
            }
            
            else if (direNazwa4.equals(nazwaChen)){
                
             dH4 = heroWinRateListDire.get(16);
             
            }
            
            else if (direNazwa5.equals(nazwaChen)){
                
             dH5 = heroWinRateListDire.get(16);
             
            }
            
            if (direNazwa1.equals(nazwaClinkz)){
                
              dH1 = heroWinRateListDire.get(17);                
            }
           
            else if (direNazwa2.equals(nazwaClinkz)){
                
             dH2 = heroWinRateListDire.get(17);
             
            }
            
            else if (direNazwa3.equals(nazwaClinkz)){
                
             dH3 = heroWinRateListDire.get(17);
             
            }
            
            else if (direNazwa4.equals(nazwaClinkz)){
                
             dH4 = heroWinRateListDire.get(17);
             
            }
            
            else if (direNazwa5.equals(nazwaClinkz)){
                
             dH5 = heroWinRateListDire.get(17);
             
            }
            
            if (direNazwa1.equals(nazwaClockwerk)){
                
              dH1 = heroWinRateListDire.get(18);                
            }
           
            else if (direNazwa2.equals(nazwaClockwerk)){
                
             dH2 = heroWinRateListDire.get(18);
             
            }
            
            else if (direNazwa3.equals(nazwaClockwerk)){
                
             dH3 = heroWinRateListDire.get(18);
             
            }
            
            else if (direNazwa4.equals(nazwaClockwerk)){
                
             dH4 = heroWinRateListDire.get(18);
             
            }
            
            else if (direNazwa5.equals(nazwaClockwerk)){
                
             dH5 = heroWinRateListDire.get(18);
             
            }
            
            if (direNazwa1.equals(nazwaCrystalMaiden)){
                
              dH1 = heroWinRateListDire.get(19);                
            }
           
            else if (direNazwa2.equals(nazwaCrystalMaiden)){
                
             dH2 = heroWinRateListDire.get(19);
             
            }
            
            else if (direNazwa3.equals(nazwaCrystalMaiden)){
                
             dH3 = heroWinRateListDire.get(19);
             
            }
            
            else if (direNazwa4.equals(nazwaCrystalMaiden)){
                
             dH4 = heroWinRateListDire.get(19);
             
            }
            
            else if (direNazwa5.equals(nazwaCrystalMaiden)){
                
             dH5 = heroWinRateListDire.get(19);
             
            }
            
            if (direNazwa1.equals(nazwaDarkSeer)){
                
              dH1 = heroWinRateListDire.get(20);                
            }
           
            else if (direNazwa2.equals(nazwaDarkSeer)){
                
             dH2 = heroWinRateListDire.get(20);
             
            }
            
            else if (direNazwa3.equals(nazwaDarkSeer)){
                
             dH3 = heroWinRateListDire.get(20);
             
            }
            
            else if (direNazwa4.equals(nazwaDarkSeer)){
                
             dH4 = heroWinRateListDire.get(20);
             
            }
            
            else if (direNazwa5.equals(nazwaDarkSeer)){
                
             dH5 = heroWinRateListDire.get(20);
             
            }
            
            if (direNazwa1.equals(nazwaDazzle)){
                
              dH1 = heroWinRateListDire.get(21);                
            }
           
            else if (direNazwa2.equals(nazwaDazzle)){
                
             dH2 = heroWinRateListDire.get(21);
             
            }
            
            else if (direNazwa3.equals(nazwaDazzle)){
                
             dH3 = heroWinRateListDire.get(21);
             
            }
            
            else if (direNazwa4.equals(nazwaDazzle)){
                
             dH4 = heroWinRateListDire.get(21);
             
            }
            
            else if (direNazwa5.equals(nazwaDazzle)){
                
             dH5 = heroWinRateListDire.get(21);
             
            }
            
            if (direNazwa1.equals(nazwaDeathProphet)){
                
              dH1 = heroWinRateListDire.get(22);                
            }
           
            else if (direNazwa2.equals(nazwaDeathProphet)){
                
             dH2 = heroWinRateListDire.get(22);
             
            }
            
            else if (direNazwa3.equals(nazwaDeathProphet)){
                
             dH3 = heroWinRateListDire.get(22);
             
            }
            
            else if (direNazwa4.equals(nazwaDeathProphet)){
                
             dH4 = heroWinRateListDire.get(22);
             
            }
            
            else if (direNazwa5.equals(nazwaDeathProphet)){
                
             dH5 = heroWinRateListDire.get(22);
             
            }
            
            if (direNazwa1.equals(nazwaDisruptor)){
                
              dH1 = heroWinRateListDire.get(23);                
            }
           
            else if (direNazwa2.equals(nazwaDisruptor)){
                
             dH2 = heroWinRateListDire.get(23);
             
            }
            
            else if (direNazwa3.equals(nazwaDisruptor)){
                
             dH3 = heroWinRateListDire.get(23);
             
            }
            
            else if (direNazwa4.equals(nazwaDisruptor)){
                
             dH4 = heroWinRateListDire.get(23);
             
            }
            
            else if (direNazwa5.equals(nazwaDisruptor)){
                
             dH5 = heroWinRateListDire.get(23);
             
            }
            
            if (direNazwa1.equals(nazwaDoom)){
                
              dH1 = heroWinRateListDire.get(24);                
            }
           
            else if (direNazwa2.equals(nazwaDoom)){
                
             dH2 = heroWinRateListDire.get(24);
             
            }
            
            else if (direNazwa3.equals(nazwaDoom)){
                
             dH3 = heroWinRateListDire.get(24);
             
            }
            
            else if (direNazwa4.equals(nazwaDoom)){
                
             dH4 = heroWinRateListDire.get(24);
             
            }
            
            else if (direNazwa5.equals(nazwaDoom)){
                
             dH5 = heroWinRateListDire.get(24);
             
            }
            
            if (direNazwa1.equals(nazwaDk)){
                
              dH1 = heroWinRateListDire.get(25);                
            }
           
            else if (direNazwa2.equals(nazwaDk)){
                
             dH2 = heroWinRateListDire.get(25);
             
            }
            
            else if (direNazwa3.equals(nazwaDk)){
                
             dH3 = heroWinRateListDire.get(25);
             
            }
            
            else if (direNazwa4.equals(nazwaDk)){
                
             dH4 = heroWinRateListDire.get(25);
             
            }
            
            else if (direNazwa5.equals(nazwaDk)){
                
             dH5 = heroWinRateListDire.get(25);
             
            }
            
            if (direNazwa1.equals(nazwaDrowRanger)){
                
              dH1 = heroWinRateListDire.get(26);                
            }
           
            else if (direNazwa2.equals(nazwaDrowRanger)){
                
             dH2 = heroWinRateListDire.get(26);
             
            }
            
            else if (direNazwa3.equals(nazwaDrowRanger)){
                
             dH3 = heroWinRateListDire.get(26);
             
            }
            
            else if (direNazwa4.equals(nazwaDrowRanger)){
                
             dH4 = heroWinRateListDire.get(26);
             
            }
            
            else if (direNazwa5.equals(nazwaDrowRanger)){
                
             dH5 = heroWinRateListDire.get(26);
             
            }
            
            if (direNazwa1.equals(nazwaEarthSpirit)){
                
              dH1 = heroWinRateListDire.get(27);                
            }
           
            else if (direNazwa2.equals(nazwaEarthSpirit)){
                
             dH2 = heroWinRateListDire.get(27);
             
            }
            
            else if (direNazwa3.equals(nazwaEarthSpirit)){
                
             dH3 = heroWinRateListDire.get(27);
             
            }
            
            else if (direNazwa4.equals(nazwaEarthSpirit)){
                
             dH4 = heroWinRateListDire.get(27);
             
            }
            
            else if (direNazwa5.equals(nazwaEarthSpirit)){
                
             dH5 = heroWinRateListDire.get(27);
             
            }
            
            if (direNazwa1.equals(nazwaEs)){
                
              dH1 = heroWinRateListDire.get(28);                
            }
           
            else if (direNazwa2.equals(nazwaEs)){
                
             dH2 = heroWinRateListDire.get(28);
             
            }
            
            else if (direNazwa3.equals(nazwaEs)){
                
             dH3 = heroWinRateListDire.get(28);
             
            }
            
            else if (direNazwa4.equals(nazwaEs)){
                
             dH4 = heroWinRateListDire.get(28);
             
            }
            
            else if (direNazwa5.equals(nazwaEs)){
                
             dH5 = heroWinRateListDire.get(28);
             
            }
            
            if (direNazwa1.equals(nazwaElderTitan)){
                
              dH1 = heroWinRateListDire.get(29);                
            }
           
            else if (direNazwa2.equals(nazwaElderTitan)){
                
             dH2 = heroWinRateListDire.get(29);
             
            }
            
            else if (direNazwa3.equals(nazwaElderTitan)){
                
             dH3 = heroWinRateListDire.get(29);
             
            }
            
            else if (direNazwa4.equals(nazwaElderTitan)){
                
             dH4 = heroWinRateListDire.get(29);
             
            }
            
            else if (direNazwa5.equals(nazwaElderTitan)){
                
             dH5 = heroWinRateListDire.get(29);
             
            }
            
            if (direNazwa1.equals(nazwaEmberSpirit)){
                
              dH1 = heroWinRateListDire.get(30);                
            }
           
            else if (direNazwa2.equals(nazwaEmberSpirit)){
                
             dH2 = heroWinRateListDire.get(30);
             
            }
            
            else if (direNazwa3.equals(nazwaEmberSpirit)){
                
             dH3 = heroWinRateListDire.get(30);
             
            }
            
            else if (direNazwa4.equals(nazwaEmberSpirit)){
                
             dH4 = heroWinRateListDire.get(30);
             
            }
            
            else if (direNazwa5.equals(nazwaEmberSpirit)){
                
             dH5 = heroWinRateListDire.get(30);
             
            }
            
            if (direNazwa1.equals(nazwaEnchantress)){
                
              dH1 = heroWinRateListDire.get(31);                
            }
           
            else if (direNazwa2.equals(nazwaEnchantress)){
                
             dH2 = heroWinRateListDire.get(31);
             
            }
            
            else if (direNazwa3.equals(nazwaEnchantress)){
                
             dH3 = heroWinRateListDire.get(31);
             
            }
            
            else if (direNazwa4.equals(nazwaEnchantress)){
                
             dH4 = heroWinRateListDire.get(31);
             
            }
            
            else if (direNazwa5.equals(nazwaEnchantress)){
                
             dH5 = heroWinRateListDire.get(31);
             
            }
            
            if (direNazwa1.equals(nazwaEnigma)){
                
              dH1 = heroWinRateListDire.get(32);                
            }
           
            else if (direNazwa2.equals(nazwaEnigma)){
                
             dH2 = heroWinRateListDire.get(32);
             
            }
            
            else if (direNazwa3.equals(nazwaEnigma)){
                
             dH3 = heroWinRateListDire.get(32);
             
            }
            
            else if (direNazwa4.equals(nazwaEnigma)){
                
             dH4 = heroWinRateListDire.get(32);
             
            }
            
            else if (direNazwa5.equals(nazwaEnigma)){
                
             dH5 = heroWinRateListDire.get(32);
             
            }
            
            if (direNazwa1.equals(nazwaVoid)){
                
              dH1 = heroWinRateListDire.get(33);                
            }
           
            else if (direNazwa2.equals(nazwaVoid)){
                
             dH2 = heroWinRateListDire.get(33);
             
            }
            
            else if (direNazwa3.equals(nazwaVoid)){
                
             dH3 = heroWinRateListDire.get(33);
             
            }
            
            else if (direNazwa4.equals(nazwaVoid)){
                
             dH4 = heroWinRateListDire.get(33);
             
            }
            
            else if (direNazwa5.equals(nazwaVoid)){
                
             dH5 = heroWinRateListDire.get(33);
             
            }
            
            if (direNazwa1.equals(nazwaGyrocopter)){
                
              dH1 = heroWinRateListDire.get(34);                
            }
           
            else if (direNazwa2.equals(nazwaGyrocopter)){
                
             dH2 = heroWinRateListDire.get(34);
             
            }
            
            else if (direNazwa3.equals(nazwaGyrocopter)){
                
             dH3 = heroWinRateListDire.get(34);
             
            }
            
            else if (direNazwa4.equals(nazwaGyrocopter)){
                
             dH4 = heroWinRateListDire.get(34);
             
            }
            
            else if (direNazwa5.equals(nazwaGyrocopter)){
                
             dH5 = heroWinRateListDire.get(34);
             
            }
            
            if (direNazwa1.equals(nazwaHuskar)){
                
              dH1 = heroWinRateListDire.get(35);                
            }
           
            else if (direNazwa2.equals(nazwaHuskar)){
                
             dH2 = heroWinRateListDire.get(35);
             
            }
            
            else if (direNazwa3.equals(nazwaHuskar)){
                
             dH3 = heroWinRateListDire.get(35);
             
            }
            
            else if (direNazwa4.equals(nazwaHuskar)){
                
             dH4 = heroWinRateListDire.get(35);
             
            }
            
            else if (direNazwa5.equals(nazwaHuskar)){
                
             dH5 = heroWinRateListDire.get(35);
             
            }
            
            if (direNazwa1.equals(nazwaInvoker)){
                
              dH1 = heroWinRateListDire.get(36);                
            }
           
            else if (direNazwa2.equals(nazwaInvoker)){
                
             dH2 = heroWinRateListDire.get(36);
             
            }
            
            else if (direNazwa3.equals(nazwaInvoker)){
                
             dH3 = heroWinRateListDire.get(36);
             
            }
            
            else if (direNazwa4.equals(nazwaInvoker)){
                
             dH4 = heroWinRateListDire.get(36);
             
            }
            
            else if (direNazwa5.equals(nazwaInvoker)){
                
             dH5 = heroWinRateListDire.get(36);
             
            }
            
            if (direNazwa1.equals(nazwaIo)){
                
              dH1 = heroWinRateListDire.get(37);                
            }
           
            else if (direNazwa2.equals(nazwaIo)){
                
             dH2 = heroWinRateListDire.get(37);
             
            }
            
            else if (direNazwa3.equals(nazwaIo)){
                
             dH3 = heroWinRateListDire.get(37);
             
            }
            
            else if (direNazwa4.equals(nazwaIo)){
                
             dH4 = heroWinRateListDire.get(37);
             
            }
            
            else if (direNazwa5.equals(nazwaIo)){
                
             dH5 = heroWinRateListDire.get(37);
             
            }
            
            if (direNazwa1.equals(nazwaJakiro)){
                
              dH1 = heroWinRateListDire.get(38);                
            }
           
            else if (direNazwa2.equals(nazwaJakiro)){
                
             dH2 = heroWinRateListDire.get(38);
             
            }
            
            else if (direNazwa3.equals(nazwaJakiro)){
                
             dH3 = heroWinRateListDire.get(38);
             
            }
            
            else if (direNazwa4.equals(nazwaJakiro)){
                
             dH4 = heroWinRateListDire.get(38);
             
            }
            
            else if (direNazwa5.equals(nazwaJakiro)){
                
             dH5 = heroWinRateListDire.get(38);
             
            }
            
            if (direNazwa1.equals(nazwaJuggernaut)){
                
              dH1 = heroWinRateListDire.get(39);                
            }
           
            else if (direNazwa2.equals(nazwaJuggernaut)){
                
             dH2 = heroWinRateListDire.get(39);
             
            }
            
            else if (direNazwa3.equals(nazwaJuggernaut)){
                
             dH3 = heroWinRateListDire.get(39);
             
            }
            
            else if (direNazwa4.equals(nazwaJuggernaut)){
                
             dH4 = heroWinRateListDire.get(39);
             
            }
            
            else if (direNazwa5.equals(nazwaJuggernaut)){
                
             dH5 = heroWinRateListDire.get(39);
             
            }
            
            if (direNazwa1.equals(nazwaKeeperOfTheLight)){
                
              dH1 = heroWinRateListDire.get(40);                
            }
           
            else if (direNazwa2.equals(nazwaKeeperOfTheLight)){
                
             dH2 = heroWinRateListDire.get(40);
             
            }
            
            else if (direNazwa3.equals(nazwaKeeperOfTheLight)){
                
             dH3 = heroWinRateListDire.get(40);
             
            }
            
            else if (direNazwa4.equals(nazwaKeeperOfTheLight)){
                
             dH4 = heroWinRateListDire.get(40);
             
            }
            
            else if (direNazwa5.equals(nazwaKeeperOfTheLight)){
                
             dH5 = heroWinRateListDire.get(40);
             
            }
            
            if (direNazwa1.equals(nazwaKunkka)){
                
              dH1 = heroWinRateListDire.get(41);                
            }
           
            else if (direNazwa2.equals(nazwaKunkka)){
                
             dH2 = heroWinRateListDire.get(41);
             
            }
            
            else if (direNazwa3.equals(nazwaKunkka)){
                
             dH3 = heroWinRateListDire.get(41);
             
            }
            
            else if (direNazwa4.equals(nazwaKunkka)){
                
             dH4 = heroWinRateListDire.get(41);
             
            }
            
            else if (direNazwa5.equals(nazwaKunkka)){
                
             dH5 = heroWinRateListDire.get(41);
             
            }
            
            if (direNazwa1.equals(nazwaLegionCommander)){
                
              dH1 = heroWinRateListDire.get(42);                
            }
           
            else if (direNazwa2.equals(nazwaLegionCommander)){
                
             dH2 = heroWinRateListDire.get(42);
             
            }
            
            else if (direNazwa3.equals(nazwaLegionCommander)){
                
             dH3 = heroWinRateListDire.get(42);
             
            }
            
            else if (direNazwa4.equals(nazwaLegionCommander)){
                
             dH4 = heroWinRateListDire.get(42);
             
            }
            
            else if (direNazwa5.equals(nazwaLegionCommander)){
                
             dH5 = heroWinRateListDire.get(42);
             
            }
            
            if (direNazwa1.equals(nazwaLeshrac)){
                
              dH1 = heroWinRateListDire.get(43);                
            }
           
            else if (direNazwa2.equals(nazwaLeshrac)){
                
             dH2 = heroWinRateListDire.get(43);
             
            }
            
            else if (direNazwa3.equals(nazwaLeshrac)){
                
             dH3 = heroWinRateListDire.get(43);
             
            }
            
            else if (direNazwa4.equals(nazwaLeshrac)){
                
             dH4 = heroWinRateListDire.get(43);
             
            }
            
            else if (direNazwa5.equals(nazwaLeshrac)){
                
             dH5 = heroWinRateListDire.get(43);
             
            }
            
            if (direNazwa1.equals(nazwaLich)){
                
              dH1 = heroWinRateListDire.get(44);                
            }
           
            else if (direNazwa2.equals(nazwaLich)){
                
             dH2 = heroWinRateListDire.get(44);
             
            }
            
            else if (direNazwa3.equals(nazwaLich)){
                
             dH3 = heroWinRateListDire.get(44);
             
            }
            
            else if (direNazwa4.equals(nazwaLich)){
                
             dH4 = heroWinRateListDire.get(44);
             
            }
            
            else if (direNazwa5.equals(nazwaLich)){
                
             dH5 = heroWinRateListDire.get(44);
             
            }
            
            if (direNazwa1.equals(nazwaLifeStealer)){
                
              dH1 = heroWinRateListDire.get(45);                
            }
           
            else if (direNazwa2.equals(nazwaLifeStealer)){
                
             dH2 = heroWinRateListDire.get(45);
             
            }
            
            else if (direNazwa3.equals(nazwaLifeStealer)){
                
             dH3 = heroWinRateListDire.get(45);
             
            }
            
            else if (direNazwa4.equals(nazwaLifeStealer)){
                
             dH4 = heroWinRateListDire.get(45);
             
            }
            
            else if (direNazwa5.equals(nazwaLifeStealer)){
                
             dH5 = heroWinRateListDire.get(45);
             
            }
            
            if (direNazwa1.equals(nazwaLina)){
                
              dH1 = heroWinRateListDire.get(46);                
            }
           
            else if (direNazwa2.equals(nazwaLina)){
                
             dH2 = heroWinRateListDire.get(46);
             
            }
            
            else if (direNazwa3.equals(nazwaLina)){
                
             dH3 = heroWinRateListDire.get(46);
             
            }
            
            else if (direNazwa4.equals(nazwaLina)){
                
             dH4 = heroWinRateListDire.get(46);
             
            }
            
            else if (direNazwa5.equals(nazwaLina)){
                
             dH5 = heroWinRateListDire.get(46);
             
            }
            
            if (direNazwa1.equals(nazwaLion)){
                
              dH1 = heroWinRateListDire.get(47);                
            }
           
            else if (direNazwa2.equals(nazwaLion)){
                
             dH2 = heroWinRateListDire.get(47);
             
            }
            
            else if (direNazwa3.equals(nazwaLion)){
                
             dH3 = heroWinRateListDire.get(47);
             
            }
            
            else if (direNazwa4.equals(nazwaLion)){
                
             dH4 = heroWinRateListDire.get(47);
             
            }
            
            else if (direNazwa5.equals(nazwaLion)){
                
             dH5 = heroWinRateListDire.get(47);
             
            }
            
            if (direNazwa1.equals(nazwaLoneDruid)){
                
              dH1 = heroWinRateListDire.get(48);                
            }
           
            else if (direNazwa2.equals(nazwaLoneDruid)){
                
             dH2 = heroWinRateListDire.get(48);
             
            }
            
            else if (direNazwa3.equals(nazwaLoneDruid)){
                
             dH3 = heroWinRateListDire.get(48);
             
            }
            
            else if (direNazwa4.equals(nazwaLoneDruid)){
                
             dH4 = heroWinRateListDire.get(48);
             
            }
            
            else if (direNazwa5.equals(nazwaLoneDruid)){
                
             dH5 = heroWinRateListDire.get(48);
             
            }
            
            if (direNazwa1.equals(nazwaLuna)){
                
              dH1 = heroWinRateListDire.get(49);                
            }
           
            else if (direNazwa2.equals(nazwaLuna)){
                
             dH2 = heroWinRateListDire.get(49);
             
            }
            
            else if (direNazwa3.equals(nazwaLuna)){
                
             dH3 = heroWinRateListDire.get(49);
             
            }
            
            else if (direNazwa4.equals(nazwaLuna)){
                
             dH4 = heroWinRateListDire.get(49);
             
            }
            
            else if (direNazwa5.equals(nazwaLuna)){
                
             dH5 = heroWinRateListDire.get(49);
             
            }
            
            if (direNazwa1.equals(nazwaLycan)){
                
              dH1 = heroWinRateListDire.get(50);                
            }
           
            else if (direNazwa2.equals(nazwaLycan)){
                
             dH2 = heroWinRateListDire.get(50);
             
            }
            
            else if (direNazwa3.equals(nazwaLycan)){
                
             dH3 = heroWinRateListDire.get(50);
             
            }
            
            else if (direNazwa4.equals(nazwaLycan)){
                
             dH4 = heroWinRateListDire.get(50);
             
            }
            
            else if (direNazwa5.equals(nazwaLycan)){
                
             dH5 = heroWinRateListDire.get(50);
             
            }
            
            if (direNazwa1.equals(nazwaMagnus)){
                
              dH1 = heroWinRateListDire.get(51);                
            }
           
            else if (direNazwa2.equals(nazwaMagnus)){
                
             dH2 = heroWinRateListDire.get(51);
             
            }
            
            else if (direNazwa3.equals(nazwaMagnus)){
                
             dH3 = heroWinRateListDire.get(51);
             
            }
            
            else if (direNazwa4.equals(nazwaMagnus)){
                
             dH4 = heroWinRateListDire.get(51);
             
            }
            
            else if (direNazwa5.equals(nazwaMagnus)){
                
             dH5 = heroWinRateListDire.get(51);
             
            }
            
            if (direNazwa1.equals(nazwaMedusa)){
                
              dH1 = heroWinRateListDire.get(52);                
            }
           
            else if (direNazwa2.equals(nazwaMedusa)){
                
             dH2 = heroWinRateListDire.get(52);
             
            }
            
            else if (direNazwa3.equals(nazwaMedusa)){
                
             dH3 = heroWinRateListDire.get(52);
             
            }
            
            else if (direNazwa4.equals(nazwaMedusa)){
                
             dH4 = heroWinRateListDire.get(52);
             
            }
            
            else if (direNazwa5.equals(nazwaMedusa)){
                
             dH5 = heroWinRateListDire.get(52);
             
            }
            
            if (direNazwa1.equals(nazwaMeepo)){
                
              dH1 = heroWinRateListDire.get(53);                
            }
           
            else if (direNazwa2.equals(nazwaMeepo)){
                
             dH2 = heroWinRateListDire.get(53);
             
            }
            
            else if (direNazwa3.equals(nazwaMeepo)){
                
             dH3 = heroWinRateListDire.get(53);
             
            }
            
            else if (direNazwa4.equals(nazwaMeepo)){
                
             dH4 = heroWinRateListDire.get(53);
             
            }
            
            else if (direNazwa5.equals(nazwaMeepo)){
                
             dH5 = heroWinRateListDire.get(53);
             
            }
            
            if (direNazwa1.equals(nazwaMirana)){
                
              dH1 = heroWinRateListDire.get(54);                
            }
           
            else if (direNazwa2.equals(nazwaMirana)){
                
             dH2 = heroWinRateListDire.get(54);
             
            }
            
            else if (direNazwa3.equals(nazwaMirana)){
                
             dH3 = heroWinRateListDire.get(54);
             
            }
            
            else if (direNazwa4.equals(nazwaMirana)){
                
             dH4 = heroWinRateListDire.get(54);
             
            }
            
            else if (direNazwa5.equals(nazwaMirana)){
                
             dH5 = heroWinRateListDire.get(54);
             
            }
            
            if (direNazwa1.equals(nazwaMorphling)){
                
              dH1 = heroWinRateListDire.get(55);                
            }
           
            else if (direNazwa2.equals(nazwaMorphling)){
                
             dH2 = heroWinRateListDire.get(55);
             
            }
            
            else if (direNazwa3.equals(nazwaMorphling)){
                
             dH3 = heroWinRateListDire.get(55);
             
            }
            
            else if (direNazwa4.equals(nazwaMorphling)){
                
             dH4 = heroWinRateListDire.get(55);
             
            }
            
            else if (direNazwa5.equals(nazwaMorphling)){
                
             dH5 = heroWinRateListDire.get(55);
             
            }
            
            if (direNazwa1.equals(nazwaNagaSiren)){
                
              dH1 = heroWinRateListDire.get(56);                
            }
           
            else if (direNazwa2.equals(nazwaNagaSiren)){
                
             dH2 = heroWinRateListDire.get(56);
             
            }
            
            else if (direNazwa3.equals(nazwaNagaSiren)){
                
             dH3 = heroWinRateListDire.get(56);
             
            }
            
            else if (direNazwa4.equals(nazwaNagaSiren)){
                
             dH4 = heroWinRateListDire.get(56);
             
            }
            
            else if (direNazwa5.equals(nazwaNagaSiren)){
                
             dH5 = heroWinRateListDire.get(56);
             
            }
            
            if (direNazwa1.equals(nazwaNaturesProphet)){
                
              dH1 = heroWinRateListDire.get(57);                
            }
           
            else if (direNazwa2.equals(nazwaNaturesProphet)){
                
             dH2 = heroWinRateListDire.get(57);
             
            }
            
            else if (direNazwa3.equals(nazwaNaturesProphet)){
                
             dH3 = heroWinRateListDire.get(57);
             
            }
            
            else if (direNazwa4.equals(nazwaNaturesProphet)){
                
             dH4 = heroWinRateListDire.get(57);
             
            }
            
            else if (direNazwa5.equals(nazwaNaturesProphet)){
                
             dH5 = heroWinRateListDire.get(57);
             
            }
            
            if (direNazwa1.equals(nazwaNecrophos)){
                
              dH1 = heroWinRateListDire.get(58);                
            }
           
            else if (direNazwa2.equals(nazwaNecrophos)){
                
             dH2 = heroWinRateListDire.get(58);
             
            }
            
            else if (direNazwa3.equals(nazwaNecrophos)){
                
             dH3 = heroWinRateListDire.get(58);
             
            }
            
            else if (direNazwa4.equals(nazwaNecrophos)){
                
             dH4 = heroWinRateListDire.get(58);
             
            }
            
            else if (direNazwa5.equals(nazwaNecrophos)){
                
             dH5 = heroWinRateListDire.get(58);
             
            }
            
            if (direNazwa1.equals(nazwaNightStalker)){
                
              dH1 = heroWinRateListDire.get(59);                
            }
           
            else if (direNazwa2.equals(nazwaNightStalker)){
                
             dH2 = heroWinRateListDire.get(59);
             
            }
            
            else if (direNazwa3.equals(nazwaNightStalker)){
                
             dH3 = heroWinRateListDire.get(59);
             
            }
            
            else if (direNazwa4.equals(nazwaNightStalker)){
                
             dH4 = heroWinRateListDire.get(59);
             
            }
            
            else if (direNazwa5.equals(nazwaNightStalker)){
                
             dH5 = heroWinRateListDire.get(59);
             
            }
            
            if (direNazwa1.equals(nazwaNyxAssassin)){
                
              dH1 = heroWinRateListDire.get(60);                
            }
           
            else if (direNazwa2.equals(nazwaNyxAssassin)){
                
             dH2 = heroWinRateListDire.get(60);
             
            }
            
            else if (direNazwa3.equals(nazwaNyxAssassin)){
                
             dH3 = heroWinRateListDire.get(60);
             
            }
            
            else if (direNazwa4.equals(nazwaNyxAssassin)){
                
             dH4 = heroWinRateListDire.get(60);
             
            }
            
            else if (direNazwa5.equals(nazwaNyxAssassin)){
                
             dH5 = heroWinRateListDire.get(60);
             
            }
            
            if (direNazwa1.equals(nazwaOgreMagi)){
                
              dH1 = heroWinRateListDire.get(61);                
            }
           
            else if (direNazwa2.equals(nazwaOgreMagi)){
                
             dH2 = heroWinRateListDire.get(61);
             
            }
            
            else if (direNazwa3.equals(nazwaOgreMagi)){
                
             dH3 = heroWinRateListDire.get(61);
             
            }
            
            else if (direNazwa4.equals(nazwaOgreMagi)){
                
             dH4 = heroWinRateListDire.get(61);
             
            }
            
            else if (direNazwa5.equals(nazwaOgreMagi)){
                
             dH5 = heroWinRateListDire.get(61);
             
            }
            
            if (direNazwa1.equals(nazwaOmniknight)){
                
              dH1 = heroWinRateListDire.get(62);                
            }
           
            else if (direNazwa2.equals(nazwaOmniknight)){
                
             dH2 = heroWinRateListDire.get(62);
             
            }
            
            else if (direNazwa3.equals(nazwaOmniknight)){
                
             dH3 = heroWinRateListDire.get(62);
             
            }
            
            else if (direNazwa4.equals(nazwaOmniknight)){
                
             dH4 = heroWinRateListDire.get(62);
             
            }
            
            else if (direNazwa5.equals(nazwaOmniknight)){
                
             dH5 = heroWinRateListDire.get(62);
             
            }
            
            if (direNazwa1.equals(nazwaOracle)){
                
              dH1 = heroWinRateListDire.get(63);                
            }
           
            else if (direNazwa2.equals(nazwaOracle)){
                
             dH2 = heroWinRateListDire.get(63);
             
            }
            
            else if (direNazwa3.equals(nazwaOracle)){
                
             dH3 = heroWinRateListDire.get(63);
             
            }
            
            else if (direNazwa4.equals(nazwaOracle)){
                
             dH4 = heroWinRateListDire.get(63);
             
            }
            
            else if (direNazwa5.equals(nazwaOracle)){
                
             dH5 = heroWinRateListDire.get(63);
             
            }
            
            if (direNazwa1.equals(nazwaOutworldDevourer)){
                
              dH1 = heroWinRateListDire.get(64);                
            }
           
            else if (direNazwa2.equals(nazwaOutworldDevourer)){
                
             dH2 = heroWinRateListDire.get(64);
             
            }
            
            else if (direNazwa3.equals(nazwaOutworldDevourer)){
                
             dH3 = heroWinRateListDire.get(64);
             
            }
            
            else if (direNazwa4.equals(nazwaOutworldDevourer)){
                
             dH4 = heroWinRateListDire.get(64);
             
            }
            
            else if (direNazwa5.equals(nazwaOutworldDevourer)){
                
             dH5 = heroWinRateListDire.get(64);
             
            }
            
            if (direNazwa1.equals(nazwaPhantomAssassin)){
                
              dH1 = heroWinRateListDire.get(65);                
            }
           
            else if (direNazwa2.equals(nazwaPhantomAssassin)){
                
             dH2 = heroWinRateListDire.get(65);
             
            }
            
            else if (direNazwa3.equals(nazwaPhantomAssassin)){
                
             dH3 = heroWinRateListDire.get(65);
             
            }
            
            else if (direNazwa4.equals(nazwaPhantomAssassin)){
                
             dH4 = heroWinRateListDire.get(65);
             
            }
            
            else if (direNazwa5.equals(nazwaPhantomAssassin)){
                
             dH5 = heroWinRateListDire.get(65);
             
            }
            
            if (direNazwa1.equals(nazwaPhantomLancer)){
                
              dH1 = heroWinRateListDire.get(66);                
            }
           
            else if (direNazwa2.equals(nazwaPhantomLancer)){
                
             dH2 = heroWinRateListDire.get(66);
             
            }
            
            else if (direNazwa3.equals(nazwaPhantomLancer)){
                
             dH3 = heroWinRateListDire.get(66);
             
            }
            
            else if (direNazwa4.equals(nazwaPhantomLancer)){
                
             dH4 = heroWinRateListDire.get(66);
             
            }
            
            else if (direNazwa5.equals(nazwaPhantomLancer)){
                
             dH5 = heroWinRateListDire.get(66);
             
            }
            
            if (direNazwa1.equals(nazwaPhoenix)){
                
              dH1 = heroWinRateListDire.get(67);                
            }
           
            else if (direNazwa2.equals(nazwaPhoenix)){
                
             dH2 = heroWinRateListDire.get(67);
             
            }
            
            else if (direNazwa3.equals(nazwaPhoenix)){
                
             dH3 = heroWinRateListDire.get(67);
             
            }
            
            else if (direNazwa4.equals(nazwaPhoenix)){
                
             dH4 = heroWinRateListDire.get(67);
             
            }
            
            else if (direNazwa5.equals(nazwaPhoenix)){
                
             dH5 = heroWinRateListDire.get(67);
             
            }
            
            if (direNazwa1.equals(nazwaPuck)){
                
              dH1 = heroWinRateListDire.get(68);                
            }
           
            else if (direNazwa2.equals(nazwaPuck)){
                
             dH2 = heroWinRateListDire.get(68);
             
            }
            
            else if (direNazwa3.equals(nazwaPuck)){
                
             dH3 = heroWinRateListDire.get(68);
             
            }
            
            else if (direNazwa4.equals(nazwaPuck)){
                
             dH4 = heroWinRateListDire.get(68);
             
            }
            
            else if (direNazwa5.equals(nazwaPuck)){
                
             dH5 = heroWinRateListDire.get(68);
             
            }
            
            if (direNazwa1.equals(nazwaPudge)){
                
              dH1 = heroWinRateListDire.get(69);                
            }
           
            else if (direNazwa2.equals(nazwaPudge)){
                
             dH2 = heroWinRateListDire.get(69);
             
            }
            
            else if (direNazwa3.equals(nazwaPudge)){
                
             dH3 = heroWinRateListDire.get(69);
             
            }
            
            else if (direNazwa4.equals(nazwaPudge)){
                
             dH4 = heroWinRateListDire.get(69);
             
            }
            
            else if (direNazwa5.equals(nazwaPudge)){
                
             dH5 = heroWinRateListDire.get(69);
             
            }
            
            if (direNazwa1.equals(nazwaPugna)){
                
              dH1 = heroWinRateListDire.get(70);                
            }
           
            else if (direNazwa2.equals(nazwaPugna)){
                
             dH2 = heroWinRateListDire.get(70);
             
            }
            
            else if (direNazwa3.equals(nazwaPugna)){
                
             dH3 = heroWinRateListDire.get(70);
             
            }
            
            else if (direNazwa4.equals(nazwaPugna)){
                
             dH4 = heroWinRateListDire.get(70);
             
            }
            
            else if (direNazwa5.equals(nazwaPugna)){
                
             dH5 = heroWinRateListDire.get(70);
             
            }
            
            if (direNazwa1.equals(nazwaQueenOfPain)){
                
              dH1 = heroWinRateListDire.get(71);                
            }
           
            else if (direNazwa2.equals(nazwaQueenOfPain)){
                
             dH2 = heroWinRateListDire.get(71);
             
            }
            
            else if (direNazwa3.equals(nazwaQueenOfPain)){
                
             dH3 = heroWinRateListDire.get(71);
             
            }
            
            else if (direNazwa4.equals(nazwaQueenOfPain)){
                
             dH4 = heroWinRateListDire.get(71);
             
            }
            
            else if (direNazwa5.equals(nazwaQueenOfPain)){
                
             dH5 = heroWinRateListDire.get(71);
             
            }
            
            if (direNazwa1.equals(nazwaRazor)){
                
              dH1 = heroWinRateListDire.get(72);                
            }
           
            else if (direNazwa2.equals(nazwaRazor)){
                
             dH2 = heroWinRateListDire.get(72);
             
            }
            
            else if (direNazwa3.equals(nazwaRazor)){
                
             dH3 = heroWinRateListDire.get(72);
             
            }
            
            else if (direNazwa4.equals(nazwaRazor)){
                
             dH4 = heroWinRateListDire.get(72);
             
            }
            
            else if (direNazwa5.equals(nazwaRazor)){
                
             dH5 = heroWinRateListDire.get(72);
             
            }
            
            if (direNazwa1.equals(nazwaRiki)){
                
              dH1 = heroWinRateListDire.get(73);                
            }
           
            else if (direNazwa2.equals(nazwaRiki)){
                
             dH2 = heroWinRateListDire.get(73);
             
            }
            
            else if (direNazwa3.equals(nazwaRiki)){
                
             dH3 = heroWinRateListDire.get(73);
             
            }
            
            else if (direNazwa4.equals(nazwaRiki)){
                
             dH4 = heroWinRateListDire.get(73);
             
            }
            
            else if (direNazwa5.equals(nazwaRiki)){
                
             dH5 = heroWinRateListDire.get(73);
             
            }
              if (direNazwa1.equals(nazwaRubick)){
                
              dH1 = heroWinRateListDire.get(74); 
               
            }
           
            else if (direNazwa2.equals(nazwaRubick)){
                
             dH2 = heroWinRateListDire.get(74);
             
            }
            
            else if (direNazwa3.equals(nazwaRubick)){
                
             dH3 = heroWinRateListDire.get(74);
             
            }
            
            else if (direNazwa4.equals(nazwaRubick)){
                
             dH4 = heroWinRateListDire.get(74);
             
            }
            
            else if (direNazwa5.equals(nazwaRubick)){
                
             dH5 = heroWinRateListDire.get(74);
             
            }
            
            if (direNazwa1.equals(nazwaSandKing)){
                
              dH1 = heroWinRateListDire.get(75);                
            }
           
            else if (direNazwa2.equals(nazwaSandKing)){
                
             dH2 = heroWinRateListDire.get(75);
             
            }
            
            else if (direNazwa3.equals(nazwaSandKing)){
                
             dH3 = heroWinRateListDire.get(75);
             
            }
            
            else if (direNazwa4.equals(nazwaSandKing)){
                
             dH4 = heroWinRateListDire.get(75);
             
            }
            
            else if (direNazwa5.equals(nazwaSandKing)){
                
             dH5 = heroWinRateListDire.get(75);
             
            }
            
            if (direNazwa1.equals(nazwaShadowDemon)){
                
              dH1 = heroWinRateListDire.get(76);                
            }
           
            else if (direNazwa2.equals(nazwaShadowDemon)){
                
             dH2 = heroWinRateListDire.get(76);
             
            }
            
            else if (direNazwa3.equals(nazwaShadowDemon)){
                
             dH3 = heroWinRateListDire.get(76);
             
            }
            
            else if (direNazwa4.equals(nazwaShadowDemon)){
                
             dH4 = heroWinRateListDire.get(76);
             
            }
            
            else if (direNazwa5.equals(nazwaShadowDemon)){
                
             dH5 = heroWinRateListDire.get(76);
             
            }
            
            if (direNazwa1.equals(nazwaShadowFiend)){
                
              dH1 = heroWinRateListDire.get(77);                
            }
           
            else if (direNazwa2.equals(nazwaShadowFiend)){
                
             dH2 = heroWinRateListDire.get(77);
             
            }
            
            else if (direNazwa3.equals(nazwaShadowFiend)){
                
             dH3 = heroWinRateListDire.get(77);
             
            }
            
            else if (direNazwa4.equals(nazwaShadowFiend)){
                
             dH4 = heroWinRateListDire.get(77);
             
            }
            
            else if (direNazwa5.equals(nazwaShadowFiend)){
                
             dH5 = heroWinRateListDire.get(77);
             
            }
            
            if (direNazwa1.equals(nazwaShadowShaman)){
                
              dH1 = heroWinRateListDire.get(78);                
            }
           
            else if (direNazwa2.equals(nazwaShadowShaman)){
                
             dH2 = heroWinRateListDire.get(78);
             
            }
            
            else if (direNazwa3.equals(nazwaShadowShaman)){
                
             dH3 = heroWinRateListDire.get(78);
             
            }
            
            else if (direNazwa4.equals(nazwaShadowShaman)){
                
             dH4 = heroWinRateListDire.get(78);
             
            }
            
            else if (direNazwa5.equals(nazwaShadowShaman)){
                
             dH5 = heroWinRateListDire.get(78);
             
            }
            
            if (direNazwa1.equals(nazwaSilencer)){
                
              dH1 = heroWinRateListDire.get(79);                
            }
           
            else if (direNazwa2.equals(nazwaSilencer)){
                
             dH2 = heroWinRateListDire.get(79);
             
            }
            
            else if (direNazwa3.equals(nazwaSilencer)){
                
             dH3 = heroWinRateListDire.get(79);
             
            }
            
            else if (direNazwa4.equals(nazwaSilencer)){
                
             dH4 = heroWinRateListDire.get(79);
             
            }
            
            else if (direNazwa5.equals(nazwaSilencer)){
                
             dH5 = heroWinRateListDire.get(79);
             
            }
            
            if (direNazwa1.equals(nazwaSkywrathMage)){
                
              dH1 = heroWinRateListDire.get(80);                
            }
           
            else if (direNazwa2.equals(nazwaSkywrathMage)){
                
             dH2 = heroWinRateListDire.get(80);
             
            }
            
            else if (direNazwa3.equals(nazwaSkywrathMage)){
                
             dH3 = heroWinRateListDire.get(80);
             
            }
            
            else if (direNazwa4.equals(nazwaSkywrathMage)){
                
             dH4 = heroWinRateListDire.get(80);
             
            }
            
            else if (direNazwa5.equals(nazwaSkywrathMage)){
                
             dH5 = heroWinRateListDire.get(80);
             
            }
            
            if (direNazwa1.equals(nazwaSlardar)){
                
              dH1 = heroWinRateListDire.get(81);                
            }
           
            else if (direNazwa2.equals(nazwaSlardar)){
                
             dH2 = heroWinRateListDire.get(81);
             
            }
            
            else if (direNazwa3.equals(nazwaSlardar)){
                
             dH3 = heroWinRateListDire.get(81);
             
            }
            
            else if (direNazwa4.equals(nazwaSlardar)){
                
             dH4 = heroWinRateListDire.get(81);
             
            }
            
            else if (direNazwa5.equals(nazwaSlardar)){
                
             dH5 = heroWinRateListDire.get(81);
             
            }
            
            if (direNazwa1.equals(nazwaSlark)){
                
              dH1 = heroWinRateListDire.get(82);                
            }
           
            else if (direNazwa2.equals(nazwaSlark)){
                
             dH2 = heroWinRateListDire.get(82);
             
            }
            
            else if (direNazwa3.equals(nazwaSlark)){
                
             dH3 = heroWinRateListDire.get(82);
             
            }
            
            else if (direNazwa4.equals(nazwaSlark)){
                
             dH4 = heroWinRateListDire.get(82);
             
            }
            
            else if (direNazwa5.equals(nazwaSlark)){
                
             dH5 = heroWinRateListDire.get(82);
             
            }
            
            if (direNazwa1.equals(nazwaSniper)){
                
              dH1 = heroWinRateListDire.get(83);                
            }
           
            else if (direNazwa2.equals(nazwaSniper)){
                
             dH2 = heroWinRateListDire.get(83);
             
            }
            
            else if (direNazwa3.equals(nazwaSniper)){
                
             dH3 = heroWinRateListDire.get(83);
             
            }
            
            else if (direNazwa4.equals(nazwaSniper)){
                
             dH4 = heroWinRateListDire.get(83);
             
            }
            
            else if (direNazwa5.equals(nazwaSniper)){
                
             dH5 = heroWinRateListDire.get(83);
             
            }
            
            if (direNazwa1.equals(nazwaSpectre)){
                
              dH1 = heroWinRateListDire.get(84);                
            }
           
            else if (direNazwa2.equals(nazwaSpectre)){
                
             dH2 = heroWinRateListDire.get(84);
             
            }
            
            else if (direNazwa3.equals(nazwaSpectre)){
                
             dH3 = heroWinRateListDire.get(84);
             
            }
            
            else if (direNazwa4.equals(nazwaSpectre)){
                
             dH4 = heroWinRateListDire.get(84);
             
            }
            
            else if (direNazwa5.equals(nazwaSpectre)){
                
             dH5 = heroWinRateListDire.get(84);
             
            }
            
            if (direNazwa1.equals(nazwaSpiritBreaker)){
                
              dH1 = heroWinRateListDire.get(85);                
            }
           
            else if (direNazwa2.equals(nazwaSpiritBreaker)){
                
             dH2 = heroWinRateListDire.get(85);
             
            }
            
            else if (direNazwa3.equals(nazwaSpiritBreaker)){
                
             dH3 = heroWinRateListDire.get(85);
             
            }
            
            else if (direNazwa4.equals(nazwaSpiritBreaker)){
                
             dH4 = heroWinRateListDire.get(85);
             
            }
            
            else if (direNazwa5.equals(nazwaSpiritBreaker)){
                
             dH5 = heroWinRateListDire.get(85);
             
            }
            
            if (direNazwa1.equals(nazwaStormSpirit)){
                
              dH1 = heroWinRateListDire.get(86);                
            }
           
            else if (direNazwa2.equals(nazwaStormSpirit)){
                
             dH2 = heroWinRateListDire.get(86);
             
            }
            
            else if (direNazwa3.equals(nazwaStormSpirit)){
                
             dH3 = heroWinRateListDire.get(86);
             
            }
            
            else if (direNazwa4.equals(nazwaStormSpirit)){
                
             dH4 = heroWinRateListDire.get(86);
             
            }
            
            else if (direNazwa5.equals(nazwaStormSpirit)){
                
             dH5 = heroWinRateListDire.get(86);
             
            }
            
            if (direNazwa1.equals(nazwaSven)){
                
              dH1 = heroWinRateListDire.get(87);                
            }
           
            else if (direNazwa2.equals(nazwaSven)){
                
             dH2 = heroWinRateListDire.get(87);
             
            }
            
            else if (direNazwa3.equals(nazwaSven)){
                
             dH3 = heroWinRateListDire.get(87);
             
            }
            
            else if (direNazwa4.equals(nazwaSven)){
                
             dH4 = heroWinRateListDire.get(87);
             
            }
            
            else if (direNazwa5.equals(nazwaSven)){
                
             dH5 = heroWinRateListDire.get(87);
             
            }
            
            if (direNazwa1.equals(nazwaTechies)){
                
              dH1 = heroWinRateListDire.get(88);                
            }
           
            else if (direNazwa2.equals(nazwaTechies)){
                
             dH2 = heroWinRateListDire.get(88);
             
            }
            
            else if (direNazwa3.equals(nazwaTechies)){
                
             dH3 = heroWinRateListDire.get(88);
             
            }
            
            else if (direNazwa4.equals(nazwaTechies)){
                
             dH4 = heroWinRateListDire.get(88);
             
            }
            
            else if (direNazwa5.equals(nazwaTechies)){
                
             dH5 = heroWinRateListDire.get(88);
             
            }
            
            if (direNazwa1.equals(nazwaTemplarAssassin)){
                
              dH1 = heroWinRateListDire.get(89);                
            }
           
            else if (direNazwa2.equals(nazwaTemplarAssassin)){
                
             dH2 = heroWinRateListDire.get(89);
             
            }
            
            else if (direNazwa3.equals(nazwaTemplarAssassin)){
                
             dH3 = heroWinRateListDire.get(89);
             
            }
            
            else if (direNazwa4.equals(nazwaTemplarAssassin)){
                
             dH4 = heroWinRateListDire.get(89);
             
            }
            
            else if (direNazwa5.equals(nazwaTemplarAssassin)){
                
             dH5 = heroWinRateListDire.get(89);
             
            }
            
            if (direNazwa1.equals(nazwaTerrorblade)){
                
              dH1 = heroWinRateListDire.get(90);                
            }
           
            else if (direNazwa2.equals(nazwaTerrorblade)){
                
             dH2 = heroWinRateListDire.get(90);
             
            }
            
            else if (direNazwa3.equals(nazwaTerrorblade)){
                
             dH3 = heroWinRateListDire.get(90);
             
            }
            
            else if (direNazwa4.equals(nazwaTerrorblade)){
                
             dH4 = heroWinRateListDire.get(90);
             
            }
            
            else if (direNazwa5.equals(nazwaTerrorblade)){
                
             dH5 = heroWinRateListDire.get(90);
             
            }
            
            if (direNazwa1.equals(nazwaTidehunter)){
                
              dH1 = heroWinRateListDire.get(91);                
            }
           
            else if (direNazwa2.equals(nazwaTidehunter)){
                
             dH2 = heroWinRateListDire.get(91);
             
            }
            
            else if (direNazwa3.equals(nazwaTidehunter)){
                
             dH3 = heroWinRateListDire.get(91);
             
            }
            
            else if (direNazwa4.equals(nazwaTidehunter)){
                
             dH4 = heroWinRateListDire.get(91);
             
            }
            
            else if (direNazwa5.equals(nazwaTidehunter)){
                
             dH5 = heroWinRateListDire.get(91);
             
            }
            
            if (direNazwa1.equals(nazwaTimbersaw)){
                
              dH1 = heroWinRateListDire.get(92);                
            }
           
            else if (direNazwa2.equals(nazwaTimbersaw)){
                
             dH2 = heroWinRateListDire.get(92);
             
            }
            
            else if (direNazwa3.equals(nazwaTimbersaw)){
                
             dH3 = heroWinRateListDire.get(92);
             
            }
            
            else if (direNazwa4.equals(nazwaTimbersaw)){
                
             dH4 = heroWinRateListDire.get(92);
             
            }
            
            else if (direNazwa5.equals(nazwaTimbersaw)){
                
             dH5 = heroWinRateListDire.get(92);
             
            }
            
            if (direNazwa1.equals(nazwaTinker)){
                
              dH1 = heroWinRateListDire.get(93);                
            }
           
            else if (direNazwa2.equals(nazwaTinker)){
                
             dH2 = heroWinRateListDire.get(93);
             
            }
            
            else if (direNazwa3.equals(nazwaTinker)){
                
             dH3 = heroWinRateListDire.get(93);
             
            }
            
            else if (direNazwa4.equals(nazwaTinker)){
                
             dH4 = heroWinRateListDire.get(93);
             
            }
            
            else if (direNazwa5.equals(nazwaTinker)){
                
             dH5 = heroWinRateListDire.get(93);
             
            }
            
            if (direNazwa1.equals(nazwaTiny)){
                
              dH1 = heroWinRateListDire.get(94);                
            }
           
            else if (direNazwa2.equals(nazwaTiny)){
                
             dH2 = heroWinRateListDire.get(94);
             
            }
            
            else if (direNazwa3.equals(nazwaTiny)){
                
             dH3 = heroWinRateListDire.get(94);
             
            }
            
            else if (direNazwa4.equals(nazwaTiny)){
                
             dH4 = heroWinRateListDire.get(94);
             
            }
            
            else if (direNazwa5.equals(nazwaTiny)){
                
             dH5 = heroWinRateListDire.get(94);
             
            }
            
            if (direNazwa1.equals(nazwaTreantProtector)){
                
              dH1 = heroWinRateListDire.get(95);                
            }
           
            else if (direNazwa2.equals(nazwaTreantProtector)){
                
             dH2 = heroWinRateListDire.get(95);
             
            }
            
            else if (direNazwa3.equals(nazwaTreantProtector)){
                
             dH3 = heroWinRateListDire.get(95);
             
            }
            
            else if (direNazwa4.equals(nazwaTreantProtector)){
                
             dH4 = heroWinRateListDire.get(95);
             
            }
            
            else if (direNazwa5.equals(nazwaTreantProtector)){
                
             dH5 = heroWinRateListDire.get(95);
             
            }
            
            if (direNazwa1.equals(nazwaTrollWarlord)){
                
              dH1 = heroWinRateListDire.get(96);                
            }
           
            else if (direNazwa2.equals(nazwaTrollWarlord)){
                
             dH2 = heroWinRateListDire.get(96);
             
            }
            
            else if (direNazwa3.equals(nazwaTrollWarlord)){
                
             dH3 = heroWinRateListDire.get(96);
             
            }
            
            else if (direNazwa4.equals(nazwaTrollWarlord)){
                
             dH4 = heroWinRateListDire.get(96);
             
            }
            
            else if (direNazwa5.equals(nazwaTrollWarlord)){
                
             dH5 = heroWinRateListDire.get(96);
             
            }
            
            if (direNazwa1.equals(nazwaTusk)){
                
              dH1 = heroWinRateListDire.get(97);                
            }
           
            else if (direNazwa2.equals(nazwaTusk)){
                
             dH2 = heroWinRateListDire.get(97);
             
            }
            
            else if (direNazwa3.equals(nazwaTusk)){
                
             dH3 = heroWinRateListDire.get(97);
             
            }
            
            else if (direNazwa4.equals(nazwaTusk)){
                
             dH4 = heroWinRateListDire.get(97);
             
            }
            
            else if (direNazwa5.equals(nazwaTusk)){
                
             dH5 = heroWinRateListDire.get(97);
             
            }
            
            if (direNazwa1.equals(nazwaUndying)){
                
              dH1 = heroWinRateListDire.get(98);                
            }
           
            else if (direNazwa2.equals(nazwaUndying)){
                
             dH2 = heroWinRateListDire.get(98);
             
            }
            
            else if (direNazwa3.equals(nazwaUndying)){
                
             dH3 = heroWinRateListDire.get(98);
             
            }
            
            else if (direNazwa4.equals(nazwaUndying)){
                
             dH4 = heroWinRateListDire.get(98);
             
            }
            
            else if (direNazwa5.equals(nazwaUndying)){
                
             dH5 = heroWinRateListDire.get(98);
             
            }
            
            if (direNazwa1.equals(nazwaUrsa)){
                
              dH1 = heroWinRateListDire.get(99);                
            }
           
            else if (direNazwa2.equals(nazwaUrsa)){
                
             dH2 = heroWinRateListDire.get(99);
             
            }
            
            else if (direNazwa3.equals(nazwaUrsa)){
                
             dH3 = heroWinRateListDire.get(99);
             
            }
            
            else if (direNazwa4.equals(nazwaUrsa)){
                
             dH4 = heroWinRateListDire.get(99);
             
            }
            
            else if (direNazwa5.equals(nazwaUrsa)){
                
             dH5 = heroWinRateListDire.get(99);
             
            }
            
            if (direNazwa1.equals(nazwaVengefulSpirit)){
                
              dH1 = heroWinRateListDire.get(100);                
            }
           
            else if (direNazwa2.equals(nazwaVengefulSpirit)){
                
             dH2 = heroWinRateListDire.get(100);
             
            }
            
            else if (direNazwa3.equals(nazwaVengefulSpirit)){
                
             dH3 = heroWinRateListDire.get(100);
             
            }
            
            else if (direNazwa4.equals(nazwaVengefulSpirit)){
                
             dH4 = heroWinRateListDire.get(100);
             
            }
            
            else if (direNazwa5.equals(nazwaVengefulSpirit)){
                
             dH5 = heroWinRateListDire.get(100);
             
            }
            
            if (direNazwa1.equals(nazwaVenomancer)){
                
              dH1 = heroWinRateListDire.get(101);                
            }
           
            else if (direNazwa2.equals(nazwaVenomancer)){
                
             dH2 = heroWinRateListDire.get(101);
             
            }
            
            else if (direNazwa3.equals(nazwaVenomancer)){
                
             dH3 = heroWinRateListDire.get(101);
             
            }
            
            else if (direNazwa4.equals(nazwaVenomancer)){
                
             dH4 = heroWinRateListDire.get(101);
             
            }
            
            else if (direNazwa5.equals(nazwaVenomancer)){
                
             dH5 = heroWinRateListDire.get(101);
             
            }
            
            if (direNazwa1.equals(nazwaViper)){
                
              dH1 = heroWinRateListDire.get(102);                
            }
           
            else if (direNazwa2.equals(nazwaViper)){
                
             dH2 = heroWinRateListDire.get(102);
             
            }
            
            else if (direNazwa3.equals(nazwaViper)){
                
             dH3 = heroWinRateListDire.get(102);
             
            }
            
            else if (direNazwa4.equals(nazwaViper)){
                
             dH4 = heroWinRateListDire.get(102);
             
            }
            
            else if (direNazwa5.equals(nazwaViper)){
                
             dH5 = heroWinRateListDire.get(102);
             
            }
            
            if (direNazwa1.equals(nazwaVisage)){
                
              dH1 = heroWinRateListDire.get(103);                
            }
           
            else if (direNazwa2.equals(nazwaVisage)){
                
             dH2 = heroWinRateListDire.get(103);
             
            }
            
            else if (direNazwa3.equals(nazwaVisage)){
                
             dH3 = heroWinRateListDire.get(103);
             
            }
            
            else if (direNazwa4.equals(nazwaVisage)){
                
             dH4 = heroWinRateListDire.get(103);
             
            }
            
            else if (direNazwa5.equals(nazwaVisage)){
                
             dH5 = heroWinRateListDire.get(103);
             
            }
            
            if (direNazwa1.equals(nazwaWarlock)){
                
              dH1 = heroWinRateListDire.get(104);                
            }
           
            else if (direNazwa2.equals(nazwaWarlock)){
                
             dH2 = heroWinRateListDire.get(104);
             
            }
            
            else if (direNazwa3.equals(nazwaWarlock)){
                
             dH3 = heroWinRateListDire.get(104);
             
            }
            
            else if (direNazwa4.equals(nazwaWarlock)){
                
             dH4 = heroWinRateListDire.get(104);
             
            }
            
            else if (direNazwa5.equals(nazwaWarlock)){
                
             dH5 = heroWinRateListDire.get(104);
             
            }
            
            if (direNazwa1.equals(nazwaWeaver)){
                
              dH1 = heroWinRateListDire.get(105);                
            }
           
            else if (direNazwa2.equals(nazwaWeaver)){
                
             dH2 = heroWinRateListDire.get(105);
             
            }
            
            else if (direNazwa3.equals(nazwaWeaver)){
                
             dH3 = heroWinRateListDire.get(105);
             
            }
            
            else if (direNazwa4.equals(nazwaWeaver)){
                
             dH4 = heroWinRateListDire.get(105);
             
             System.out.println(dH4);
            }
            
            else if (direNazwa5.equals(nazwaWeaver)){
                
             dH5 = heroWinRateListDire.get(105);
             
            }
            
            if (direNazwa1.equals(nazwaWindranger)){
                
              dH1 = heroWinRateListDire.get(106);                
            }
           
            else if (direNazwa2.equals(nazwaWindranger)){
                
             dH2 = heroWinRateListDire.get(106);
             
            }
            
            else if (direNazwa3.equals(nazwaWindranger)){
                
             dH3 = heroWinRateListDire.get(106);
             
            }
            
            else if (direNazwa4.equals(nazwaWindranger)){
                
             dH4 = heroWinRateListDire.get(106);
             
            }
            
            else if (direNazwa5.equals(nazwaWindranger)){
                
             dH5 = heroWinRateListDire.get(106);
             
            }
            
            if (direNazwa1.equals(nazwaWinterWyvern)){
                
              dH1 = heroWinRateListDire.get(107);                
            }
           
            else if (direNazwa2.equals(nazwaWinterWyvern)){
                
             dH2 = heroWinRateListDire.get(107);
             
            }
            
            else if (direNazwa3.equals(nazwaWinterWyvern)){
                
             dH3 = heroWinRateListDire.get(107);
             
            }
            
            else if (direNazwa4.equals(nazwaWinterWyvern)){
                
             dH4 = heroWinRateListDire.get(107);
             
            }
            
            else if (direNazwa5.equals(nazwaWinterWyvern)){
                
             dH5 = heroWinRateListDire.get(107);
             
            }
            
            if (direNazwa1.equals(nazwaWitchDoctor)){
                
              dH1 = heroWinRateListDire.get(108);                
            }
           
            else if (direNazwa2.equals(nazwaWitchDoctor)){
                
             dH2 = heroWinRateListDire.get(108);
             
            }
            
            else if (direNazwa3.equals(nazwaWitchDoctor)){
                
             dH3 = heroWinRateListDire.get(108);
             
            }
            
            else if (direNazwa4.equals(nazwaWitchDoctor)){
                
             dH4 = heroWinRateListDire.get(108);
             
            }
            
            else if (direNazwa5.equals(nazwaWitchDoctor)){
                
             dH5 = heroWinRateListDire.get(108);
             
            }
            
            if (direNazwa1.equals(nazwaWraithKing)){
                
              dH1 = heroWinRateListDire.get(109);                
            }
           
            else if (direNazwa2.equals(nazwaWraithKing)){
                
             dH2 = heroWinRateListDire.get(109);
             
            }
            
            else if (direNazwa3.equals(nazwaWraithKing)){
                
             dH3 = heroWinRateListDire.get(109);
             
            }
            
            else if (direNazwa4.equals(nazwaWraithKing)){
                
             dH4 = heroWinRateListDire.get(109);
             
            }
            
            else if (direNazwa5.equals(nazwaWraithKing)){
                
             dH5 = heroWinRateListDire.get(109);
             
            }
            
            if (direNazwa1.equals(nazwaZeus)){
                
              dH1 = heroWinRateListDire.get(110);                
            }
           
            else if (direNazwa2.equals(nazwaZeus)){
                
             dH2 = heroWinRateListDire.get(110);
             
            }
            
            else if (direNazwa3.equals(nazwaZeus)){
                
             dH3 = heroWinRateListDire.get(110);
             
            }
            
            else if (direNazwa4.equals(nazwaZeus)){
                
             dH4 = heroWinRateListDire.get(110);
             
            }
            
            else if (direNazwa5.equals(nazwaZeus)){
                
             dH5 = heroWinRateListDire.get(110);
             
            }
            
    }   
    }
    }
    
    // 
    //
    //kod sortujacy dane dla best to pick i avoid (jedyna czesc kodu w programie
    //nie mojego autorstwa (skopiowane z jakiegos opensource forum)
    //
    //
    
    class AlphanumComparator implements Comparator
{
    private boolean isDigit(char ch)
    {
        return ch >= 48 && ch <= 57;
    }

    private String getChunk(String s, int slength, int marker)
    {
        StringBuilder chunk = new StringBuilder();
        char c = s.charAt(marker);
        chunk.append(c);
        marker++;
        if (isDigit(c))
        {
            while (marker < slength)
            {
                c = s.charAt(marker);
                if (!isDigit(c))
                    break;
                chunk.append(c);
                marker++;
            }
        } else
        {
            while (marker < slength)
            {
                c = s.charAt(marker);
                if (isDigit(c))
                    break;
                chunk.append(c);
                marker++;
            }
        }
        return chunk.toString();
    }

    @Override
    public int compare(Object o1, Object o2)
    {
        if (!(o1 instanceof String) || !(o2 instanceof String))
        {
            return 0;
        }
        String s1 = (String)o1;
        String s2 = (String)o2;

        int thisMarker = 0;
        int thatMarker = 0;
        int s1Length = s1.length();
        int s2Length = s2.length();

        while (thisMarker < s1Length && thatMarker < s2Length)
        {
            String thisChunk = getChunk(s1, s1Length, thisMarker);
            thisMarker += thisChunk.length();

            String thatChunk = getChunk(s2, s2Length, thatMarker);
            thatMarker += thatChunk.length();
            int result = 0;
            if (isDigit(thisChunk.charAt(0)) && isDigit(thatChunk.charAt(0)))
            {
                
                int thisChunkLength = thisChunk.length();
                result = thisChunkLength - thatChunk.length();
                
                if (result == 0)
                {
                    for (int i = 0; i < thisChunkLength; i++)
                    {
                        result = thisChunk.charAt(i) - thatChunk.charAt(i);
                        if (result != 0)
                        {
                            return result;
                        }
                    }
                }
            } else
            {
                result = thisChunk.compareTo(thatChunk);
            }

            if (result != 0)
                return result;
        }

        return s1Length - s2Length;
    }
}

    //
    //
    //przycisk wyboru dodania ratio globalnego dla bohaterow
    //
    //
    
    class WyborRatio{
        
        URL imgRO = WyborRatio.class.getResource("ratioon.png");
        
        ImageIcon iconRO  = new ImageIcon(imgRO);
        
        public void tworzenieWyborRatio(){
            
        addWRP.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent wRPP1){ 
            
            if(przyciskAdd == false){
            
           
            addWRP.setEnabled(false);
            removeWRP.setEnabled(true);
            przyciskAdd = true;
            ratioInfo.setIcon(iconRO);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
                double zaokraglenie = addWinRates.get(i);
                double zaokraglenie1 = Math.round(zaokraglenie*100);
                double zaokraglenie2 = (zaokraglenie1/100);
                addWinRates.set(i, zaokraglenie2);
                
                
                double nowaWartoscRadiant = heroWinRateListRadiant.get(i) + addWinRates.get(i);
                heroWinRateListRadiant.set(i, nowaWartoscRadiant);
                
                    double nowaWartoscRadiant1 =  heroWinRateListRadiant.get(i);
                    double nowaWartoscRadiant2 = Math.round(nowaWartoscRadiant1*100);
                    double nowaWartoscRadiant3 = (nowaWartoscRadiant2/100);

                    heroWinRateListRadiant.set(i, nowaWartoscRadiant3);
                    
                    double nowaWartoscDire = heroWinRateListDire.get(i) + addWinRates.get(i);
                    heroWinRateListDire.set(i, nowaWartoscDire);
                
                    double nowaWartoscDire1 = heroWinRateListDire.get(i);
                    double nowaWartoscDire2 = Math.round(nowaWartoscDire1*100);
                    double nowaWartoscDire3 = (nowaWartoscDire2/100);

                    heroWinRateListDire.set(i, nowaWartoscDire3);    
               
            }
            
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
        }
        }
    });
}
    }
    
    //
    //
    //przycisk usuniecia ratio globalnego dla bohaterow
    //
    //
    
    class UsuniecieRatio{
        
        URL imgROFF = UsuniecieRatio.class.getResource("ratiooff.png");
        
        ImageIcon iconROFF  = new ImageIcon(imgROFF);
       
        public void tworzenieUsuniecieRatio(){
            
        removeWRP.addMouseListener(new MouseAdapter() {
         
        @Override
        public void mousePressed(MouseEvent rRPP1){
            
            if(przyciskAdd == true){
            
            addWRP.setEnabled(true);
            removeWRP.setEnabled(false);
            przyciskAdd = false;
            ratioInfo.setIcon(iconROFF);
            
            for (int i = 0; i < iloscBohaterow; ++i) {
                
                double zaokraglenie = addWinRates.get(i);
                double zaokraglenie1 = Math.round(zaokraglenie*100);
                double zaokraglenie2 = (zaokraglenie1/100);
                addWinRates.set(i, zaokraglenie2);
                
                double nowaWartoscRadiant = heroWinRateListRadiant.get(i) - addWinRates.get(i);
                heroWinRateListRadiant.set(i, nowaWartoscRadiant);
                
                    double nowaWartoscRadiant1 =  heroWinRateListRadiant.get(i);
                    double nowaWartoscRadiant2 = Math.round(nowaWartoscRadiant1*100);
                    double nowaWartoscRadiant3 = (nowaWartoscRadiant2/100);

                    heroWinRateListRadiant.set(i, nowaWartoscRadiant3);
                    
                    double nowaWartoscDire = heroWinRateListDire.get(i) - addWinRates.get(i);
                    heroWinRateListDire.set(i, nowaWartoscDire);
                
                    double nowaWartoscDire1 = heroWinRateListDire.get(i);
                    double nowaWartoscDire2 = Math.round(nowaWartoscDire1*100);
                    double nowaWartoscDire3 = (nowaWartoscDire2/100);

                    heroWinRateListDire.set(i, nowaWartoscDire3);
               
            }
            
            bestToPickAvoidList.sortowanieListyRadiantDire();
            
        }
        }
    });
}
    }
}
